{"remainingRequest":"E:\\XM\\his-shopping-web\\node_modules\\babel-loader\\lib\\index.js!E:\\XM\\his-shopping-web\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\XM\\his-shopping-web\\src\\permission.js","dependencies":[{"path":"E:\\XM\\his-shopping-web\\src\\permission.js","mtime":1606183812526},{"path":"E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/XM/his-shopping-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"E:/XM/his-shopping-web/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nvar _router = _interopRequireDefault(require(\"./router\"));\n\nvar _store = _interopRequireDefault(require(\"./store\"));\n\nvar _elementUi = require(\"element-ui\");\n\nvar _nprogress = _interopRequireDefault(require(\"nprogress\"));\n\nrequire(\"nprogress/nprogress.css\");\n\nvar _auth = require(\"@/utils/auth\");\n\n// progress bar\n// progress bar style\n// getToken from cookie\n_nprogress.default.configure({\n  showSpinner: false\n}); // NProgress Configuration\n// permission judge function\n\n\nfunction hasPermission(perms, permissions) {\n  if (perms.indexOf('*') >= 0) return true; // admin permission passed directly\n\n  if (!permissions) return true;\n  return perms.some(function (perm) {\n    return permissions.indexOf(perm) >= 0;\n  });\n}\n\nvar whiteList = ['/login', '/auth-redirect']; // no redirect whitelist\n\n_router.default.beforeEach(function (to, from, next) {\n  _nprogress.default.start(); // start progress bar\n\n\n  if ((0, _auth.getToken)()) {\n    // determine if there has token\n\n    /* has token*/\n    if (to.path === '/login') {\n      next({\n        path: '/'\n      });\n\n      _nprogress.default.done(); // if current page is dashboard will not trigger\tafterEach hook, so manually handle it\n\n    } else {\n      if (_store.default.getters.perms.length === 0) {\n        // 判断当前用户是否已拉取完user_info信息\n        _store.default.dispatch('GetUserInfo').then(function (res) {\n          // 拉取user_info\n          var perms = res.data.data.perms; // note: perms must be a array! such as: ['GET /aaa','POST /bbb']\n\n          _store.default.dispatch('GenerateRoutes', {\n            perms: perms\n          }).then(function () {\n            // 根据perms权限生成可访问的路由表\n            _router.default.addRoutes(_store.default.getters.addRoutes); // 动态添加可访问路由表\n\n\n            next((0, _objectSpread2.default)((0, _objectSpread2.default)({}, to), {}, {\n              replace: true\n            })); // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\n          });\n        }).catch(function (err) {\n          _store.default.dispatch('FedLogOut').then(function () {\n            _elementUi.Message.error(err || 'Verification failed, please login again');\n\n            next({\n              path: '/'\n            });\n          });\n        });\n      } else {\n        // 没有动态改变权限的需求可直接next() 删除下方权限判断 ↓\n        if (hasPermission(_store.default.getters.perms, to.meta.perms)) {\n          next();\n        } else {\n          next({\n            path: '/401',\n            replace: true,\n            query: {\n              noGoBack: true\n            }\n          });\n        } // 可删 ↑\n\n      }\n    }\n  } else {\n    /* has no token*/\n    if (whiteList.indexOf(to.path) !== -1) {\n      // 在免登录白名单，直接进入\n      next();\n    } else {\n      next(\"/login?redirect=\".concat(to.path)); // 否则全部重定向到登录页\n\n      _nprogress.default.done(); // if current page is login will not trigger afterEach hook, so manually handle it\n\n    }\n  }\n});\n\n_router.default.afterEach(function () {\n  _nprogress.default.done(); // finish progress bar\n\n});",{"version":3,"sources":["E:/XM/his-shopping-web/src/permission.js"],"names":["NProgress","configure","showSpinner","hasPermission","perms","permissions","indexOf","some","perm","whiteList","router","beforeEach","to","from","next","start","path","done","store","getters","length","dispatch","then","res","data","addRoutes","replace","catch","err","Message","error","meta","query","noGoBack","afterEach"],"mappings":"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","sourcesContent":["import router from './router'\r\nimport store from './store'\r\nimport { Message } from 'element-ui'\r\nimport NProgress from 'nprogress' // progress bar\r\nimport 'nprogress/nprogress.css'// progress bar style\r\nimport { getToken } from '@/utils/auth' // getToken from cookie\r\n\r\nNProgress.configure({ showSpinner: false })// NProgress Configuration\r\n\r\n// permission judge function\r\nfunction hasPermission(perms, permissions) {\r\n  if (perms.indexOf('*') >= 0) return true // admin permission passed directly\r\n  if (!permissions) return true\r\n  return perms.some(perm => permissions.indexOf(perm) >= 0)\r\n}\r\n\r\nconst whiteList = ['/login', '/auth-redirect']// no redirect whitelist\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  NProgress.start() // start progress bar\r\n  if (getToken()) { // determine if there has token\r\n    /* has token*/\r\n    if (to.path === '/login') {\r\n      next({ path: '/' })\r\n      NProgress.done() // if current page is dashboard will not trigger\tafterEach hook, so manually handle it\r\n    } else {\r\n      if (store.getters.perms.length === 0) { // 判断当前用户是否已拉取完user_info信息\r\n        store.dispatch('GetUserInfo').then(res => { // 拉取user_info\r\n          const perms = res.data.data.perms // note: perms must be a array! such as: ['GET /aaa','POST /bbb']\r\n          store.dispatch('GenerateRoutes', { perms }).then(() => { // 根据perms权限生成可访问的路由表\r\n            router.addRoutes(store.getters.addRoutes) // 动态添加可访问路由表\r\n            next({ ...to, replace: true }) // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\r\n          })\r\n        }).catch((err) => {\r\n          store.dispatch('FedLogOut').then(() => {\r\n            Message.error(err || 'Verification failed, please login again')\r\n            next({ path: '/' })\r\n          })\r\n        })\r\n      } else {\r\n        // 没有动态改变权限的需求可直接next() 删除下方权限判断 ↓\r\n        if (hasPermission(store.getters.perms, to.meta.perms)) {\r\n          next()\r\n        } else {\r\n          next({ path: '/401', replace: true, query: { noGoBack: true }})\r\n        }\r\n        // 可删 ↑\r\n      }\r\n    }\r\n  } else {\r\n    /* has no token*/\r\n    if (whiteList.indexOf(to.path) !== -1) { // 在免登录白名单，直接进入\r\n      next()\r\n    } else {\r\n      next(`/login?redirect=${to.path}`) // 否则全部重定向到登录页\r\n      NProgress.done() // if current page is login will not trigger afterEach hook, so manually handle it\r\n    }\r\n  }\r\n})\r\n\r\nrouter.afterEach(() => {\r\n  NProgress.done() // finish progress bar\r\n})\r\n"]}]}