{"remainingRequest":"E:\\XM\\his-shopping-web\\node_modules\\babel-loader\\lib\\index.js!E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\XM\\his-shopping-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\XM\\his-shopping-web\\src\\views\\sys\\admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\XM\\his-shopping-web\\src\\views\\sys\\admin.vue","mtime":1606183812561},{"path":"E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/XM/his-shopping-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"E:/XM/his-shopping-web/node_modules/@babel/runtime/helpers/interopRequireWildcard\"));\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"E:/XM/his-shopping-web/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar _admin = require(\"@/api/admin\");\n\nvar _role = require(\"@/api/role\");\n\nvar _storage = require(\"@/api/storage\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// Secondary package based on el-pagination\nvar _default = {\n  name: 'Admin',\n  components: {\n    Pagination: _Pagination.default\n  },\n  data: function data() {\n    return {\n      uploadPath: _storage.uploadPath,\n      list: null,\n      total: 0,\n      roleOptions: null,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 20,\n        username: undefined,\n        sort: 'add_time',\n        order: 'desc'\n      },\n      dataForm: {\n        id: undefined,\n        username: undefined,\n        password: undefined,\n        avatar: undefined,\n        roleIds: []\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '创建'\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '管理员名称不能为空',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '密码不能为空',\n          trigger: 'blur'\n        }]\n      },\n      downloadLoading: false\n    };\n  },\n  computed: {\n    headers: function headers() {\n      return {\n        'X-Litemall-Admin-Token': (0, _auth.getToken)()\n      };\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.getList();\n    (0, _role.roleOptions)().then(function (response) {\n      _this.roleOptions = response.data.data.list;\n    });\n  },\n  methods: {\n    formatRole: function formatRole(roleId) {\n      for (var i = 0; i < this.roleOptions.length; i++) {\n        if (roleId === this.roleOptions[i].value) {\n          return this.roleOptions[i].label;\n        }\n      }\n\n      return '';\n    },\n    getList: function getList() {\n      var _this2 = this;\n\n      this.listLoading = true;\n      (0, _admin.listAdmin)(this.listQuery).then(function (response) {\n        _this2.list = response.data.data.list;\n        _this2.total = response.data.data.total;\n        _this2.listLoading = false;\n      }).catch(function () {\n        _this2.list = [];\n        _this2.total = 0;\n        _this2.listLoading = false;\n      });\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    resetForm: function resetForm() {\n      this.dataForm = {\n        id: undefined,\n        username: undefined,\n        password: undefined,\n        avatar: undefined,\n        roleIds: []\n      };\n    },\n    uploadAvatar: function uploadAvatar(response) {\n      this.dataForm.avatar = response.data.url;\n    },\n    handleCreate: function handleCreate() {\n      var _this3 = this;\n\n      this.resetForm();\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n      this.$nextTick(function () {\n        _this3.$refs['dataForm'].clearValidate();\n      });\n    },\n    createData: function createData() {\n      var _this4 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          (0, _admin.createAdmin)(_this4.dataForm).then(function (response) {\n            _this4.list.unshift(response.data.data);\n\n            _this4.dialogFormVisible = false;\n\n            _this4.$notify.success({\n              title: '成功',\n              message: '添加管理员成功'\n            });\n          }).catch(function (response) {\n            _this4.$notify.error({\n              title: '失败',\n              message: response.data.errmsg\n            });\n          });\n        }\n      });\n    },\n    handleUpdate: function handleUpdate(row) {\n      var _this5 = this;\n\n      this.dataForm = Object.assign({}, row);\n      this.dialogStatus = 'update';\n      this.dialogFormVisible = true;\n      this.$nextTick(function () {\n        _this5.$refs['dataForm'].clearValidate();\n      });\n    },\n    updateData: function updateData() {\n      var _this6 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          (0, _admin.updateAdmin)(_this6.dataForm).then(function () {\n            var _iterator = (0, _createForOfIteratorHelper2.default)(_this6.list),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var v = _step.value;\n\n                if (v.id === _this6.dataForm.id) {\n                  var index = _this6.list.indexOf(v);\n\n                  _this6.list.splice(index, 1, _this6.dataForm);\n\n                  break;\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            _this6.dialogFormVisible = false;\n\n            _this6.$notify.success({\n              title: '成功',\n              message: '更新管理员成功'\n            });\n          }).catch(function (response) {\n            _this6.$notify.error({\n              title: '失败',\n              message: response.data.errmsg\n            });\n          });\n        }\n      });\n    },\n    handleDelete: function handleDelete(row) {\n      var _this7 = this;\n\n      (0, _admin.deleteAdmin)(row).then(function (response) {\n        _this7.$notify.success({\n          title: '成功',\n          message: '删除管理员成功'\n        });\n\n        _this7.getList();\n      }).catch(function (response) {\n        _this7.$notify.error({\n          title: '失败',\n          message: response.data.errmsg\n        });\n      });\n    },\n    handleDownload: function handleDownload() {\n      var _this8 = this;\n\n      this.downloadLoading = true;\n      Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/vendor/Export2Excel'));\n      }).then(function (excel) {\n        var tHeader = ['管理员ID', '管理员名称', '管理员头像'];\n        var filterVal = ['id', 'username', 'avatar'];\n        excel.export_json_to_excel2(tHeader, _this8.list, filterVal, '管理员信息');\n        _this8.downloadLoading = false;\n      });\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["admin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n\r\n    <!-- 查询和其他操作 -->\r\n    <div class=\"filter-container\">\r\n      <el-input v-model=\"listQuery.username\" clearable class=\"filter-item\" style=\"width: 200px;\" placeholder=\"请输入管理员名称\" />\r\n      <el-button v-permission=\"['GET /admin/admin/list']\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">查找</el-button>\r\n      <el-button v-permission=\"['POST /admin/admin/create']\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleCreate\">添加</el-button>\r\n      <el-button :loading=\"downloadLoading\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-download\" @click=\"handleDownload\">导出</el-button>\r\n    </div>\r\n\r\n    <!-- 查询结果 -->\r\n    <el-table v-loading=\"listLoading\" :data=\"list\" element-loading-text=\"正在查询中。。。\" border fit highlight-current-row>\r\n      <el-table-column align=\"center\" label=\"管理员ID\" prop=\"id\" sortable />\r\n\r\n      <el-table-column align=\"center\" label=\"管理员名称\" prop=\"username\" />\r\n\r\n      <el-table-column align=\"center\" label=\"管理员头像\" prop=\"avatar\">\r\n        <template slot-scope=\"scope\">\r\n          <img v-if=\"scope.row.avatar\" :src=\"scope.row.avatar\" width=\"40\">\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column align=\"center\" label=\"管理员角色\" prop=\"roleIds\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag v-for=\"roleId in scope.row.roleIds\" :key=\"roleId\" type=\"primary\" style=\"margin-right: 20px;\"> {{ formatRole(roleId) }} </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column align=\"center\" label=\"操作\" class-name=\"small-padding fixed-width\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button v-permission=\"['POST /admin/admin/update']\" type=\"primary\" size=\"mini\" @click=\"handleUpdate(scope.row)\">编辑</el-button>\r\n          <el-button v-permission=\"['POST /admin/admin/delete']\" type=\"danger\" size=\"mini\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\r\n\r\n    <!-- 添加或修改对话框 -->\r\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\r\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"dataForm\" status-icon label-position=\"left\" label-width=\"100px\" style=\"width: 400px; margin-left:50px;\">\r\n        <el-form-item label=\"管理员名称\" prop=\"username\">\r\n          <el-input v-model=\"dataForm.username\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"管理员密码\" prop=\"password\">\r\n          <el-input v-model=\"dataForm.password\" type=\"password\" auto-complete=\"off\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"管理员头像\" prop=\"avatar\">\r\n          <el-upload\r\n            :headers=\"headers\"\r\n            :action=\"uploadPath\"\r\n            :show-file-list=\"false\"\r\n            :on-success=\"uploadAvatar\"\r\n            class=\"avatar-uploader\"\r\n            accept=\".jpg,.jpeg,.png,.gif\"\r\n          >\r\n            <img v-if=\"dataForm.avatar\" :src=\"dataForm.avatar\" class=\"avatar\">\r\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\" />\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"管理员角色\" prop=\"roleIds\">\r\n          <el-select v-model=\"dataForm.roleIds\" multiple placeholder=\"请选择\">\r\n            <el-option\r\n              v-for=\"item in roleOptions\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible = false\">取消</el-button>\r\n        <el-button v-if=\"dialogStatus=='create'\" type=\"primary\" @click=\"createData\">确定</el-button>\r\n        <el-button v-else type=\"primary\" @click=\"updateData\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #20a0ff;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 120px;\r\n  height: 120px;\r\n  line-height: 120px;\r\n  text-align: center;\r\n}\r\n.avatar {\r\n  width: 145px;\r\n  height: 145px;\r\n  display: block;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport { listAdmin, createAdmin, updateAdmin, deleteAdmin } from '@/api/admin'\r\nimport { roleOptions } from '@/api/role'\r\nimport { uploadPath } from '@/api/storage'\r\nimport { getToken } from '@/utils/auth'\r\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\r\n\r\nexport default {\r\n  name: 'Admin',\r\n  components: { Pagination },\r\n  data() {\r\n    return {\r\n      uploadPath,\r\n      list: null,\r\n      total: 0,\r\n      roleOptions: null,\r\n      listLoading: true,\r\n      listQuery: {\r\n        page: 1,\r\n        limit: 20,\r\n        username: undefined,\r\n        sort: 'add_time',\r\n        order: 'desc'\r\n      },\r\n      dataForm: {\r\n        id: undefined,\r\n        username: undefined,\r\n        password: undefined,\r\n        avatar: undefined,\r\n        roleIds: []\r\n      },\r\n      dialogFormVisible: false,\r\n      dialogStatus: '',\r\n      textMap: {\r\n        update: '编辑',\r\n        create: '创建'\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '管理员名称不能为空', trigger: 'blur' }\r\n        ],\r\n        password: [{ required: true, message: '密码不能为空', trigger: 'blur' }]\r\n      },\r\n      downloadLoading: false\r\n    }\r\n  },\r\n  computed: {\r\n    headers() {\r\n      return {\r\n        'X-Litemall-Admin-Token': getToken()\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getList()\r\n\r\n    roleOptions()\r\n      .then(response => {\r\n        this.roleOptions = response.data.data.list\r\n      })\r\n  },\r\n  methods: {\r\n    formatRole(roleId) {\r\n      for (let i = 0; i < this.roleOptions.length; i++) {\r\n        if (roleId === this.roleOptions[i].value) {\r\n          return this.roleOptions[i].label\r\n        }\r\n      }\r\n      return ''\r\n    },\r\n    getList() {\r\n      this.listLoading = true\r\n      listAdmin(this.listQuery)\r\n        .then(response => {\r\n          this.list = response.data.data.list\r\n          this.total = response.data.data.total\r\n          this.listLoading = false\r\n        })\r\n        .catch(() => {\r\n          this.list = []\r\n          this.total = 0\r\n          this.listLoading = false\r\n        })\r\n    },\r\n    handleFilter() {\r\n      this.listQuery.page = 1\r\n      this.getList()\r\n    },\r\n    resetForm() {\r\n      this.dataForm = {\r\n        id: undefined,\r\n        username: undefined,\r\n        password: undefined,\r\n        avatar: undefined,\r\n        roleIds: []\r\n      }\r\n    },\r\n    uploadAvatar: function(response) {\r\n      this.dataForm.avatar = response.data.url\r\n    },\r\n    handleCreate() {\r\n      this.resetForm()\r\n      this.dialogStatus = 'create'\r\n      this.dialogFormVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].clearValidate()\r\n      })\r\n    },\r\n    createData() {\r\n      this.$refs['dataForm'].validate(valid => {\r\n        if (valid) {\r\n          createAdmin(this.dataForm)\r\n            .then(response => {\r\n              this.list.unshift(response.data.data)\r\n              this.dialogFormVisible = false\r\n              this.$notify.success({\r\n                title: '成功',\r\n                message: '添加管理员成功'\r\n              })\r\n            })\r\n            .catch(response => {\r\n              this.$notify.error({\r\n                title: '失败',\r\n                message: response.data.errmsg\r\n              })\r\n            })\r\n        }\r\n      })\r\n    },\r\n    handleUpdate(row) {\r\n      this.dataForm = Object.assign({}, row)\r\n      this.dialogStatus = 'update'\r\n      this.dialogFormVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].clearValidate()\r\n      })\r\n    },\r\n    updateData() {\r\n      this.$refs['dataForm'].validate(valid => {\r\n        if (valid) {\r\n          updateAdmin(this.dataForm)\r\n            .then(() => {\r\n              for (const v of this.list) {\r\n                if (v.id === this.dataForm.id) {\r\n                  const index = this.list.indexOf(v)\r\n                  this.list.splice(index, 1, this.dataForm)\r\n                  break\r\n                }\r\n              }\r\n              this.dialogFormVisible = false\r\n              this.$notify.success({\r\n                title: '成功',\r\n                message: '更新管理员成功'\r\n              })\r\n            })\r\n            .catch(response => {\r\n              this.$notify.error({\r\n                title: '失败',\r\n                message: response.data.errmsg\r\n              })\r\n            })\r\n        }\r\n      })\r\n    },\r\n    handleDelete(row) {\r\n      deleteAdmin(row)\r\n        .then(response => {\r\n          this.$notify.success({\r\n            title: '成功',\r\n            message: '删除管理员成功'\r\n          })\r\n          this.getList()\r\n        })\r\n        .catch(response => {\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: response.data.errmsg\r\n          })\r\n        })\r\n    },\r\n    handleDownload() {\r\n      this.downloadLoading = true\r\n      import('@/vendor/Export2Excel').then(excel => {\r\n        const tHeader = ['管理员ID', '管理员名称', '管理员头像']\r\n        const filterVal = ['id', 'username', 'avatar']\r\n        excel.export_json_to_excel2(\r\n          tHeader,\r\n          this.list,\r\n          filterVal,\r\n          '管理员信息'\r\n        )\r\n        this.downloadLoading = false\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/sys"}]}