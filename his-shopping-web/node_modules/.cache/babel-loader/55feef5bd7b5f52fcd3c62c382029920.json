{"remainingRequest":"E:\\XM\\his-shopping-web\\node_modules\\babel-loader\\lib\\index.js!E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\XM\\his-shopping-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\XM\\his-shopping-web\\src\\views\\mall\\issue.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\XM\\his-shopping-web\\src\\views\\mall\\issue.vue","mtime":1606183812552},{"path":"E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/XM/his-shopping-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"E:/XM/his-shopping-web/node_modules/@babel/runtime/helpers/interopRequireWildcard\"));\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"E:/XM/his-shopping-web/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar _issue = require(\"@/api/issue\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// Secondary package based on el-pagination\nvar _default = {\n  name: 'Issue',\n  components: {\n    Pagination: _Pagination.default\n  },\n  data: function data() {\n    return {\n      list: null,\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 20,\n        question: undefined,\n        sort: 'add_time',\n        order: 'desc'\n      },\n      dataForm: {\n        id: undefined,\n        question: '',\n        answer: ''\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '创建'\n      },\n      rules: {\n        question: [{\n          required: true,\n          message: '问题不能为空',\n          trigger: 'blur'\n        }],\n        answer: [{\n          required: true,\n          message: '回复不能为空',\n          trigger: 'blur'\n        }]\n      },\n      downloadLoading: false\n    };\n  },\n  created: function created() {\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this = this;\n\n      this.listLoading = true;\n      (0, _issue.listIssue)(this.listQuery).then(function (response) {\n        _this.list = response.data.data.list;\n        _this.total = response.data.data.total;\n        _this.listLoading = false;\n      }).catch(function () {\n        _this.list = [];\n        _this.total = 0;\n        _this.listLoading = false;\n      });\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    resetForm: function resetForm() {\n      this.dataForm = {\n        id: undefined,\n        question: '',\n        answer: ''\n      };\n    },\n    handleCreate: function handleCreate() {\n      var _this2 = this;\n\n      this.resetForm();\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n      this.$nextTick(function () {\n        _this2.$refs['dataForm'].clearValidate();\n      });\n    },\n    createData: function createData() {\n      var _this3 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          (0, _issue.createIssue)(_this3.dataForm).then(function (response) {\n            _this3.list.unshift(response.data.data);\n\n            _this3.dialogFormVisible = false;\n\n            _this3.$notify.success({\n              title: '成功',\n              message: '创建成功'\n            });\n          }).catch(function (response) {\n            _this3.$notify.error({\n              title: '失败',\n              message: response.data.errmsg\n            });\n          });\n        }\n      });\n    },\n    handleUpdate: function handleUpdate(row) {\n      var _this4 = this;\n\n      this.dataForm = Object.assign({}, row);\n      this.dialogStatus = 'update';\n      this.dialogFormVisible = true;\n      this.$nextTick(function () {\n        _this4.$refs['dataForm'].clearValidate();\n      });\n    },\n    updateData: function updateData() {\n      var _this5 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          (0, _issue.updateIssue)(_this5.dataForm).then(function () {\n            var _iterator = (0, _createForOfIteratorHelper2.default)(_this5.list),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var v = _step.value;\n\n                if (v.id === _this5.dataForm.id) {\n                  var index = _this5.list.indexOf(v);\n\n                  _this5.list.splice(index, 1, _this5.dataForm);\n\n                  break;\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            _this5.dialogFormVisible = false;\n\n            _this5.$notify.success({\n              title: '成功',\n              message: '更新成功'\n            });\n          }).catch(function (response) {\n            _this5.$notify.error({\n              title: '失败',\n              message: response.data.errmsg\n            });\n          });\n        }\n      });\n    },\n    handleDelete: function handleDelete(row) {\n      var _this6 = this;\n\n      (0, _issue.deleteIssue)(row).then(function (response) {\n        _this6.$notify.success({\n          title: '成功',\n          message: '删除成功'\n        });\n\n        _this6.getList();\n      }).catch(function (response) {\n        _this6.$notify.error({\n          title: '失败',\n          message: response.data.errmsg\n        });\n      });\n    },\n    handleDownload: function handleDownload() {\n      var _this7 = this;\n\n      this.downloadLoading = true;\n      Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/vendor/Export2Excel'));\n      }).then(function (excel) {\n        var tHeader = ['问题ID', '问题内容', '问题回复'];\n        var filterVal = ['id', 'question', 'answer'];\n        excel.export_json_to_excel2(tHeader, _this7.list, filterVal, '常见问题信息');\n        _this7.downloadLoading = false;\n      });\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["issue.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n\r\n    <!-- 查询和其他操作 -->\r\n    <div class=\"filter-container\">\r\n      <el-input v-model=\"listQuery.question\" clearable class=\"filter-item\" style=\"width: 200px;\" placeholder=\"请输入问题\" />\r\n      <el-button v-permission=\"['GET /admin/issue/list']\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">查找</el-button>\r\n      <el-button v-permission=\"['POST /admin/issue/create']\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleCreate\">添加</el-button>\r\n      <el-button :loading=\"downloadLoading\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-download\" @click=\"handleDownload\">导出</el-button>\r\n    </div>\r\n\r\n    <!-- 查询结果 -->\r\n    <el-table v-loading=\"listLoading\" :data=\"list\" element-loading-text=\"正在查询中。。。\" border fit highlight-current-row>\r\n      <el-table-column align=\"center\" width=\"100px\" label=\"问题ID\" prop=\"id\" sortable />\r\n\r\n      <el-table-column align=\"center\" min-width=\"200px\" label=\"问题内容\" prop=\"question\" />\r\n\r\n      <el-table-column align=\"center\" min-width=\"400px\" label=\"问题回复\" prop=\"answer\" />\r\n\r\n      <el-table-column align=\"center\" label=\"操作\" width=\"250\" class-name=\"small-padding fixed-width\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button v-permission=\"['POST /admin/issue/update']\" type=\"primary\" size=\"mini\" @click=\"handleUpdate(scope.row)\">编辑</el-button>\r\n          <el-button v-permission=\"['POST /admin/issue/delete']\" type=\"danger\" size=\"mini\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\r\n\r\n    <!-- 添加或修改对话框 -->\r\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\r\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"dataForm\" status-icon label-position=\"left\" label-width=\"100px\" style=\"width: 400px; margin-left:50px;\">\r\n        <el-form-item label=\"问题\" prop=\"question\">\r\n          <el-input v-model=\"dataForm.question\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"回复\" prop=\"answer\">\r\n          <el-input v-model=\"dataForm.answer\" :rows=\"8\" type=\"textarea\" placeholder=\"请输入内容\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible = false\">取消</el-button>\r\n        <el-button v-if=\"dialogStatus=='create'\" type=\"primary\" @click=\"createData\">确定</el-button>\r\n        <el-button v-else type=\"primary\" @click=\"updateData\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { listIssue, createIssue, updateIssue, deleteIssue } from '@/api/issue'\r\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\r\n\r\nexport default {\r\n  name: 'Issue',\r\n  components: { Pagination },\r\n  data() {\r\n    return {\r\n      list: null,\r\n      total: 0,\r\n      listLoading: true,\r\n      listQuery: {\r\n        page: 1,\r\n        limit: 20,\r\n        question: undefined,\r\n        sort: 'add_time',\r\n        order: 'desc'\r\n      },\r\n      dataForm: {\r\n        id: undefined,\r\n        question: '',\r\n        answer: ''\r\n      },\r\n      dialogFormVisible: false,\r\n      dialogStatus: '',\r\n      textMap: {\r\n        update: '编辑',\r\n        create: '创建'\r\n      },\r\n      rules: {\r\n        question: [{ required: true, message: '问题不能为空', trigger: 'blur' }],\r\n        answer: [{ required: true, message: '回复不能为空', trigger: 'blur' }]\r\n      },\r\n      downloadLoading: false\r\n    }\r\n  },\r\n  created() {\r\n    this.getList()\r\n  },\r\n  methods: {\r\n    getList() {\r\n      this.listLoading = true\r\n      listIssue(this.listQuery).then(response => {\r\n        this.list = response.data.data.list\r\n        this.total = response.data.data.total\r\n        this.listLoading = false\r\n      }).catch(() => {\r\n        this.list = []\r\n        this.total = 0\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    handleFilter() {\r\n      this.listQuery.page = 1\r\n      this.getList()\r\n    },\r\n    resetForm() {\r\n      this.dataForm = {\r\n        id: undefined,\r\n        question: '',\r\n        answer: ''\r\n      }\r\n    },\r\n    handleCreate() {\r\n      this.resetForm()\r\n      this.dialogStatus = 'create'\r\n      this.dialogFormVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].clearValidate()\r\n      })\r\n    },\r\n    createData() {\r\n      this.$refs['dataForm'].validate((valid) => {\r\n        if (valid) {\r\n          createIssue(this.dataForm).then(response => {\r\n            this.list.unshift(response.data.data)\r\n            this.dialogFormVisible = false\r\n            this.$notify.success({\r\n              title: '成功',\r\n              message: '创建成功'\r\n            })\r\n          }).catch(response => {\r\n            this.$notify.error({\r\n              title: '失败',\r\n              message: response.data.errmsg\r\n            })\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handleUpdate(row) {\r\n      this.dataForm = Object.assign({}, row)\r\n      this.dialogStatus = 'update'\r\n      this.dialogFormVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].clearValidate()\r\n      })\r\n    },\r\n    updateData() {\r\n      this.$refs['dataForm'].validate((valid) => {\r\n        if (valid) {\r\n          updateIssue(this.dataForm).then(() => {\r\n            for (const v of this.list) {\r\n              if (v.id === this.dataForm.id) {\r\n                const index = this.list.indexOf(v)\r\n                this.list.splice(index, 1, this.dataForm)\r\n                break\r\n              }\r\n            }\r\n            this.dialogFormVisible = false\r\n            this.$notify.success({\r\n              title: '成功',\r\n              message: '更新成功'\r\n            })\r\n          }).catch(response => {\r\n            this.$notify.error({\r\n              title: '失败',\r\n              message: response.data.errmsg\r\n            })\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handleDelete(row) {\r\n      deleteIssue(row).then(response => {\r\n        this.$notify.success({\r\n          title: '成功',\r\n          message: '删除成功'\r\n        })\r\n        this.getList()\r\n      }).catch(response => {\r\n        this.$notify.error({\r\n          title: '失败',\r\n          message: response.data.errmsg\r\n        })\r\n      })\r\n    },\r\n    handleDownload() {\r\n      this.downloadLoading = true\r\n      import('@/vendor/Export2Excel').then(excel => {\r\n        const tHeader = ['问题ID', '问题内容', '问题回复']\r\n        const filterVal = ['id', 'question', 'answer']\r\n        excel.export_json_to_excel2(tHeader, this.list, filterVal, '常见问题信息')\r\n        this.downloadLoading = false\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/mall"}]}