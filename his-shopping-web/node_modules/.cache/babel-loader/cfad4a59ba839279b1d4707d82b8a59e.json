{"remainingRequest":"E:\\XM\\his-shopping-web\\node_modules\\babel-loader\\lib\\index.js!E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\XM\\his-shopping-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\XM\\his-shopping-web\\src\\views\\layout\\components\\TagsView\\ScrollPane.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\XM\\his-shopping-web\\src\\views\\layout\\components\\TagsView\\ScrollPane.vue","mtime":1606183812548},{"path":"E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find-index\");\n\n//\n//\n//\n//\n//\n//\nvar tagAndTagSpacing = 4; // tagAndTagSpacing\n\nvar _default = {\n  name: 'ScrollPane',\n  data: function data() {\n    return {\n      left: 0\n    };\n  },\n  computed: {\n    scrollWrapper: function scrollWrapper() {\n      return this.$refs.scrollContainer.$refs.wrap;\n    }\n  },\n  mounted: function mounted() {\n    this.scrollWrapper.addEventListener('scroll', this.emitScroll, true);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.scrollWrapper.removeEventListener('scroll', this.emitScroll);\n  },\n  methods: {\n    handleScroll: function handleScroll(e) {\n      var eventDelta = e.wheelDelta || -e.deltaY * 40;\n      var $scrollWrapper = this.scrollWrapper;\n      $scrollWrapper.scrollLeft = $scrollWrapper.scrollLeft + eventDelta / 4;\n    },\n    emitScroll: function emitScroll() {\n      this.$emit('scroll');\n    },\n    moveToTarget: function moveToTarget(currentTag) {\n      var $container = this.$refs.scrollContainer.$el;\n      var $containerWidth = $container.offsetWidth;\n      var $scrollWrapper = this.scrollWrapper;\n      var tagList = this.$parent.$refs.tag;\n      var firstTag = null;\n      var lastTag = null; // find first tag and last tag\n\n      if (tagList.length > 0) {\n        firstTag = tagList[0];\n        lastTag = tagList[tagList.length - 1];\n      }\n\n      if (firstTag === currentTag) {\n        $scrollWrapper.scrollLeft = 0;\n      } else if (lastTag === currentTag) {\n        $scrollWrapper.scrollLeft = $scrollWrapper.scrollWidth - $containerWidth;\n      } else {\n        // find preTag and nextTag\n        var currentIndex = tagList.findIndex(function (item) {\n          return item === currentTag;\n        });\n        var prevTag = tagList[currentIndex - 1];\n        var nextTag = tagList[currentIndex + 1]; // the tag's offsetLeft after of nextTag\n\n        var afterNextTagOffsetLeft = nextTag.$el.offsetLeft + nextTag.$el.offsetWidth + tagAndTagSpacing; // the tag's offsetLeft before of prevTag\n\n        var beforePrevTagOffsetLeft = prevTag.$el.offsetLeft - tagAndTagSpacing;\n\n        if (afterNextTagOffsetLeft > $scrollWrapper.scrollLeft + $containerWidth) {\n          $scrollWrapper.scrollLeft = afterNextTagOffsetLeft - $containerWidth;\n        } else if (beforePrevTagOffsetLeft < $scrollWrapper.scrollLeft) {\n          $scrollWrapper.scrollLeft = beforePrevTagOffsetLeft;\n        }\n      }\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["ScrollPane.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAOA,IAAA,gBAAA,GAAA,CAAA,C,CAAA;;eACA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,aAAA,KAAA,KAAA,CAAA,eAAA,CAAA,KAAA,CAAA,IAAA;AACA;AAHA,GAPA;AAYA,EAAA,OAZA,qBAYA;AACA,SAAA,aAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,KAAA,UAAA,EAAA,IAAA;AACA,GAdA;AAeA,EAAA,aAfA,2BAeA;AACA,SAAA,aAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,UAAA;AACA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,CADA,EACA;AACA,UAAA,UAAA,GAAA,CAAA,CAAA,UAAA,IAAA,CAAA,CAAA,CAAA,MAAA,GAAA,EAAA;AACA,UAAA,cAAA,GAAA,KAAA,aAAA;AACA,MAAA,cAAA,CAAA,UAAA,GAAA,cAAA,CAAA,UAAA,GAAA,UAAA,GAAA,CAAA;AACA,KALA;AAMA,IAAA,UANA,wBAMA;AACA,WAAA,KAAA,CAAA,QAAA;AACA,KARA;AASA,IAAA,YATA,wBASA,UATA,EASA;AACA,UAAA,UAAA,GAAA,KAAA,KAAA,CAAA,eAAA,CAAA,GAAA;AACA,UAAA,eAAA,GAAA,UAAA,CAAA,WAAA;AACA,UAAA,cAAA,GAAA,KAAA,aAAA;AACA,UAAA,OAAA,GAAA,KAAA,OAAA,CAAA,KAAA,CAAA,GAAA;AACA,UAAA,QAAA,GAAA,IAAA;AACA,UAAA,OAAA,GAAA,IAAA,CANA,CAOA;;AACA,UAAA,OAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,QAAA,QAAA,GAAA,OAAA,CAAA,CAAA,CAAA;AACA,QAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA,MAAA,GAAA,CAAA,CAAA;AACA;;AACA,UAAA,QAAA,KAAA,UAAA,EAAA;AACA,QAAA,cAAA,CAAA,UAAA,GAAA,CAAA;AACA,OAFA,MAEA,IAAA,OAAA,KAAA,UAAA,EAAA;AACA,QAAA,cAAA,CAAA,UAAA,GAAA,cAAA,CAAA,WAAA,GAAA,eAAA;AACA,OAFA,MAEA;AACA;AACA,YAAA,YAAA,GAAA,OAAA,CAAA,SAAA,CAAA,UAAA,IAAA;AAAA,iBAAA,IAAA,KAAA,UAAA;AAAA,SAAA,CAAA;AACA,YAAA,OAAA,GAAA,OAAA,CAAA,YAAA,GAAA,CAAA,CAAA;AACA,YAAA,OAAA,GAAA,OAAA,CAAA,YAAA,GAAA,CAAA,CAAA,CAJA,CAKA;;AACA,YAAA,sBAAA,GAAA,OAAA,CAAA,GAAA,CAAA,UAAA,GAAA,OAAA,CAAA,GAAA,CAAA,WAAA,GAAA,gBAAA,CANA,CAOA;;AACA,YAAA,uBAAA,GAAA,OAAA,CAAA,GAAA,CAAA,UAAA,GAAA,gBAAA;;AACA,YAAA,sBAAA,GAAA,cAAA,CAAA,UAAA,GAAA,eAAA,EAAA;AACA,UAAA,cAAA,CAAA,UAAA,GAAA,sBAAA,GAAA,eAAA;AACA,SAFA,MAEA,IAAA,uBAAA,GAAA,cAAA,CAAA,UAAA,EAAA;AACA,UAAA,cAAA,CAAA,UAAA,GAAA,uBAAA;AACA;AACA;AACA;AAxCA;AAlBA,C","sourcesContent":["<template>\r\n  <el-scrollbar ref=\"scrollContainer\" :vertical=\"false\" class=\"scroll-container\" @wheel.native.prevent=\"handleScroll\">\r\n    <slot />\r\n  </el-scrollbar>\r\n</template>\r\n\r\n<script>\r\nconst tagAndTagSpacing = 4 // tagAndTagSpacing\r\nexport default {\r\n  name: 'ScrollPane',\r\n  data() {\r\n    return {\r\n      left: 0\r\n    }\r\n  },\r\n  computed: {\r\n    scrollWrapper() {\r\n      return this.$refs.scrollContainer.$refs.wrap\r\n    }\r\n  },\r\n  mounted() {\r\n    this.scrollWrapper.addEventListener('scroll', this.emitScroll, true)\r\n  },\r\n  beforeDestroy() {\r\n    this.scrollWrapper.removeEventListener('scroll', this.emitScroll)\r\n  },\r\n  methods: {\r\n    handleScroll(e) {\r\n      const eventDelta = e.wheelDelta || -e.deltaY * 40\r\n      const $scrollWrapper = this.scrollWrapper\r\n      $scrollWrapper.scrollLeft = $scrollWrapper.scrollLeft + eventDelta / 4\r\n    },\r\n    emitScroll() {\r\n      this.$emit('scroll')\r\n    },\r\n    moveToTarget(currentTag) {\r\n      const $container = this.$refs.scrollContainer.$el\r\n      const $containerWidth = $container.offsetWidth\r\n      const $scrollWrapper = this.scrollWrapper\r\n      const tagList = this.$parent.$refs.tag\r\n      let firstTag = null\r\n      let lastTag = null\r\n      // find first tag and last tag\r\n      if (tagList.length > 0) {\r\n        firstTag = tagList[0]\r\n        lastTag = tagList[tagList.length - 1]\r\n      }\r\n      if (firstTag === currentTag) {\r\n        $scrollWrapper.scrollLeft = 0\r\n      } else if (lastTag === currentTag) {\r\n        $scrollWrapper.scrollLeft = $scrollWrapper.scrollWidth - $containerWidth\r\n      } else {\r\n        // find preTag and nextTag\r\n        const currentIndex = tagList.findIndex(item => item === currentTag)\r\n        const prevTag = tagList[currentIndex - 1]\r\n        const nextTag = tagList[currentIndex + 1]\r\n        // the tag's offsetLeft after of nextTag\r\n        const afterNextTagOffsetLeft = nextTag.$el.offsetLeft + nextTag.$el.offsetWidth + tagAndTagSpacing\r\n        // the tag's offsetLeft before of prevTag\r\n        const beforePrevTagOffsetLeft = prevTag.$el.offsetLeft - tagAndTagSpacing\r\n        if (afterNextTagOffsetLeft > $scrollWrapper.scrollLeft + $containerWidth) {\r\n          $scrollWrapper.scrollLeft = afterNextTagOffsetLeft - $containerWidth\r\n        } else if (beforePrevTagOffsetLeft < $scrollWrapper.scrollLeft) {\r\n          $scrollWrapper.scrollLeft = beforePrevTagOffsetLeft\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.scroll-container {\r\n  white-space: nowrap;\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  ::v-deep {\r\n    .el-scrollbar__bar {\r\n      bottom: 0px;\r\n    }\r\n    .el-scrollbar__wrap {\r\n      height: 49px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/layout/components/TagsView"}]}