{"remainingRequest":"E:\\XM\\his-shopping-web\\node_modules\\babel-loader\\lib\\index.js!E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\XM\\his-shopping-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\XM\\his-shopping-web\\src\\views\\profile\\notice.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\XM\\his-shopping-web\\src\\views\\profile\\notice.vue","mtime":1606183812554},{"path":"E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/XM/his-shopping-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _profile = require(\"@/api/profile\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// Secondary package based on el-pagination\nvar _default = {\n  name: 'AdminNotice',\n  components: {\n    Pagination: _Pagination.default\n  },\n  data: function data() {\n    return {\n      list: [],\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 20,\n        title: '',\n        type: 'unread',\n        sort: 'add_time',\n        order: 'desc'\n      },\n      multipleSelection: [],\n      notice: {\n        title: '',\n        source: '',\n        content: '',\n        addTime: ''\n      },\n      noticeVisible: false\n    };\n  },\n  created: function created() {\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this = this;\n\n      this.listLoading = true;\n      (0, _profile.listNotice)(this.listQuery).then(function (response) {\n        _this.list = response.data.data.list;\n        _this.total = response.data.data.total;\n        _this.listLoading = false;\n      }).catch(function () {\n        _this.list = [];\n        _this.total = 0;\n        _this.listLoading = false;\n      });\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    handleDelete: function handleDelete(row) {\n      var _this2 = this;\n\n      (0, _profile.rmNotice)(row).then(function (response) {\n        _this2.$notify.success({\n          title: '成功',\n          message: '删除通知成功'\n        });\n\n        _this2.getList();\n      }).catch(function (response) {\n        _this2.$notify.error({\n          title: '失败',\n          message: response.data.errmsg\n        });\n      });\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    handleBatchDelete: function handleBatchDelete() {\n      var _this3 = this;\n\n      if (this.multipleSelection.length === 0) {\n        this.$message.error('请选择至少一条记录');\n        return;\n      }\n\n      var ids = [];\n\n      _lodash.default.forEach(this.multipleSelection, function (item) {\n        ids.push(item.id);\n      });\n\n      (0, _profile.brmNotice)({\n        ids: ids\n      }).then(function (response) {\n        _this3.$notify.success({\n          title: '成功',\n          message: '批量删除通知成功'\n        });\n\n        _this3.getList();\n      }).catch(function (response) {\n        _this3.$notify.error({\n          title: '失败',\n          message: response.data.errmsg\n        });\n      });\n    },\n    handleRead: function handleRead(row) {\n      var _this4 = this;\n\n      (0, _profile.catNotice)(row).then(function (response) {\n        _this4.notice = response.data.data;\n        _this4.noticeVisible = true;\n      });\n    },\n    afterRead: function afterRead() {\n      this.noticeVisible = false;\n      this.getList();\n    },\n    handleBatchRead: function handleBatchRead() {\n      var _this5 = this;\n\n      if (this.multipleSelection.length === 0) {\n        this.$message.error('请选择至少一条记录');\n        return;\n      }\n\n      var ids = [];\n\n      _lodash.default.forEach(this.multipleSelection, function (item) {\n        ids.push(item.id);\n      });\n\n      (0, _profile.bcatNotice)({\n        ids: ids\n      }).then(function (response) {\n        _this5.$notify.success({\n          title: '成功',\n          message: '批量设置通知已读成功'\n        });\n\n        _this5.getList();\n      }).catch(function (response) {\n        _this5.$notify.error({\n          title: '失败',\n          message: response.data.errmsg\n        });\n      });\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["notice.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n\r\n    <!-- 查询和其他操作 -->\r\n    <div class=\"filter-container\">\r\n      <el-input v-model=\"listQuery.title\" clearable class=\"filter-item\" style=\"width: 200px;\" placeholder=\"请输入标题关键字\" />\r\n      <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">查找</el-button>\r\n    </div>\r\n\r\n    <div class=\"operator-container\">\r\n      <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleBatchRead\">批量已读</el-button>\r\n      <el-button class=\"filter-item\" type=\"danger\" icon=\"el-icon-delete\" @click=\"handleBatchDelete\">批量删除</el-button>\r\n    </div>\r\n\r\n    <el-tabs v-model=\"listQuery.type\" @tab-click=\"handleFilter\">\r\n      <el-tab-pane label=\"未读通知\" name=\"unread\" />\r\n      <el-tab-pane label=\"已读通知\" name=\"read\" />\r\n      <el-tab-pane label=\"所有通知\" name=\"all\" />\r\n    </el-tabs>\r\n\r\n    <!-- 查询结果 -->\r\n    <el-table v-loading=\"listLoading\" :data=\"list\" element-loading-text=\"正在查询中。。。\" fit highlight-current-row @selection-change=\"handleSelectionChange\">\r\n      <el-table-column type=\"selection\" width=\"55\" />\r\n\r\n      <el-table-column align=\"center\" label=\"通知标题\" prop=\"noticeTitle\" />\r\n\r\n      <el-table-column align=\"center\" label=\"通知时间\" prop=\"addTime\" width=\"180\" />\r\n\r\n      <el-table-column align=\"center\" label=\"通知状态\" prop=\"readTime\" width=\"120\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag :type=\"scope.row.readTime ? 'success' : 'error' \">{{ scope.row.readTime ? '已读' : '未读' }}</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column align=\"center\" label=\"操作\" width=\"200\" class-name=\"small-padding fixed-width\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"primary\" size=\"mini\" @click=\"handleRead(scope.row)\">阅读</el-button>\r\n          <el-button type=\"danger\" size=\"mini\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\r\n\r\n    <el-dialog :title=\"notice.title\" :visible.sync=\"noticeVisible\" center>\r\n      <el-divider content-position=\"left\">{{ notice.admin }} 于 {{ notice.time }} 通知如下内容：</el-divider>\r\n      <div v-html=\"notice.content\" />\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"afterRead\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { listNotice, catNotice, bcatNotice, rmNotice, brmNotice } from '@/api/profile'\r\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\r\nimport _ from 'lodash'\r\n\r\nexport default {\r\n  name: 'AdminNotice',\r\n  components: { Pagination },\r\n  data() {\r\n    return {\r\n      list: [],\r\n      total: 0,\r\n      listLoading: true,\r\n      listQuery: {\r\n        page: 1,\r\n        limit: 20,\r\n        title: '',\r\n        type: 'unread',\r\n        sort: 'add_time',\r\n        order: 'desc'\r\n      },\r\n      multipleSelection: [],\r\n      notice: {\r\n        title: '',\r\n        source: '',\r\n        content: '',\r\n        addTime: ''\r\n      },\r\n      noticeVisible: false\r\n    }\r\n  },\r\n  created() {\r\n    this.getList()\r\n  },\r\n  methods: {\r\n    getList() {\r\n      this.listLoading = true\r\n      listNotice(this.listQuery)\r\n        .then(response => {\r\n          this.list = response.data.data.list\r\n          this.total = response.data.data.total\r\n          this.listLoading = false\r\n        })\r\n        .catch(() => {\r\n          this.list = []\r\n          this.total = 0\r\n          this.listLoading = false\r\n        })\r\n    },\r\n    handleFilter() {\r\n      this.listQuery.page = 1\r\n      this.getList()\r\n    },\r\n    handleDelete(row) {\r\n      rmNotice(row)\r\n        .then(response => {\r\n          this.$notify.success({\r\n            title: '成功',\r\n            message: '删除通知成功'\r\n          })\r\n          this.getList()\r\n        })\r\n        .catch(response => {\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: response.data.errmsg\r\n          })\r\n        })\r\n    },\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val\r\n    },\r\n    handleBatchDelete() {\r\n      if (this.multipleSelection.length === 0) {\r\n        this.$message.error('请选择至少一条记录')\r\n        return\r\n      }\r\n      const ids = []\r\n      _.forEach(this.multipleSelection, function(item) {\r\n        ids.push(item.id)\r\n      })\r\n      brmNotice({ ids: ids })\r\n        .then(response => {\r\n          this.$notify.success({\r\n            title: '成功',\r\n            message: '批量删除通知成功'\r\n          })\r\n          this.getList()\r\n        })\r\n        .catch(response => {\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: response.data.errmsg\r\n          })\r\n        })\r\n    },\r\n    handleRead(row) {\r\n      catNotice(row)\r\n        .then(response => {\r\n          this.notice = response.data.data\r\n          this.noticeVisible = true\r\n        })\r\n    },\r\n    afterRead() {\r\n      this.noticeVisible = false\r\n      this.getList()\r\n    },\r\n    handleBatchRead() {\r\n      if (this.multipleSelection.length === 0) {\r\n        this.$message.error('请选择至少一条记录')\r\n        return\r\n      }\r\n      const ids = []\r\n      _.forEach(this.multipleSelection, function(item) {\r\n        ids.push(item.id)\r\n      })\r\n      bcatNotice({ ids: ids })\r\n        .then(response => {\r\n          this.$notify.success({\r\n            title: '成功',\r\n            message: '批量设置通知已读成功'\r\n          })\r\n          this.getList()\r\n        })\r\n        .catch(response => {\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: response.data.errmsg\r\n          })\r\n        })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/profile"}]}