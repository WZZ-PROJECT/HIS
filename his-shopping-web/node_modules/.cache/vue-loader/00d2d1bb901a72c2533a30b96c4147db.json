{"remainingRequest":"E:\\XM\\his-shopping-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\XM\\his-shopping-web\\src\\views\\profile\\notice.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\XM\\his-shopping-web\\src\\views\\profile\\notice.vue","mtime":1606183812554},{"path":"E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { listNotice, catNotice, bcatNotice, rmNotice, brmNotice } from '@/api/profile'\r\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\r\nimport _ from 'lodash'\r\n\r\nexport default {\r\n  name: 'AdminNotice',\r\n  components: { Pagination },\r\n  data() {\r\n    return {\r\n      list: [],\r\n      total: 0,\r\n      listLoading: true,\r\n      listQuery: {\r\n        page: 1,\r\n        limit: 20,\r\n        title: '',\r\n        type: 'unread',\r\n        sort: 'add_time',\r\n        order: 'desc'\r\n      },\r\n      multipleSelection: [],\r\n      notice: {\r\n        title: '',\r\n        source: '',\r\n        content: '',\r\n        addTime: ''\r\n      },\r\n      noticeVisible: false\r\n    }\r\n  },\r\n  created() {\r\n    this.getList()\r\n  },\r\n  methods: {\r\n    getList() {\r\n      this.listLoading = true\r\n      listNotice(this.listQuery)\r\n        .then(response => {\r\n          this.list = response.data.data.list\r\n          this.total = response.data.data.total\r\n          this.listLoading = false\r\n        })\r\n        .catch(() => {\r\n          this.list = []\r\n          this.total = 0\r\n          this.listLoading = false\r\n        })\r\n    },\r\n    handleFilter() {\r\n      this.listQuery.page = 1\r\n      this.getList()\r\n    },\r\n    handleDelete(row) {\r\n      rmNotice(row)\r\n        .then(response => {\r\n          this.$notify.success({\r\n            title: '成功',\r\n            message: '删除通知成功'\r\n          })\r\n          this.getList()\r\n        })\r\n        .catch(response => {\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: response.data.errmsg\r\n          })\r\n        })\r\n    },\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val\r\n    },\r\n    handleBatchDelete() {\r\n      if (this.multipleSelection.length === 0) {\r\n        this.$message.error('请选择至少一条记录')\r\n        return\r\n      }\r\n      const ids = []\r\n      _.forEach(this.multipleSelection, function(item) {\r\n        ids.push(item.id)\r\n      })\r\n      brmNotice({ ids: ids })\r\n        .then(response => {\r\n          this.$notify.success({\r\n            title: '成功',\r\n            message: '批量删除通知成功'\r\n          })\r\n          this.getList()\r\n        })\r\n        .catch(response => {\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: response.data.errmsg\r\n          })\r\n        })\r\n    },\r\n    handleRead(row) {\r\n      catNotice(row)\r\n        .then(response => {\r\n          this.notice = response.data.data\r\n          this.noticeVisible = true\r\n        })\r\n    },\r\n    afterRead() {\r\n      this.noticeVisible = false\r\n      this.getList()\r\n    },\r\n    handleBatchRead() {\r\n      if (this.multipleSelection.length === 0) {\r\n        this.$message.error('请选择至少一条记录')\r\n        return\r\n      }\r\n      const ids = []\r\n      _.forEach(this.multipleSelection, function(item) {\r\n        ids.push(item.id)\r\n      })\r\n      bcatNotice({ ids: ids })\r\n        .then(response => {\r\n          this.$notify.success({\r\n            title: '成功',\r\n            message: '批量设置通知已读成功'\r\n          })\r\n          this.getList()\r\n        })\r\n        .catch(response => {\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: response.data.errmsg\r\n          })\r\n        })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["notice.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"notice.vue","sourceRoot":"src/views/profile","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n\r\n    <!-- 查询和其他操作 -->\r\n    <div class=\"filter-container\">\r\n      <el-input v-model=\"listQuery.title\" clearable class=\"filter-item\" style=\"width: 200px;\" placeholder=\"请输入标题关键字\" />\r\n      <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">查找</el-button>\r\n    </div>\r\n\r\n    <div class=\"operator-container\">\r\n      <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleBatchRead\">批量已读</el-button>\r\n      <el-button class=\"filter-item\" type=\"danger\" icon=\"el-icon-delete\" @click=\"handleBatchDelete\">批量删除</el-button>\r\n    </div>\r\n\r\n    <el-tabs v-model=\"listQuery.type\" @tab-click=\"handleFilter\">\r\n      <el-tab-pane label=\"未读通知\" name=\"unread\" />\r\n      <el-tab-pane label=\"已读通知\" name=\"read\" />\r\n      <el-tab-pane label=\"所有通知\" name=\"all\" />\r\n    </el-tabs>\r\n\r\n    <!-- 查询结果 -->\r\n    <el-table v-loading=\"listLoading\" :data=\"list\" element-loading-text=\"正在查询中。。。\" fit highlight-current-row @selection-change=\"handleSelectionChange\">\r\n      <el-table-column type=\"selection\" width=\"55\" />\r\n\r\n      <el-table-column align=\"center\" label=\"通知标题\" prop=\"noticeTitle\" />\r\n\r\n      <el-table-column align=\"center\" label=\"通知时间\" prop=\"addTime\" width=\"180\" />\r\n\r\n      <el-table-column align=\"center\" label=\"通知状态\" prop=\"readTime\" width=\"120\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag :type=\"scope.row.readTime ? 'success' : 'error' \">{{ scope.row.readTime ? '已读' : '未读' }}</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column align=\"center\" label=\"操作\" width=\"200\" class-name=\"small-padding fixed-width\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"primary\" size=\"mini\" @click=\"handleRead(scope.row)\">阅读</el-button>\r\n          <el-button type=\"danger\" size=\"mini\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\r\n\r\n    <el-dialog :title=\"notice.title\" :visible.sync=\"noticeVisible\" center>\r\n      <el-divider content-position=\"left\">{{ notice.admin }} 于 {{ notice.time }} 通知如下内容：</el-divider>\r\n      <div v-html=\"notice.content\" />\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"afterRead\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { listNotice, catNotice, bcatNotice, rmNotice, brmNotice } from '@/api/profile'\r\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\r\nimport _ from 'lodash'\r\n\r\nexport default {\r\n  name: 'AdminNotice',\r\n  components: { Pagination },\r\n  data() {\r\n    return {\r\n      list: [],\r\n      total: 0,\r\n      listLoading: true,\r\n      listQuery: {\r\n        page: 1,\r\n        limit: 20,\r\n        title: '',\r\n        type: 'unread',\r\n        sort: 'add_time',\r\n        order: 'desc'\r\n      },\r\n      multipleSelection: [],\r\n      notice: {\r\n        title: '',\r\n        source: '',\r\n        content: '',\r\n        addTime: ''\r\n      },\r\n      noticeVisible: false\r\n    }\r\n  },\r\n  created() {\r\n    this.getList()\r\n  },\r\n  methods: {\r\n    getList() {\r\n      this.listLoading = true\r\n      listNotice(this.listQuery)\r\n        .then(response => {\r\n          this.list = response.data.data.list\r\n          this.total = response.data.data.total\r\n          this.listLoading = false\r\n        })\r\n        .catch(() => {\r\n          this.list = []\r\n          this.total = 0\r\n          this.listLoading = false\r\n        })\r\n    },\r\n    handleFilter() {\r\n      this.listQuery.page = 1\r\n      this.getList()\r\n    },\r\n    handleDelete(row) {\r\n      rmNotice(row)\r\n        .then(response => {\r\n          this.$notify.success({\r\n            title: '成功',\r\n            message: '删除通知成功'\r\n          })\r\n          this.getList()\r\n        })\r\n        .catch(response => {\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: response.data.errmsg\r\n          })\r\n        })\r\n    },\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val\r\n    },\r\n    handleBatchDelete() {\r\n      if (this.multipleSelection.length === 0) {\r\n        this.$message.error('请选择至少一条记录')\r\n        return\r\n      }\r\n      const ids = []\r\n      _.forEach(this.multipleSelection, function(item) {\r\n        ids.push(item.id)\r\n      })\r\n      brmNotice({ ids: ids })\r\n        .then(response => {\r\n          this.$notify.success({\r\n            title: '成功',\r\n            message: '批量删除通知成功'\r\n          })\r\n          this.getList()\r\n        })\r\n        .catch(response => {\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: response.data.errmsg\r\n          })\r\n        })\r\n    },\r\n    handleRead(row) {\r\n      catNotice(row)\r\n        .then(response => {\r\n          this.notice = response.data.data\r\n          this.noticeVisible = true\r\n        })\r\n    },\r\n    afterRead() {\r\n      this.noticeVisible = false\r\n      this.getList()\r\n    },\r\n    handleBatchRead() {\r\n      if (this.multipleSelection.length === 0) {\r\n        this.$message.error('请选择至少一条记录')\r\n        return\r\n      }\r\n      const ids = []\r\n      _.forEach(this.multipleSelection, function(item) {\r\n        ids.push(item.id)\r\n      })\r\n      bcatNotice({ ids: ids })\r\n        .then(response => {\r\n          this.$notify.success({\r\n            title: '成功',\r\n            message: '批量设置通知已读成功'\r\n          })\r\n          this.getList()\r\n        })\r\n        .catch(response => {\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: response.data.errmsg\r\n          })\r\n        })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}