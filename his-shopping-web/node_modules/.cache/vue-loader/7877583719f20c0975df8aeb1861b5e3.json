{"remainingRequest":"E:\\XM\\his-shopping-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\XM\\his-shopping-web\\src\\components\\Notice\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\XM\\his-shopping-web\\src\\components\\Notice\\index.vue","mtime":1606183812502},{"path":"E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { nNotice } from '@/api/profile'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      hasNotice: false,\r\n      timer: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.timer = setInterval(this.checkNotice, 30 * 1000)\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.timer)\r\n  },\r\n  created() {\r\n    this.checkNotice()\r\n  },\r\n  methods: {\r\n    click() {\r\n      this.$router.push({ path: '/profile/notice' })\r\n    },\r\n    checkNotice() {\r\n      if (this.hasNotice) {\r\n        return\r\n      }\r\n      nNotice().then(response => {\r\n        this.hasNotice = response.data.data > 0\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;AASA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Notice","sourcesContent":["<template>\r\n  <div>\r\n    <el-badge :is-dot=\"hasNotice\">\r\n      <i class=\"el-icon-bell\" @click=\"click\" />\r\n    </el-badge>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { nNotice } from '@/api/profile'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      hasNotice: false,\r\n      timer: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.timer = setInterval(this.checkNotice, 30 * 1000)\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.timer)\r\n  },\r\n  created() {\r\n    this.checkNotice()\r\n  },\r\n  methods: {\r\n    click() {\r\n      this.$router.push({ path: '/profile/notice' })\r\n    },\r\n    checkNotice() {\r\n      if (this.hasNotice) {\r\n        return\r\n      }\r\n      nNotice().then(response => {\r\n        this.hasNotice = response.data.data > 0\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep .el-badge__content.is-fixed.is-dot {\r\n  right: 5px;\r\n  top: 10px;\r\n}\r\n\r\n.el-icon-bell {\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"]}]}