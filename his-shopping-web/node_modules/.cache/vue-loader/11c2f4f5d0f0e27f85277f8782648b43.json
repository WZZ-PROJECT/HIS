{"remainingRequest":"E:\\XM\\his-shopping-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\XM\\his-shopping-web\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\XM\\his-shopping-web\\src\\views\\login\\index.vue","mtime":1606183812550},{"path":"E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value.length < 6) {\r\n        callback(new Error('管理员密码长度应大于6'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      loginForm: {\r\n        username: 'admin123',\r\n        password: 'admin123'\r\n      },\r\n      loginRules: {\r\n        username: [{ required: true, message: '管理员账户不允许为空', trigger: 'blur' }],\r\n        password: [\r\n          { required: true, message: '管理员密码不允许为空', trigger: 'blur' },\r\n          { validator: validatePassword, trigger: 'blur' }\r\n        ]\r\n      },\r\n      passwordType: 'password',\r\n      loading: false\r\n    }\r\n  },\r\n  watch: {\r\n    $route: {\r\n      handler: function(route) {\r\n        this.redirect = route.query && route.query.redirect\r\n      },\r\n      immediate: true\r\n    }\r\n\r\n  },\r\n  created() {\r\n    // window.addEventListener('hashchange', this.afterQRScan)\r\n  },\r\n  destroyed() {\r\n    // window.removeEventListener('hashchange', this.afterQRScan)\r\n  },\r\n  methods: {\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(valid => {\r\n        if (valid && !this.loading) {\r\n          this.loading = true\r\n          this.$store.dispatch('LoginByUsername', this.loginForm).then(() => {\r\n            this.loading = false\r\n            this.$router.push({ path: this.redirect || '/' })\r\n          }).catch(response => {\r\n            this.$notify.error({\r\n              title: '失败',\r\n              message: response.data.errmsg\r\n            })\r\n            this.loading = false\r\n          })\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/login","sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"loginRules\" class=\"login-form\" auto-complete=\"on\" label-position=\"left\">\r\n      <div class=\"title-container\">\r\n        <h3 class=\"title\">管理员登录</h3>\r\n      </div>\r\n      <el-form-item prop=\"username\">\r\n        <span class=\"svg-container\">\r\n          <svg-icon icon-class=\"user\" />\r\n        </span>\r\n        <el-input v-model=\"loginForm.username\" name=\"username\" type=\"text\" tabindex=\"1\" auto-complete=\"on\" placeholder=\"管理员账户\" />\r\n      </el-form-item>\r\n\r\n      <el-form-item prop=\"password\">\r\n        <span class=\"svg-container\">\r\n          <svg-icon icon-class=\"password\" />\r\n        </span>\r\n        <el-input v-model=\"loginForm.password\" :type=\"passwordType\" name=\"password\" auto-complete=\"on\" tabindex=\"2\" show-password placeholder=\"管理员密码\" @keyup.enter.native=\"handleLogin\" />\r\n      </el-form-item>\r\n\r\n      <el-button :loading=\"loading\" type=\"primary\" style=\"width:100%;margin-bottom:30px;\" @click.native.prevent=\"handleLogin\">登录</el-button>\r\n\r\n      <div style=\"position:relative\">\r\n        <div class=\"tips\">\r\n          <span> 超级管理员用户名: admin123</span>\r\n          <span> 超级管理员用户名：admin123</span>\r\n        </div>\r\n        <div class=\"tips\">\r\n          <span> 商城管理员用户名: mall123</span>\r\n          <span> 商城管理员用户名：mall123</span>\r\n        </div>\r\n        <div class=\"tips\">\r\n          <span> 推广管理员用户名: promotion123</span>\r\n          <span> 推广管理员用户名：promotion123</span>\r\n        </div>\r\n      </div>\r\n    </el-form>\r\n\r\n    <div class=\"copyright\">\r\n      Copyright © 2020 xxx.com 版权所有 <a href=\"http://www.example.com/\">沪ICP备xxx号</a>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value.length < 6) {\r\n        callback(new Error('管理员密码长度应大于6'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      loginForm: {\r\n        username: 'admin123',\r\n        password: 'admin123'\r\n      },\r\n      loginRules: {\r\n        username: [{ required: true, message: '管理员账户不允许为空', trigger: 'blur' }],\r\n        password: [\r\n          { required: true, message: '管理员密码不允许为空', trigger: 'blur' },\r\n          { validator: validatePassword, trigger: 'blur' }\r\n        ]\r\n      },\r\n      passwordType: 'password',\r\n      loading: false\r\n    }\r\n  },\r\n  watch: {\r\n    $route: {\r\n      handler: function(route) {\r\n        this.redirect = route.query && route.query.redirect\r\n      },\r\n      immediate: true\r\n    }\r\n\r\n  },\r\n  created() {\r\n    // window.addEventListener('hashchange', this.afterQRScan)\r\n  },\r\n  destroyed() {\r\n    // window.removeEventListener('hashchange', this.afterQRScan)\r\n  },\r\n  methods: {\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(valid => {\r\n        if (valid && !this.loading) {\r\n          this.loading = true\r\n          this.$store.dispatch('LoginByUsername', this.loginForm).then(() => {\r\n            this.loading = false\r\n            this.$router.push({ path: this.redirect || '/' })\r\n          }).catch(response => {\r\n            this.$notify.error({\r\n              title: '失败',\r\n              message: response.data.errmsg\r\n            })\r\n            this.loading = false\r\n          })\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n/* 修复input 背景不协调 和光标变色 */\r\n/* Detail see https://github.com/PanJiaChen/vue-element-admin/pull/927 */\r\n\r\n$bg:#283443;\r\n$light_gray:#fff;\r\n$cursor: #fff;\r\n\r\n@supports (-webkit-mask: none) and (not (cater-color: $cursor)) {\r\n  .login-container .el-input input {\r\n    color: $cursor;\r\n  }\r\n}\r\n\r\n/* reset element-ui css */\r\n.login-container {\r\n  .el-input {\r\n    display: inline-block;\r\n    height: 47px;\r\n    width: 85%;\r\n\r\n    input {\r\n      background: transparent;\r\n      border: 0px;\r\n      -webkit-appearance: none;\r\n      border-radius: 0px;\r\n      padding: 12px 5px 12px 15px;\r\n      color: $light_gray;\r\n      height: 47px;\r\n      caret-color: $cursor;\r\n\r\n      &:-webkit-autofill {\r\n        box-shadow: 0 0 0px 1000px $bg inset !important;\r\n        -webkit-text-fill-color: $cursor !important;\r\n      }\r\n    }\r\n  }\r\n\r\n  .el-form-item {\r\n    border: 1px solid rgba(255, 255, 255, 0.1);\r\n    background: rgba(0, 0, 0, 0.1);\r\n    border-radius: 5px;\r\n    color: #454545;\r\n  }\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\" scoped>\r\n$bg:#2d3a4b;\r\n$dark_gray:#889aa4;\r\n$light_gray:#eee;\r\n\r\n.login-container {\r\n  min-height: 100%;\r\n  width: 100%;\r\n  background-color: $bg;\r\n  overflow: hidden;\r\n\r\n  .login-form {\r\n    position: relative;\r\n    width: 520px;\r\n    max-width: 100%;\r\n    padding: 160px 35px 0;\r\n    margin: 0 auto;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .tips {\r\n    font-size: 14px;\r\n    color: #fff;\r\n    margin-bottom: 10px;\r\n\r\n    span {\r\n      &:first-of-type {\r\n        margin-right: 16px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .svg-container {\r\n    padding: 6px 5px 6px 15px;\r\n    color: $dark_gray;\r\n    vertical-align: middle;\r\n    width: 30px;\r\n    display: inline-block;\r\n  }\r\n\r\n  .title-container {\r\n    position: relative;\r\n\r\n    .title {\r\n      font-size: 26px;\r\n      color: $light_gray;\r\n      margin: 0px auto 40px auto;\r\n      text-align: center;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n  .copyright {\r\n    font-size: 12px;\r\n    color: #fff;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    margin-bottom: 20px;\r\n    letter-spacing: 0.6px;\r\n    a {\r\n      font-weight: bold;\r\n      border-bottom: 1px solid #fff;\r\n      font-family: \"PingFangSC-Semibold\", sans-serif;\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n"]}]}