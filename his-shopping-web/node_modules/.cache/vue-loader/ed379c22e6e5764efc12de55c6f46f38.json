{"remainingRequest":"E:\\XM\\his-shopping-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\XM\\his-shopping-web\\src\\views\\sys\\admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\XM\\his-shopping-web\\src\\views\\sys\\admin.vue","mtime":1606183812561},{"path":"E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\XM\\his-shopping-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { listAdmin, createAdmin, updateAdmin, deleteAdmin } from '@/api/admin'\r\nimport { roleOptions } from '@/api/role'\r\nimport { uploadPath } from '@/api/storage'\r\nimport { getToken } from '@/utils/auth'\r\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\r\n\r\nexport default {\r\n  name: 'Admin',\r\n  components: { Pagination },\r\n  data() {\r\n    return {\r\n      uploadPath,\r\n      list: null,\r\n      total: 0,\r\n      roleOptions: null,\r\n      listLoading: true,\r\n      listQuery: {\r\n        page: 1,\r\n        limit: 20,\r\n        username: undefined,\r\n        sort: 'add_time',\r\n        order: 'desc'\r\n      },\r\n      dataForm: {\r\n        id: undefined,\r\n        username: undefined,\r\n        password: undefined,\r\n        avatar: undefined,\r\n        roleIds: []\r\n      },\r\n      dialogFormVisible: false,\r\n      dialogStatus: '',\r\n      textMap: {\r\n        update: '编辑',\r\n        create: '创建'\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '管理员名称不能为空', trigger: 'blur' }\r\n        ],\r\n        password: [{ required: true, message: '密码不能为空', trigger: 'blur' }]\r\n      },\r\n      downloadLoading: false\r\n    }\r\n  },\r\n  computed: {\r\n    headers() {\r\n      return {\r\n        'X-Litemall-Admin-Token': getToken()\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getList()\r\n\r\n    roleOptions()\r\n      .then(response => {\r\n        this.roleOptions = response.data.data.list\r\n      })\r\n  },\r\n  methods: {\r\n    formatRole(roleId) {\r\n      for (let i = 0; i < this.roleOptions.length; i++) {\r\n        if (roleId === this.roleOptions[i].value) {\r\n          return this.roleOptions[i].label\r\n        }\r\n      }\r\n      return ''\r\n    },\r\n    getList() {\r\n      this.listLoading = true\r\n      listAdmin(this.listQuery)\r\n        .then(response => {\r\n          this.list = response.data.data.list\r\n          this.total = response.data.data.total\r\n          this.listLoading = false\r\n        })\r\n        .catch(() => {\r\n          this.list = []\r\n          this.total = 0\r\n          this.listLoading = false\r\n        })\r\n    },\r\n    handleFilter() {\r\n      this.listQuery.page = 1\r\n      this.getList()\r\n    },\r\n    resetForm() {\r\n      this.dataForm = {\r\n        id: undefined,\r\n        username: undefined,\r\n        password: undefined,\r\n        avatar: undefined,\r\n        roleIds: []\r\n      }\r\n    },\r\n    uploadAvatar: function(response) {\r\n      this.dataForm.avatar = response.data.url\r\n    },\r\n    handleCreate() {\r\n      this.resetForm()\r\n      this.dialogStatus = 'create'\r\n      this.dialogFormVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].clearValidate()\r\n      })\r\n    },\r\n    createData() {\r\n      this.$refs['dataForm'].validate(valid => {\r\n        if (valid) {\r\n          createAdmin(this.dataForm)\r\n            .then(response => {\r\n              this.list.unshift(response.data.data)\r\n              this.dialogFormVisible = false\r\n              this.$notify.success({\r\n                title: '成功',\r\n                message: '添加管理员成功'\r\n              })\r\n            })\r\n            .catch(response => {\r\n              this.$notify.error({\r\n                title: '失败',\r\n                message: response.data.errmsg\r\n              })\r\n            })\r\n        }\r\n      })\r\n    },\r\n    handleUpdate(row) {\r\n      this.dataForm = Object.assign({}, row)\r\n      this.dialogStatus = 'update'\r\n      this.dialogFormVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].clearValidate()\r\n      })\r\n    },\r\n    updateData() {\r\n      this.$refs['dataForm'].validate(valid => {\r\n        if (valid) {\r\n          updateAdmin(this.dataForm)\r\n            .then(() => {\r\n              for (const v of this.list) {\r\n                if (v.id === this.dataForm.id) {\r\n                  const index = this.list.indexOf(v)\r\n                  this.list.splice(index, 1, this.dataForm)\r\n                  break\r\n                }\r\n              }\r\n              this.dialogFormVisible = false\r\n              this.$notify.success({\r\n                title: '成功',\r\n                message: '更新管理员成功'\r\n              })\r\n            })\r\n            .catch(response => {\r\n              this.$notify.error({\r\n                title: '失败',\r\n                message: response.data.errmsg\r\n              })\r\n            })\r\n        }\r\n      })\r\n    },\r\n    handleDelete(row) {\r\n      deleteAdmin(row)\r\n        .then(response => {\r\n          this.$notify.success({\r\n            title: '成功',\r\n            message: '删除管理员成功'\r\n          })\r\n          this.getList()\r\n        })\r\n        .catch(response => {\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: response.data.errmsg\r\n          })\r\n        })\r\n    },\r\n    handleDownload() {\r\n      this.downloadLoading = true\r\n      import('@/vendor/Export2Excel').then(excel => {\r\n        const tHeader = ['管理员ID', '管理员名称', '管理员头像']\r\n        const filterVal = ['id', 'username', 'avatar']\r\n        excel.export_json_to_excel2(\r\n          tHeader,\r\n          this.list,\r\n          filterVal,\r\n          '管理员信息'\r\n        )\r\n        this.downloadLoading = false\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["admin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"admin.vue","sourceRoot":"src/views/sys","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n\r\n    <!-- 查询和其他操作 -->\r\n    <div class=\"filter-container\">\r\n      <el-input v-model=\"listQuery.username\" clearable class=\"filter-item\" style=\"width: 200px;\" placeholder=\"请输入管理员名称\" />\r\n      <el-button v-permission=\"['GET /admin/admin/list']\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">查找</el-button>\r\n      <el-button v-permission=\"['POST /admin/admin/create']\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleCreate\">添加</el-button>\r\n      <el-button :loading=\"downloadLoading\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-download\" @click=\"handleDownload\">导出</el-button>\r\n    </div>\r\n\r\n    <!-- 查询结果 -->\r\n    <el-table v-loading=\"listLoading\" :data=\"list\" element-loading-text=\"正在查询中。。。\" border fit highlight-current-row>\r\n      <el-table-column align=\"center\" label=\"管理员ID\" prop=\"id\" sortable />\r\n\r\n      <el-table-column align=\"center\" label=\"管理员名称\" prop=\"username\" />\r\n\r\n      <el-table-column align=\"center\" label=\"管理员头像\" prop=\"avatar\">\r\n        <template slot-scope=\"scope\">\r\n          <img v-if=\"scope.row.avatar\" :src=\"scope.row.avatar\" width=\"40\">\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column align=\"center\" label=\"管理员角色\" prop=\"roleIds\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag v-for=\"roleId in scope.row.roleIds\" :key=\"roleId\" type=\"primary\" style=\"margin-right: 20px;\"> {{ formatRole(roleId) }} </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column align=\"center\" label=\"操作\" class-name=\"small-padding fixed-width\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button v-permission=\"['POST /admin/admin/update']\" type=\"primary\" size=\"mini\" @click=\"handleUpdate(scope.row)\">编辑</el-button>\r\n          <el-button v-permission=\"['POST /admin/admin/delete']\" type=\"danger\" size=\"mini\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\r\n\r\n    <!-- 添加或修改对话框 -->\r\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\r\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"dataForm\" status-icon label-position=\"left\" label-width=\"100px\" style=\"width: 400px; margin-left:50px;\">\r\n        <el-form-item label=\"管理员名称\" prop=\"username\">\r\n          <el-input v-model=\"dataForm.username\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"管理员密码\" prop=\"password\">\r\n          <el-input v-model=\"dataForm.password\" type=\"password\" auto-complete=\"off\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"管理员头像\" prop=\"avatar\">\r\n          <el-upload\r\n            :headers=\"headers\"\r\n            :action=\"uploadPath\"\r\n            :show-file-list=\"false\"\r\n            :on-success=\"uploadAvatar\"\r\n            class=\"avatar-uploader\"\r\n            accept=\".jpg,.jpeg,.png,.gif\"\r\n          >\r\n            <img v-if=\"dataForm.avatar\" :src=\"dataForm.avatar\" class=\"avatar\">\r\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\" />\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"管理员角色\" prop=\"roleIds\">\r\n          <el-select v-model=\"dataForm.roleIds\" multiple placeholder=\"请选择\">\r\n            <el-option\r\n              v-for=\"item in roleOptions\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible = false\">取消</el-button>\r\n        <el-button v-if=\"dialogStatus=='create'\" type=\"primary\" @click=\"createData\">确定</el-button>\r\n        <el-button v-else type=\"primary\" @click=\"updateData\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #20a0ff;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 120px;\r\n  height: 120px;\r\n  line-height: 120px;\r\n  text-align: center;\r\n}\r\n.avatar {\r\n  width: 145px;\r\n  height: 145px;\r\n  display: block;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport { listAdmin, createAdmin, updateAdmin, deleteAdmin } from '@/api/admin'\r\nimport { roleOptions } from '@/api/role'\r\nimport { uploadPath } from '@/api/storage'\r\nimport { getToken } from '@/utils/auth'\r\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\r\n\r\nexport default {\r\n  name: 'Admin',\r\n  components: { Pagination },\r\n  data() {\r\n    return {\r\n      uploadPath,\r\n      list: null,\r\n      total: 0,\r\n      roleOptions: null,\r\n      listLoading: true,\r\n      listQuery: {\r\n        page: 1,\r\n        limit: 20,\r\n        username: undefined,\r\n        sort: 'add_time',\r\n        order: 'desc'\r\n      },\r\n      dataForm: {\r\n        id: undefined,\r\n        username: undefined,\r\n        password: undefined,\r\n        avatar: undefined,\r\n        roleIds: []\r\n      },\r\n      dialogFormVisible: false,\r\n      dialogStatus: '',\r\n      textMap: {\r\n        update: '编辑',\r\n        create: '创建'\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '管理员名称不能为空', trigger: 'blur' }\r\n        ],\r\n        password: [{ required: true, message: '密码不能为空', trigger: 'blur' }]\r\n      },\r\n      downloadLoading: false\r\n    }\r\n  },\r\n  computed: {\r\n    headers() {\r\n      return {\r\n        'X-Litemall-Admin-Token': getToken()\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getList()\r\n\r\n    roleOptions()\r\n      .then(response => {\r\n        this.roleOptions = response.data.data.list\r\n      })\r\n  },\r\n  methods: {\r\n    formatRole(roleId) {\r\n      for (let i = 0; i < this.roleOptions.length; i++) {\r\n        if (roleId === this.roleOptions[i].value) {\r\n          return this.roleOptions[i].label\r\n        }\r\n      }\r\n      return ''\r\n    },\r\n    getList() {\r\n      this.listLoading = true\r\n      listAdmin(this.listQuery)\r\n        .then(response => {\r\n          this.list = response.data.data.list\r\n          this.total = response.data.data.total\r\n          this.listLoading = false\r\n        })\r\n        .catch(() => {\r\n          this.list = []\r\n          this.total = 0\r\n          this.listLoading = false\r\n        })\r\n    },\r\n    handleFilter() {\r\n      this.listQuery.page = 1\r\n      this.getList()\r\n    },\r\n    resetForm() {\r\n      this.dataForm = {\r\n        id: undefined,\r\n        username: undefined,\r\n        password: undefined,\r\n        avatar: undefined,\r\n        roleIds: []\r\n      }\r\n    },\r\n    uploadAvatar: function(response) {\r\n      this.dataForm.avatar = response.data.url\r\n    },\r\n    handleCreate() {\r\n      this.resetForm()\r\n      this.dialogStatus = 'create'\r\n      this.dialogFormVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].clearValidate()\r\n      })\r\n    },\r\n    createData() {\r\n      this.$refs['dataForm'].validate(valid => {\r\n        if (valid) {\r\n          createAdmin(this.dataForm)\r\n            .then(response => {\r\n              this.list.unshift(response.data.data)\r\n              this.dialogFormVisible = false\r\n              this.$notify.success({\r\n                title: '成功',\r\n                message: '添加管理员成功'\r\n              })\r\n            })\r\n            .catch(response => {\r\n              this.$notify.error({\r\n                title: '失败',\r\n                message: response.data.errmsg\r\n              })\r\n            })\r\n        }\r\n      })\r\n    },\r\n    handleUpdate(row) {\r\n      this.dataForm = Object.assign({}, row)\r\n      this.dialogStatus = 'update'\r\n      this.dialogFormVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].clearValidate()\r\n      })\r\n    },\r\n    updateData() {\r\n      this.$refs['dataForm'].validate(valid => {\r\n        if (valid) {\r\n          updateAdmin(this.dataForm)\r\n            .then(() => {\r\n              for (const v of this.list) {\r\n                if (v.id === this.dataForm.id) {\r\n                  const index = this.list.indexOf(v)\r\n                  this.list.splice(index, 1, this.dataForm)\r\n                  break\r\n                }\r\n              }\r\n              this.dialogFormVisible = false\r\n              this.$notify.success({\r\n                title: '成功',\r\n                message: '更新管理员成功'\r\n              })\r\n            })\r\n            .catch(response => {\r\n              this.$notify.error({\r\n                title: '失败',\r\n                message: response.data.errmsg\r\n              })\r\n            })\r\n        }\r\n      })\r\n    },\r\n    handleDelete(row) {\r\n      deleteAdmin(row)\r\n        .then(response => {\r\n          this.$notify.success({\r\n            title: '成功',\r\n            message: '删除管理员成功'\r\n          })\r\n          this.getList()\r\n        })\r\n        .catch(response => {\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: response.data.errmsg\r\n          })\r\n        })\r\n    },\r\n    handleDownload() {\r\n      this.downloadLoading = true\r\n      import('@/vendor/Export2Excel').then(excel => {\r\n        const tHeader = ['管理员ID', '管理员名称', '管理员头像']\r\n        const filterVal = ['id', 'username', 'avatar']\r\n        excel.export_json_to_excel2(\r\n          tHeader,\r\n          this.list,\r\n          filterVal,\r\n          '管理员信息'\r\n        )\r\n        this.downloadLoading = false\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}