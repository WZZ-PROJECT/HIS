<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.his.cloud.zuul.mapper.DmsMedicinePrescriptionRecordMapper">
  <resultMap id="BaseResultMap" type="com.neu.his.cloud.zuul.model.DmsMedicinePrescriptionRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="registration_id" jdbcType="BIGINT" property="registrationId" />
    <result column="refund_status" jdbcType="BIGINT" property="refundStatus" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="create_staff_id" jdbcType="BIGINT" property="createStaffId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, status, create_time, amount, name, registration_id, refund_status, type, create_staff_id
  </sql>
  <select id="selectByExample" parameterType="com.neu.his.cloud.zuul.model.DmsMedicinePrescriptionRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dms_medicine_prescription_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dms_medicine_prescription_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from dms_medicine_prescription_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.neu.his.cloud.zuul.model.DmsMedicinePrescriptionRecordExample">
    delete from dms_medicine_prescription_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neu.his.cloud.zuul.model.DmsMedicinePrescriptionRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dms_medicine_prescription_record (status, create_time, amount, 
      name, registration_id, refund_status, 
      type, create_staff_id)
    values (#{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{amount,jdbcType=DECIMAL}, 
      #{name,jdbcType=VARCHAR}, #{registrationId,jdbcType=BIGINT}, #{refundStatus,jdbcType=BIGINT}, 
      #{type,jdbcType=INTEGER}, #{createStaffId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.neu.his.cloud.zuul.model.DmsMedicinePrescriptionRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dms_medicine_prescription_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="registrationId != null">
        registration_id,
      </if>
      <if test="refundStatus != null">
        refund_status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createStaffId != null">
        create_staff_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="registrationId != null">
        #{registrationId,jdbcType=BIGINT},
      </if>
      <if test="refundStatus != null">
        #{refundStatus,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createStaffId != null">
        #{createStaffId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neu.his.cloud.zuul.model.DmsMedicinePrescriptionRecordExample" resultType="java.lang.Integer">
    select count(*) from dms_medicine_prescription_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dms_medicine_prescription_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.registrationId != null">
        registration_id = #{record.registrationId,jdbcType=BIGINT},
      </if>
      <if test="record.refundStatus != null">
        refund_status = #{record.refundStatus,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.createStaffId != null">
        create_staff_id = #{record.createStaffId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dms_medicine_prescription_record
    set id = #{record.id,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      amount = #{record.amount,jdbcType=DECIMAL},
      name = #{record.name,jdbcType=VARCHAR},
      registration_id = #{record.registrationId,jdbcType=BIGINT},
      refund_status = #{record.refundStatus,jdbcType=BIGINT},
      type = #{record.type,jdbcType=INTEGER},
      create_staff_id = #{record.createStaffId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neu.his.cloud.zuul.model.DmsMedicinePrescriptionRecord">
    update dms_medicine_prescription_record
    <set>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="registrationId != null">
        registration_id = #{registrationId,jdbcType=BIGINT},
      </if>
      <if test="refundStatus != null">
        refund_status = #{refundStatus,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createStaffId != null">
        create_staff_id = #{createStaffId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neu.his.cloud.zuul.model.DmsMedicinePrescriptionRecord">
    update dms_medicine_prescription_record
    set status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      amount = #{amount,jdbcType=DECIMAL},
      name = #{name,jdbcType=VARCHAR},
      registration_id = #{registrationId,jdbcType=BIGINT},
      refund_status = #{refundStatus,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      create_staff_id = #{createStaffId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>