<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.his.cloud.service.dms.mapper.BmsAccountMapper">
  <resultMap id="BaseResultMap" type="com.neu.his.cloud.service.dms.model.BmsAccount">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="patient_id" jdbcType="BIGINT" property="patientId" />
    <result column="account_code" jdbcType="VARCHAR" property="accountCode" />
    <result column="blance" jdbcType="DECIMAL" property="blance" />
    <result column="frozen" jdbcType="DECIMAL" property="frozen" />
    <result column="summery" jdbcType="DECIMAL" property="summery" />
    <result column="card_id" jdbcType="VARCHAR" property="cardId" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="account_status" jdbcType="INTEGER" property="accountStatus" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, patient_id, account_code, blance, frozen, summery, card_id, level, account_status, 
    create_user, create_time, update_user, update_time, is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.neu.his.cloud.service.dms.model.BmsAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bms_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bms_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bms_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.neu.his.cloud.service.dms.model.BmsAccountExample">
    delete from bms_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neu.his.cloud.service.dms.model.BmsAccount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bms_account (patient_id, account_code, blance, 
      frozen, summery, card_id, 
      level, account_status, create_user, 
      create_time, update_user, update_time, 
      is_deleted)
    values (#{patientId,jdbcType=BIGINT}, #{accountCode,jdbcType=VARCHAR}, #{blance,jdbcType=DECIMAL}, 
      #{frozen,jdbcType=DECIMAL}, #{summery,jdbcType=DECIMAL}, #{cardId,jdbcType=VARCHAR}, 
      #{level,jdbcType=INTEGER}, #{accountStatus,jdbcType=INTEGER}, #{createUser,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neu.his.cloud.service.dms.model.BmsAccount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bms_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="patientId != null">
        patient_id,
      </if>
      <if test="accountCode != null">
        account_code,
      </if>
      <if test="blance != null">
        blance,
      </if>
      <if test="frozen != null">
        frozen,
      </if>
      <if test="summery != null">
        summery,
      </if>
      <if test="cardId != null">
        card_id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="accountStatus != null">
        account_status,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="patientId != null">
        #{patientId,jdbcType=BIGINT},
      </if>
      <if test="accountCode != null">
        #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="blance != null">
        #{blance,jdbcType=DECIMAL},
      </if>
      <if test="frozen != null">
        #{frozen,jdbcType=DECIMAL},
      </if>
      <if test="summery != null">
        #{summery,jdbcType=DECIMAL},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="accountStatus != null">
        #{accountStatus,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neu.his.cloud.service.dms.model.BmsAccountExample" resultType="java.lang.Integer">
    select count(*) from bms_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bms_account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.patientId != null">
        patient_id = #{record.patientId,jdbcType=BIGINT},
      </if>
      <if test="record.accountCode != null">
        account_code = #{record.accountCode,jdbcType=VARCHAR},
      </if>
      <if test="record.blance != null">
        blance = #{record.blance,jdbcType=DECIMAL},
      </if>
      <if test="record.frozen != null">
        frozen = #{record.frozen,jdbcType=DECIMAL},
      </if>
      <if test="record.summery != null">
        summery = #{record.summery,jdbcType=DECIMAL},
      </if>
      <if test="record.cardId != null">
        card_id = #{record.cardId,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.accountStatus != null">
        account_status = #{record.accountStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bms_account
    set id = #{record.id,jdbcType=BIGINT},
      patient_id = #{record.patientId,jdbcType=BIGINT},
      account_code = #{record.accountCode,jdbcType=VARCHAR},
      blance = #{record.blance,jdbcType=DECIMAL},
      frozen = #{record.frozen,jdbcType=DECIMAL},
      summery = #{record.summery,jdbcType=DECIMAL},
      card_id = #{record.cardId,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      account_status = #{record.accountStatus,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neu.his.cloud.service.dms.model.BmsAccount">
    update bms_account
    <set>
      <if test="patientId != null">
        patient_id = #{patientId,jdbcType=BIGINT},
      </if>
      <if test="accountCode != null">
        account_code = #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="blance != null">
        blance = #{blance,jdbcType=DECIMAL},
      </if>
      <if test="frozen != null">
        frozen = #{frozen,jdbcType=DECIMAL},
      </if>
      <if test="summery != null">
        summery = #{summery,jdbcType=DECIMAL},
      </if>
      <if test="cardId != null">
        card_id = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="accountStatus != null">
        account_status = #{accountStatus,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neu.his.cloud.service.dms.model.BmsAccount">
    update bms_account
    set patient_id = #{patientId,jdbcType=BIGINT},
      account_code = #{accountCode,jdbcType=VARCHAR},
      blance = #{blance,jdbcType=DECIMAL},
      frozen = #{frozen,jdbcType=DECIMAL},
      summery = #{summery,jdbcType=DECIMAL},
      card_id = #{cardId,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      account_status = #{accountStatus,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>