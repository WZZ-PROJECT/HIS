<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.his.cloud.service.bms.mapper.BmsRollbackMapper">
  <resultMap id="BaseResultMap" type="com.neu.his.cloud.service.bms.model.BmsRollback">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="refund_bill_id" jdbcType="BIGINT" property="refundBillId" />
    <result column="account_code" jdbcType="VARCHAR" property="accountCode" />
    <result column="rb_amount" jdbcType="DECIMAL" property="rbAmount" />
    <result column="rb_state" jdbcType="INTEGER" property="rbState" />
    <result column="app_time" jdbcType="TIMESTAMP" property="appTime" />
    <result column="rb_time" jdbcType="TIMESTAMP" property="rbTime" />
    <result column="rb_type" jdbcType="INTEGER" property="rbType" />
    <result column="out_trade_id" jdbcType="VARCHAR" property="outTradeId" />
    <result column="rosult" jdbcType="VARCHAR" property="rosult" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, refund_bill_id, account_code, rb_amount, rb_state, app_time, rb_time, rb_type, 
    out_trade_id, rosult, create_user, create_time, update_user, update_time, is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.neu.his.cloud.service.bms.model.BmsRollbackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bms_rollback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bms_rollback
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bms_rollback
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.neu.his.cloud.service.bms.model.BmsRollbackExample">
    delete from bms_rollback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neu.his.cloud.service.bms.model.BmsRollback">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bms_rollback (refund_bill_id, account_code, rb_amount, 
      rb_state, app_time, rb_time, 
      rb_type, out_trade_id, rosult, 
      create_user, create_time, update_user, 
      update_time, is_deleted)
    values (#{refundBillId,jdbcType=BIGINT}, #{accountCode,jdbcType=VARCHAR}, #{rbAmount,jdbcType=DECIMAL}, 
      #{rbState,jdbcType=INTEGER}, #{appTime,jdbcType=TIMESTAMP}, #{rbTime,jdbcType=TIMESTAMP}, 
      #{rbType,jdbcType=INTEGER}, #{outTradeId,jdbcType=VARCHAR}, #{rosult,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neu.his.cloud.service.bms.model.BmsRollback">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bms_rollback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="refundBillId != null">
        refund_bill_id,
      </if>
      <if test="accountCode != null">
        account_code,
      </if>
      <if test="rbAmount != null">
        rb_amount,
      </if>
      <if test="rbState != null">
        rb_state,
      </if>
      <if test="appTime != null">
        app_time,
      </if>
      <if test="rbTime != null">
        rb_time,
      </if>
      <if test="rbType != null">
        rb_type,
      </if>
      <if test="outTradeId != null">
        out_trade_id,
      </if>
      <if test="rosult != null">
        rosult,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="refundBillId != null">
        #{refundBillId,jdbcType=BIGINT},
      </if>
      <if test="accountCode != null">
        #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="rbAmount != null">
        #{rbAmount,jdbcType=DECIMAL},
      </if>
      <if test="rbState != null">
        #{rbState,jdbcType=INTEGER},
      </if>
      <if test="appTime != null">
        #{appTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rbTime != null">
        #{rbTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rbType != null">
        #{rbType,jdbcType=INTEGER},
      </if>
      <if test="outTradeId != null">
        #{outTradeId,jdbcType=VARCHAR},
      </if>
      <if test="rosult != null">
        #{rosult,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neu.his.cloud.service.bms.model.BmsRollbackExample" resultType="java.lang.Integer">
    select count(*) from bms_rollback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bms_rollback
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.refundBillId != null">
        refund_bill_id = #{record.refundBillId,jdbcType=BIGINT},
      </if>
      <if test="record.accountCode != null">
        account_code = #{record.accountCode,jdbcType=VARCHAR},
      </if>
      <if test="record.rbAmount != null">
        rb_amount = #{record.rbAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.rbState != null">
        rb_state = #{record.rbState,jdbcType=INTEGER},
      </if>
      <if test="record.appTime != null">
        app_time = #{record.appTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rbTime != null">
        rb_time = #{record.rbTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rbType != null">
        rb_type = #{record.rbType,jdbcType=INTEGER},
      </if>
      <if test="record.outTradeId != null">
        out_trade_id = #{record.outTradeId,jdbcType=VARCHAR},
      </if>
      <if test="record.rosult != null">
        rosult = #{record.rosult,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bms_rollback
    set id = #{record.id,jdbcType=BIGINT},
      refund_bill_id = #{record.refundBillId,jdbcType=BIGINT},
      account_code = #{record.accountCode,jdbcType=VARCHAR},
      rb_amount = #{record.rbAmount,jdbcType=DECIMAL},
      rb_state = #{record.rbState,jdbcType=INTEGER},
      app_time = #{record.appTime,jdbcType=TIMESTAMP},
      rb_time = #{record.rbTime,jdbcType=TIMESTAMP},
      rb_type = #{record.rbType,jdbcType=INTEGER},
      out_trade_id = #{record.outTradeId,jdbcType=VARCHAR},
      rosult = #{record.rosult,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neu.his.cloud.service.bms.model.BmsRollback">
    update bms_rollback
    <set>
      <if test="refundBillId != null">
        refund_bill_id = #{refundBillId,jdbcType=BIGINT},
      </if>
      <if test="accountCode != null">
        account_code = #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="rbAmount != null">
        rb_amount = #{rbAmount,jdbcType=DECIMAL},
      </if>
      <if test="rbState != null">
        rb_state = #{rbState,jdbcType=INTEGER},
      </if>
      <if test="appTime != null">
        app_time = #{appTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rbTime != null">
        rb_time = #{rbTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rbType != null">
        rb_type = #{rbType,jdbcType=INTEGER},
      </if>
      <if test="outTradeId != null">
        out_trade_id = #{outTradeId,jdbcType=VARCHAR},
      </if>
      <if test="rosult != null">
        rosult = #{rosult,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neu.his.cloud.service.bms.model.BmsRollback">
    update bms_rollback
    set refund_bill_id = #{refundBillId,jdbcType=BIGINT},
      account_code = #{accountCode,jdbcType=VARCHAR},
      rb_amount = #{rbAmount,jdbcType=DECIMAL},
      rb_state = #{rbState,jdbcType=INTEGER},
      app_time = #{appTime,jdbcType=TIMESTAMP},
      rb_time = #{rbTime,jdbcType=TIMESTAMP},
      rb_type = #{rbType,jdbcType=INTEGER},
      out_trade_id = #{outTradeId,jdbcType=VARCHAR},
      rosult = #{rosult,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>