{"remainingRequest":"F:\\XM\\his-web\\node_modules\\thread-loader\\dist\\cjs.js!F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js!F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\XM\\his-web\\src\\views\\dashboard\\components\\LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\XM\\his-web\\src\\views\\dashboard\\components\\LineChart.vue","mtime":1600936446200},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1600936436646},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1600936442292}],"contextDependencies":[],"result":["//\n//\n//\n//\nimport echarts from 'echarts';\n\nrequire('echarts/theme/macarons'); // echarts theme\n\n\nimport resize from \"./mixins/resize\";\nexport default {\n  mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '350px'\n    },\n    autoResize: {\n      type: Boolean,\n      default: true\n    },\n    chartData: {\n      type: Object,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n  watch: {\n    chartData: {\n      deep: true,\n      handler: function handler(val) {\n        this.setOptions(val);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.initChart();\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    initChart: function initChart() {\n      this.chart = echarts.init(this.$el, 'macarons');\n      this.setOptions(this.chartData);\n    },\n    setOptions: function setOptions() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          dateOfSevenDays = _ref.dateOfSevenDays,\n          numOfPatients = _ref.numOfPatients,\n          label = _ref.label;\n\n      var text = '';\n      if (label === 1) text = '全院七日接诊人数';else if (label === 3) text = '本科室七日接诊人数';else text = '个人七日接诊人数';\n      this.chart.setOption({\n        title: {\n          left: 'center',\n          text: text\n        },\n        xAxis: {\n          data: dateOfSevenDays,\n          boundaryGap: false,\n          axisTick: {\n            show: false\n          }\n        },\n        grid: {\n          left: 10,\n          right: 40,\n          bottom: 20,\n          top: 30,\n          containLabel: true\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          },\n          padding: [5, 10]\n        },\n        yAxis: {\n          axisTick: {\n            show: false\n          }\n        },\n        legend: {\n          data: ['numOfPatients']\n        },\n        series: [{\n          name: '接诊患者数',\n          smooth: true,\n          type: 'line',\n          itemStyle: {\n            normal: {\n              color: '#3888fa',\n              lineStyle: {\n                color: '#3888fa',\n                width: 2\n              },\n              areaStyle: {\n                color: '#f3f8ff'\n              }\n            }\n          },\n          data: numOfPatients,\n          animationDuration: 2800,\n          animationEasing: 'quadraticOut'\n        }]\n      });\n    }\n  }\n};",null]}