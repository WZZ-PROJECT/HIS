{"remainingRequest":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js!F:\\XM\\his-web\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\XM\\his-web\\src\\store\\modules\\user.js","dependencies":[{"path":"F:\\XM\\his-web\\src\\store\\modules\\user.js","mtime":1600936446179},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\eslint-loader\\index.js","mtime":1600936418212}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"F:/XM/his-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"F:/XM/his-web/node_modules/@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"F:/XM/his-web/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"F:/XM/his-web/node_modules/@babel/runtime/helpers/defineProperty\"));\n\nvar _user = require(\"@/api/user\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _router = _interopRequireWildcard(require(\"@/router\"));\n\nvar _state;\n\nvar state = (_state = {\n  token: (0, _auth.getToken)(),\n  name: '',\n  id: ''\n}, (0, _defineProperty2.default)(_state, \"name\", ''), (0, _defineProperty2.default)(_state, \"avatar\", ''), (0, _defineProperty2.default)(_state, \"introduction\", ''), (0, _defineProperty2.default)(_state, \"roles\", []), (0, _defineProperty2.default)(_state, \"deptId\", ''), (0, _defineProperty2.default)(_state, \"roleId\", ''), (0, _defineProperty2.default)(_state, \"registrationRankId\", ''), _state);\nvar mutations = {\n  SET_ID: function SET_ID(state, id) {\n    state.id = id;\n  },\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_INTRODUCTION: function SET_INTRODUCTION(state, introduction) {\n    state.introduction = introduction;\n  },\n  SET_NAME: function SET_NAME(state, name) {\n    state.name = name;\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n  },\n  SET_ROLES: function SET_ROLES(state, roles) {\n    state.roles = roles;\n  },\n  SET_DEPTID: function SET_DEPTID(state, deptid) {\n    state.deptId = deptid;\n  },\n  SET_ROLEID: function SET_ROLEID(state, roleId) {\n    state.roleId = roleId;\n  },\n  SET_REGISTRATIONRANKID: function SET_REGISTRATIONRANKID(state, registrationRankId) {\n    state.registrationRankId = registrationRankId;\n  }\n};\nvar actions = {\n  // 用户登录\n  login: function login(_ref, userInfo) {\n    var commit = _ref.commit;\n    var username = userInfo.username,\n        password = userInfo.password;\n    return new Promise(function (resolve, reject) {\n      (0, _user.login)({\n        username: username.trim(),\n        password: password\n      }).then(function (response) {\n        var data = response.data;\n        commit('SET_TOKEN', data.tokenHead + data.token);\n        (0, _auth.setToken)(data.tokenHead + data.token);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // 获取用户信息\n  getInfo: function getInfo(_ref2) {\n    var commit = _ref2.commit;\n    return new Promise(function (resolve, reject) {\n      (0, _user.getInfo)().then(function (response) {\n        var data = response.data;\n\n        if (!data) {\n          reject('验证失败，请重新登录！');\n        }\n\n        var deptId = data.deptId,\n            id = data.id,\n            name = data.name,\n            roleId = data.roleId;\n        commit('SET_DEPTID', deptId);\n        commit('SET_ID', id);\n        commit('SET_NAME', name);\n        commit('SET_ROLEID', 1);\n        commit('SET_ROLES', [roleId]);\n        data.roles = [roleId];\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // 用户登出\n  logout: function logout(_ref3) {\n    var commit = _ref3.commit,\n        state = _ref3.state;\n    return new Promise(function (resolve, reject) {\n      (0, _user.logout)(state.token).then(function () {\n        commit('SET_TOKEN', '');\n        commit('SET_ROLES', []);\n        (0, _auth.removeToken)();\n        (0, _router.resetRouter)();\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // 删除token\n  resetToken: function resetToken(_ref4) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve) {\n      commit('SET_TOKEN', '');\n      commit('SET_ROLES', []);\n      (0, _auth.removeToken)();\n      resolve();\n    });\n  },\n  // 动态编辑用户权限及路由\n  changeRoles: function changeRoles(_ref5, role) {\n    var commit = _ref5.commit,\n        dispatch = _ref5.dispatch;\n    return new Promise( /*#__PURE__*/function () {\n      var _ref6 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve) {\n        var token, _yield$dispatch, roles, accessRoutes;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                token = role + '-token';\n                commit('SET_TOKEN', token);\n                (0, _auth.setToken)(token);\n                _context.next = 5;\n                return dispatch('getInfo');\n\n              case 5:\n                _yield$dispatch = _context.sent;\n                roles = _yield$dispatch.roles;\n                (0, _router.resetRouter)();\n                _context.next = 10;\n                return dispatch('permission/generateRoutes', roles, {\n                  root: true\n                });\n\n              case 10:\n                accessRoutes = _context.sent;\n\n                _router.default.addRoutes(accessRoutes);\n\n                dispatch('tagsView/delAllViews', null, {\n                  root: true\n                });\n                resolve();\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n  }\n};\nvar _default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};\nexports.default = _default;",null]}