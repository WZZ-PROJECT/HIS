{"remainingRequest":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js!F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\XM\\his-web\\src\\views\\admin\\settleCat.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\XM\\his-web\\src\\views\\admin\\settleCat.vue","mtime":1601366454592},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1600936442292}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"F:/XM/his-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"F:/XM/his-web/node_modules/@babel/runtime/helpers/interopRequireWildcard\"));\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"F:/XM/his-web/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _utils = require(\"@/utils\");\n\nvar _admin = require(\"@/api/admin\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _q = require(\"q\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// Secondary package based on el-pagination\nvar defaultDepart = {\n  id: '',\n  code: '',\n  name: ''\n};\nvar _default = {\n  components: {\n    Pagination: _Pagination.default\n  },\n  data: function data() {\n    return {\n      SettleCatList: [],\n      SettleCat: {},\n      depart: Object.assign({}, defaultDepart),\n      depList: [],\n      dialogVisible: false,\n      dialogType: 'new',\n      checkStrictly: false,\n      defaultProps: {\n        children: 'children',\n        label: 'title'\n      },\n      deptype: [1, 2, 3, 4],\n      total: 0,\n      listLoading: true,\n      allCatId: [],\n      allDep: [],\n      allType: [],\n      listQuery: {\n        id: '',\n        code: '',\n        name: '',\n        status: '',\n        page: 1,\n        limit: 20\n      },\n      downloadLoading: false,\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入结算类别名称',\n          trigger: 'blur'\n        }]\n      },\n      deplistref: []\n    };\n  },\n  computed: {},\n  created: function created() {\n    // Mock: get all routes and roles list from server\n    this.getDeplist();\n  },\n  methods: {\n    getDeplist: function () {\n      var _getDeplist = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.listLoading = true;\n                _context.next = 3;\n                return (0, _admin.getSettleCatlist)(this.listQuery);\n\n              case 3:\n                response = _context.sent;\n                console.log(response);\n                this.depList = response.data.list;\n                this.total = response.data.total;\n                this.listLoading = false;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getDeplist() {\n        return _getDeplist.apply(this, arguments);\n      }\n\n      return getDeplist;\n    }(),\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getDeplist();\n    },\n    handleAdd: function handleAdd() {\n      var _this = this;\n\n      this.resetTemp();\n      this.dialogType = 'new';\n      this.dialogVisible = true;\n      this.checkStrictly = true;\n      this.$nextTick(function () {\n        _this.$refs['depart'].clearValidate();\n      });\n    },\n    handleEdit: function handleEdit(row) {\n      var _this2 = this;\n\n      this.resetTemp();\n      this.depart = Object.assign({}, row); // copy obj\n\n      this.dialogType = 'edit';\n      this.dialogVisible = true;\n      this.checkStrictly = true;\n      this.$nextTick(function () {\n        _this2.$refs['depart'].clearValidate();\n      });\n    },\n    resetTemp: function resetTemp() {\n      this.depart.id = '';\n      this.depart.name = '';\n      this.depart.catId = '';\n      this.depart.code = '';\n      this.depart.type = '';\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          if (j === 'timestamp') {\n            return parseTime(v[j]);\n          } else {\n            return v[j];\n          }\n        });\n      });\n    },\n    changedep: function changedep(val) {\n      this.deplistref = val;\n    },\n    handleSomeDelete: function handleSomeDelete() {\n      var _this3 = this;\n\n      if (this.deplistref.length === 0) {\n        this.$notify({\n          title: '提示',\n          message: \"请选择结算累别！\",\n          type: 'warning',\n          duration: 2000\n        });\n        return;\n      }\n\n      this.$confirm('确认删除选中结算类别?', '警告', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        var delsom = '';\n\n        for (var i = 0; i < _this3.deplistref.length; i++) {\n          if (i !== _this3.deplistref.length - 1) delsom = delsom + _this3.deplistref[i].id + ',';else delsom = delsom + _this3.deplistref[i].id;\n        }\n\n        console.log(delsom);\n\n        if (delsom != null && delsom != '') {\n          (0, _admin.deleteSettleCat)(delsom).then(function (res) {\n            _this3.$notify({\n              title: '成功',\n              message: res.message,\n              type: 'success',\n              duration: 2000\n            });\n\n            _this3.getDeplist();\n          });\n        }\n      });\n    },\n    handleDelete: function handleDelete(row) {\n      var _this4 = this;\n\n      this.$confirm('确认删除当前结算类别?', '警告', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        (0, _admin.deleteSettleCat)(row.id).then(function (res) {\n          _this4.$notify({\n            title: '成功',\n            message: '已删除该结算类别',\n            type: 'success',\n            duration: 2000\n          });\n\n          _this4.getDeplist();\n        });\n      });\n    },\n    handleDownload: function () {\n      var _handleDownload = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _this5 = this;\n\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _admin.getAllSettleCat)();\n\n              case 2:\n                res = _context2.sent;\n\n                if (!(res.data.length === 0)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                this.$notify({\n                  title: '暂无数据',\n                  message: '暂无数据！',\n                  type: 'warning',\n                  duration: 2000\n                });\n                return _context2.abrupt(\"return\");\n\n              case 6:\n                this.downloadLoading = true;\n\n                _q.Promise.resolve().then(function () {\n                  return (0, _interopRequireWildcard2.default)(require('@/vendor/Export2Excel'));\n                }).then(function (excel) {\n                  var tHeader = ['编号', '结算类别名'];\n                  var filterVal = ['id', 'name'];\n\n                  var data = _this5.formatJson(filterVal, res.data);\n\n                  excel.export_json_to_excel({\n                    header: tHeader,\n                    data: data,\n                    filename: '结算类别'\n                  });\n                  _this5.downloadLoading = false;\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleDownload() {\n        return _handleDownload.apply(this, arguments);\n      }\n\n      return handleDownload;\n    }(),\n    confirmDep: function () {\n      var _confirmDep = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(formName) {\n        var _this6 = this;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.$refs[formName].validate(function (valid) {\n                  if (valid) {\n                    var isEdit = _this6.dialogType === 'edit';\n                    _this6.listLoading = true;\n\n                    if (isEdit) {\n                      console.log(_this6.depart.id);\n                      (0, _admin.updateSettleCat)(_this6.depart).then(function (res) {\n                        _this6.getDeplist();\n\n                        _this6.$notify({\n                          title: '成功',\n                          message: '已修改该结算类别',\n                          type: 'success',\n                          duration: 2000\n                        });\n                      });\n                      _this6.dialogVisible = false;\n                    } else {\n                      (0, _admin.createSettleCat)(_this6.depart).then(function (res) {\n                        _this6.getDeplist();\n\n                        _this6.$notify({\n                          title: '成功',\n                          message: res.message,\n                          type: 'success',\n                          duration: 2000\n                        });\n\n                        _this6.dialogVisible = false;\n                      });\n                    }\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function confirmDep(_x) {\n        return _confirmDep.apply(this, arguments);\n      }\n\n      return confirmDep;\n    }()\n  }\n};\nexports.default = _default;",null]}