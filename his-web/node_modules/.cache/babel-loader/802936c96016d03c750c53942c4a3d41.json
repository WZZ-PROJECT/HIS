{"remainingRequest":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js!F:\\XM\\his-web\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\XM\\his-web\\mock\\role\\index.js","dependencies":[{"path":"F:\\XM\\his-web\\mock\\role\\index.js","mtime":1600936404135},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\eslint-loader\\index.js","mtime":1600936418212}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"F:/XM/his-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"F:/XM/his-web/node_modules/@babel/runtime/helpers/toConsumableArray\"));\n\nvar _mockjs = _interopRequireDefault(require(\"mockjs\"));\n\nvar _index = require(\"../../src/utils/index.js\");\n\nvar _routes = require(\"./routes.js\");\n\nvar routes = (0, _index.deepClone)([].concat((0, _toConsumableArray2.default)(_routes.constantRoutes), (0, _toConsumableArray2.default)(_routes.asyncRoutes)));\nvar roles = [{\n  key: '001',\n  name: '超级管理员',\n  description: '超级管理员权限',\n  routes: routes\n}, {\n  key: '002',\n  name: '管理员',\n  description: '...',\n  routes: routes.filter(function (i) {\n    return i.path !== '/permission';\n  }) // just a mock\n\n}, {\n  key: '003',\n  name: '门诊医生',\n  description: '门诊医生权限',\n  routes: [{\n    path: '/outpatient',\n    redirect: '/outpatient/index',\n    children: [{\n      path: 'index',\n      name: 'outpatient',\n      meta: {\n        title: '门诊医生工作台',\n        icon: 'list',\n        noCache: true\n      }\n    }]\n  }]\n}];\nvar _default = [// mock get all routes form server\n{\n  url: '/routes',\n  type: 'get',\n  response: function response(_) {\n    return {\n      code: 20000,\n      data: routes\n    };\n  }\n}, // mock get all roles form server\n{\n  url: '/roles',\n  type: 'get',\n  response: function response(_) {\n    return {\n      code: 20000,\n      data: roles\n    };\n  }\n}, // add role\n{\n  url: '/role',\n  type: 'post',\n  response: {\n    code: 20000,\n    data: {\n      key: _mockjs.default.mock('@integer(300, 5000)')\n    }\n  }\n}, // update role\n{\n  url: '/role/[A-Za-z0-9]',\n  type: 'put',\n  response: {\n    code: 20000,\n    data: {\n      status: 'success'\n    }\n  }\n}, // delete role\n{\n  url: '/role/[A-Za-z0-9]',\n  type: 'delete',\n  response: {\n    code: 20000,\n    data: {\n      status: 'success'\n    }\n  }\n}];\nexports.default = _default;",null]}