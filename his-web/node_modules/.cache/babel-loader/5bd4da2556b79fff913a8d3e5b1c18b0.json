{"remainingRequest":"F:\\XM\\his-web\\node_modules\\thread-loader\\dist\\cjs.js!F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js!F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\XM\\his-web\\src\\views\\technology\\upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\XM\\his-web\\src\\views\\technology\\upload.vue","mtime":1601008410137},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1600936436646},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1600936442292}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { policy, uploadResult as _uploadResult } from '@/api/upload';\nexport default {\n  props: ['uploadpatient'],\n  name: 'Upload',\n  data: function data() {\n    return {\n      checkResult: '',\n      color: '#1890ff',\n      dialogVisible: false,\n      listObj: {},\n      arr: [],\n      fileList: [],\n      dataObj: {\n        policy: '',\n        signature: '',\n        key: '',\n        ossaccessKeyId: '',\n        dir: '',\n        host: ''\n      }\n    };\n  },\n  watch: {\n    'uploadpatient': function uploadpatient(newVal, oldVal) {\n      this.uploadpatient = newVal;\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    policy().then(function (res) {\n      _this.dataObj = res.data;\n    });\n  },\n  methods: {\n    uploadResult: function uploadResult() {\n      var _this2 = this;\n\n      var data = {};\n      data.id = this.uploadpatient;\n      data.executeStaffId = this.$store.getters.id;\n      data.checkResult = this.checkResult;\n      data.resultImgUrlList = '';\n      this.arr.forEach(function (item) {\n        data.resultImgUrlList += item.url + ',';\n      });\n      data.resultImgUrlList = data.resultImgUrlList.substr(0, data.resultImgUrlList.length - 1);\n\n      _uploadResult(data).then(function (res) {\n        _this2.$notify({\n          title: '成功',\n          message: res.message,\n          type: 'success',\n          duration: 2000\n        });\n\n        console.log(8921);\n\n        _this2.$emit('reflect');\n\n        console.log(666312);\n      });\n    },\n    checkAllSuccess: function checkAllSuccess() {\n      var _this3 = this;\n\n      return Object.keys(this.listObj).every(function (item) {\n        return _this3.listObj[item].hasSuccess;\n      });\n    },\n    handleSubmit: function handleSubmit() {\n      var _this4 = this;\n\n      var arr = Object.keys(this.listObj).map(function (v) {\n        return _this4.listObj[v];\n      });\n\n      if (!this.checkAllSuccess()) {\n        this.$message('请等待所有图片上传成功 或 出现了网络问题，请刷新页面重新上传！');\n        return;\n      }\n\n      this.arr = arr;\n      this.dialogVisible = false;\n      this.reflect();\n    },\n    handleSuccess: function handleSuccess(response, file) {\n      var uid = file.uid;\n      var objKeyArr = Object.keys(this.listObj);\n\n      for (var i = 0, len = objKeyArr.length; i < len; i++) {\n        if (this.listObj[objKeyArr[i]].uid === uid) {\n          this.listObj[objKeyArr[i]].url = this.dataObj.host + '/' + this.dataObj.dir + '/' + file.name;\n          this.listObj[objKeyArr[i]].hasSuccess = true;\n          return;\n        }\n      }\n\n      this.$notify({\n        title: '成功',\n        message: '上传成功222',\n        type: 'success',\n        duration: 2000\n      });\n    },\n    handleRemove: function handleRemove(file) {\n      var uid = file.uid;\n      var objKeyArr = Object.keys(this.listObj);\n\n      for (var i = 0, len = objKeyArr.length; i < len; i++) {\n        if (this.listObj[objKeyArr[i]].uid === uid) {\n          delete this.listObj[objKeyArr[i]];\n          return;\n        }\n      }\n    },\n    beforeUpload: function beforeUpload(file) {\n      var _this5 = this;\n\n      var _self = this;\n\n      var fileName = file.uid;\n      this.listObj[fileName] = {};\n      return new Promise(function (resolve, reject) {\n        policy().then(function (response) {\n          _self.dataObj.policy = response.data.policy;\n          _self.dataObj.signature = response.data.signature;\n          _self.dataObj.ossaccessKeyId = response.data.accessKeyId;\n          _self.dataObj.key = response.data.dir + '/${filename}';\n          _self.dataObj.dir = response.data.dir;\n          _self.dataObj.host = response.data.host;\n          _self.listObj[fileName] = {\n            hasSuccess: false,\n            uid: file.uid,\n            width: _this5.width,\n            height: _this5.height\n          };\n          resolve(true);\n        }).catch(function (err) {\n          reject(false);\n        });\n      });\n    }\n  }\n};",null]}