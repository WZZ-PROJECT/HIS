{"remainingRequest":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js!F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\XM\\his-web\\src\\views\\dashboard\\components\\BarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\XM\\his-web\\src\\views\\dashboard\\components\\BarChart.vue","mtime":1600936446200},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1600936442292}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"F:/XM/his-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _echarts = _interopRequireDefault(require(\"echarts\"));\n\nvar _resize = _interopRequireDefault(require(\"./mixins/resize\"));\n\nvar _charts = require(\"@/api/charts\");\n\n//\n//\n//\n//\nrequire('echarts/theme/macarons'); // echarts theme\n\n\nvar animationDuration = 3000;\nvar _default = {\n  mixins: [_resize.default],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '300px'\n    }\n  },\n  data: function data() {\n    return {\n      data: {},\n      chart: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.deptClassifyStatistics();\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    deptClassifyStatistics: function deptClassifyStatistics() {\n      var _this2 = this;\n\n      (0, _charts.deptClassifyStatistics)(this.$store.getters.deptId).then(function (res) {\n        _this2.data = res.data;\n\n        _this2.initChart();\n      });\n    },\n    initChart: function initChart() {\n      this.chart = _echarts.default.init(this.$el, 'macarons');\n      this.chart.setOption({\n        title: {\n          left: 'center',\n          text: '科室分类费用统计',\n          fontSize: 1\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n          }\n        },\n        grid: {\n          top: 10,\n          left: '2%',\n          right: '2%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          data: this.data.dateOfSevenDays,\n          axisTick: {\n            alignWithLabel: true\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          axisTick: {\n            show: false\n          }\n        }],\n        series: [{\n          name: '处置费',\n          type: 'bar',\n          stack: 'vistors',\n          barWidth: '30%',\n          data: this.data.dispositionAmount,\n          animationDuration: animationDuration\n        }, {\n          name: '检查费',\n          type: 'bar',\n          stack: 'vistors',\n          barWidth: '30%',\n          data: this.data.checkAmount,\n          animationDuration: animationDuration\n        }, {\n          name: '检验费',\n          type: 'bar',\n          stack: 'vistors',\n          barWidth: '30%',\n          data: this.data.testAmount,\n          animationDuration: animationDuration\n        }, {\n          name: '西药费',\n          type: 'bar',\n          stack: 'vistors',\n          barWidth: '30%',\n          data: this.data.medicineAmount,\n          animationDuration: animationDuration\n        }, {\n          name: '中药费',\n          type: 'bar',\n          stack: 'vistors',\n          barWidth: '30%',\n          data: this.data.herbalAmount,\n          animationDuration: animationDuration\n        }]\n      });\n    }\n  }\n};\nexports.default = _default;",null]}