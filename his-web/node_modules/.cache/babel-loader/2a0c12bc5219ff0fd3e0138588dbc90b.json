{"remainingRequest":"F:\\XM\\his-web\\node_modules\\thread-loader\\dist\\cjs.js!F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js!F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\XM\\his-web\\src\\views\\outpatient\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\XM\\his-web\\src\\views\\outpatient\\index.vue","mtime":1602056307723},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1600936436646},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1600936442292}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"F:/XM/his-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Record from \"./workstation/record\";\nimport Inspection from \"./workstation/inspection\";\nimport Examine from \"./workstation/examine\";\nimport Prescription from \"./workstation/prescription\";\nimport Handle from \"./workstation/handle\";\nimport Comfirm from \"./workstation/confirm\";\nimport Cprescription from \"./workstation/Cprescription\";\nimport Bill from \"./workstation/bill\";\nimport historyRecord from \"./workstation/historyRecord\";\nimport historyInspection from \"./workstation/historyInspection\";\nimport historyExamine from \"./workstation/historyExamine\";\nimport historyPrescription from \"./workstation/historyPrescription\";\nimport historyHandle from \"./workstation/historyHandle\";\nimport historyComfirm from \"./workstation/historyComfirm\";\nimport historyCprescription from \"./workstation/historyCprescription\";\nimport historyBill from \"./workstation/historyBill\";\nimport { getPatientList as _getPatientList, bindPatient as _bindPatient, startDiagnosis } from '@/api/outpatient/patient';\nimport { endDiagnosis as _endDiagnosis, getnonend, endgetnonend, Clinical } from '@/api/outpatient/dmscase';\nimport { deepClone } from '@/utils';\nimport { truncate } from 'fs';\nexport default {\n  components: {\n    Record: Record,\n    Inspection: Inspection,\n    Examine: Examine,\n    Prescription: Prescription,\n    Handle: Handle,\n    Comfirm: Comfirm,\n    Cprescription: Cprescription,\n    Bill: Bill,\n    historyRecord: historyRecord,\n    historyInspection: historyInspection,\n    historyExamine: historyExamine,\n    historyPrescription: historyPrescription,\n    historyHandle: historyHandle,\n    historyComfirm: historyComfirm,\n    historyCprescription: historyCprescription,\n    historyBill: historyBill\n  },\n  data: function data() {\n    return {\n      confirmed: true,\n      comfirmdisabled: true,\n      firstdisabled: true,\n      mask: true,\n      loaddepp: true,\n      patient: {},\n      deptWaitList: [],\n      personalDuringList: [],\n      personalEndList: [],\n      personalWaitList: [],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      mouldname: '',\n      dialog1: false,\n      dialog2: false,\n      search: '',\n      isaside: true,\n      activeName: 'first',\n      activeName2: 'first',\n      falg: true\n    };\n  },\n  created: function created() {\n    this.getPatientList();\n  },\n  methods: {\n    comfirmdms: function comfirmdms(val) {\n      var _this = this;\n\n      if (val == 2) {\n        this.endcomfirmdms();\n      } else {\n        getnonend(this.patient.registrationId).then(function (res) {\n          _this.comfirmdisabled = true;\n\n          if (res.data.dmsCaseHistoryList.length !== 0) {\n            _this.activeName2 = 'second';\n\n            if (res.data.dmsCaseHistoryList[0].status === 1) {\n              _this.comfirmdisabled = false;\n              _this.activeName2 = 'fiveth';\n            }\n\n            _this.firstdisabled = false;\n          } else {\n            _this.firstdisabled = true;\n            _this.activeName2 = 'first';\n          }\n\n          _this.patient = val;\n\n          _this.$refs.record.controlfast();\n        });\n      }\n    },\n    //确诊之后调用此方法，获得已确诊信息\n    endcomfirmdms: function endcomfirmdms() {\n      var _this2 = this;\n\n      endgetnonend(this.patient.registrationId).then(function (res) {\n        _this2.comfirmdisabled = true;\n\n        if (res.data.dmsCaseHistoryList.length !== 0) {\n          _this2.activeName2 = 'second';\n\n          if (res.data.dmsCaseHistoryList[0].status === 2) {\n            _this2.comfirmdisabled = false;\n            _this2.activeName2 = 'fiveth';\n          }\n\n          _this2.firstdisabled = false;\n        } else {\n          _this2.firstdisabled = true;\n          _this2.activeName2 = 'first';\n        }\n\n        _this2.patient = val;\n\n        _this2.$refs.record.controlfast();\n      });\n    },\n    priliminary: function priliminary() {\n      var _this3 = this;\n\n      getnonend(this.patient.registrationId).then(function (res) {\n        _this3.comfirmdisabled = true;\n\n        if (res.data.dmsCaseHistoryList.length !== 0) {\n          if (res.data.dmsCaseHistoryList[0].status === 2) {\n            _this3.comfirmdisabled = false;\n            _this3.activeName2 = 'fiveth';\n          }\n\n          _this3.firstdisabled = false;\n          _this3.activeName2 = 'second';\n        } else {\n          _this3.firstdisabled = true;\n          _this3.activeName2 = 'first';\n        }\n\n        _this3.patient = val;\n\n        _this3.$refs.record.controlfast();\n      });\n    },\n    endDiagnosis: function endDiagnosis() {\n      var _this4 = this;\n\n      _endDiagnosis(this.patient.registrationId).then(function (res) {\n        _this4.$notify({\n          title: '成功',\n          message: '已诊毕！',\n          type: 'success',\n          duration: 2000\n        });\n\n        _this4.showaside();\n\n        _this4.getPatientList();\n      });\n    },\n    continuing: function continuing(val) {\n      var _this5 = this;\n\n      this.falg = true;\n      this.confirmed = true;\n      this.$confirm('确认继续诊断患者 ' + val.patientName + '?', '就诊', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'success'\n      }).then(function () {\n        Clinical(val.registrationId).then(function (res) {\n          _this5.comfirmdisabled = true;\n\n          if (res.data.dmsCaseHistoryList.length !== 0) {\n            _this5.activeName2 = 'second';\n\n            if (res.data.dmsCaseHistoryList[0].status === 2) {\n              _this5.comfirmdisabled = false;\n              _this5.activeName2 = 'fiveth';\n            }\n\n            _this5.firstdisabled = false;\n          } else {\n            _this5.firstdisabled = true;\n            _this5.activeName2 = 'first';\n          }\n\n          _this5.patient = val;\n\n          _this5.showaside();\n\n          _this5.$refs.record.controlfast();\n        });\n      });\n    },\n    continuingEnd: function continuingEnd(val) {\n      var _this6 = this;\n\n      this.confirmed = false;\n      this.$confirm('确认查看患者 ' + val.patientName + '的就诊信息?', '信息', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'success'\n      }).then(function () {\n        Clinical(val.registrationId).then(function (res) {\n          _this6.falg = false;\n          _this6.patient = val;\n\n          _this6.showaside();\n\n          _this6.$refs.record.controlfast();\n        });\n      });\n    },\n    bindPatient: function bindPatient(val) {\n      var _this7 = this;\n\n      this.$confirm('确认绑定患者 ' + val.patientName + '?', '就诊', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'success'\n      }).then(function () {\n        _bindPatient(val.registrationId, _this7.$store.getters.id).then(function (res) {\n          _this7.getPatientList();\n\n          _this7.$notify({\n            title: '成功',\n            message: '成功绑定该患者!',\n            type: 'success',\n            duration: 2000\n          });\n        });\n      });\n    },\n    handleCurrentChange: function () {\n      var _handleCurrentChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(val) {\n        var _this8 = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.falg = true;\n                this.confirmed = true;\n                this.$confirm('确认开始诊断患者 ' + val.patientName + '?', '就诊', {\n                  confirmButtonText: '确认',\n                  cancelButtonText: '取消',\n                  type: 'success'\n                }).then(function () {\n                  startDiagnosis(val.registrationId).then(function (res) {\n                    _this8.$notify({\n                      title: '成功',\n                      message: '开始诊断',\n                      type: 'success',\n                      duration: 2000\n                    });\n\n                    _this8.patient = val;\n\n                    _this8.showaside();\n\n                    _this8.$refs.record.controlfast();\n                  });\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleCurrentChange(_x) {\n        return _handleCurrentChange.apply(this, arguments);\n      }\n\n      return handleCurrentChange;\n    }(),\n    getPatientList: function () {\n      var _getPatientList2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _this9 = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.loaddepp = true;\n                _context2.next = 3;\n                return _getPatientList(this.$store.getters.id).then(function (res) {\n                  _this9.deptWaitList = res.data.deptWaitList;\n                  _this9.personalDuringList = res.data.personalDuringList;\n                  _this9.personalEndList = res.data.personalEndList;\n                  _this9.personalWaitList = res.data.personalWaitList;\n                  _this9.loaddepp = false;\n                }).catch(function (err) {\n                  _this9.loaddepp = false;\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getPatientList() {\n        return _getPatientList2.apply(this, arguments);\n      }\n\n      return getPatientList;\n    }(),\n    showaside: function showaside() {\n      this.getPatientList();\n\n      if (this.isaside === false) {\n        this.isaside = true;\n        this.mask = true;\n      } else {\n        this.isaside = false;\n        this.mask = false;\n      }\n    },\n    storeRecord: function storeRecord() {\n      this.dialog1 = true;\n    }\n  }\n};",null]}