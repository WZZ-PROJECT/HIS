{"remainingRequest":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js!F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\XM\\his-web\\src\\views\\outpatient\\workstation\\Cprescription.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\XM\\his-web\\src\\views\\outpatient\\workstation\\Cprescription.vue","mtime":1602056593509},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1600936442292}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"F:/XM/his-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"F:/XM/his-web/node_modules/@babel/runtime/helpers/defineProperty\"));\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"F:/XM/his-web/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _drug = require(\"@/api/drug\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _cprescription = require(\"@/api/outpatient/cprescription\");\n\nvar _utils = require(\"@/utils\");\n\nvar _frequentuse = require(\"@/api/outpatient/frequentuse\");\n\nvar _save = require(\"@/api/outpatient/save\");\n\nvar _drugmodel = require(\"@/api/drugmodel\");\n\nvar _methods;\n\nvar defaultpre = {\n  name: '',\n  druglist: [],\n  amount: 0,\n  status: -1\n};\nvar _default = {\n  props: ['patient'],\n  components: {\n    Pagination: _Pagination.default\n  },\n  name: 'Prescription',\n  data: function data() {\n    return {\n      modelvisivle: false,\n      model: {},\n      models: [],\n      freqlist: [],\n      refs: [],\n      prescriptionList: [],\n      oneprescription: {\n        name: '',\n        druglist: [],\n        amount: 0,\n        status: -1\n      },\n      edit: false,\n      test: '',\n      num: 0,\n      dialogTableVisible: false,\n      activeName: 'first',\n      isclose: true,\n      record: {\n        main: 'test'\n      },\n      page: {\n        pageNum: 1,\n        pageSize: 10\n      },\n      searchdrug: '',\n      drugList: [],\n      total: 0,\n      mainwidth: \"65%\",\n      activeNames: ['1'],\n      data2: [{\n        date: '0001',\n        name: '王小虎1',\n        address: '38'\n      }, {\n        date: '0002',\n        name: '王小虎2',\n        address: '39'\n      }]\n    };\n  },\n  watch: {\n    'patient': function patient(newVal, oldVal) {\n      this.patient = newVal;\n      this.listByReg();\n    }\n  },\n  created: function created() {\n    this.listModel();\n  },\n  methods: (_methods = {\n    addmodel: function addmodel(val) {\n      val.amount = Math.floor((val.amount + 0.5) * 100) / 100;\n      val.status = -1;\n      this.prescriptionList.push(val);\n    },\n    selectmodel: function selectmodel(val) {\n      this.model = (0, _utils.deepClone)(val);\n      this.model.amount = Math.floor((this.model.amount + 0.5) * 100) / 100;\n      this.modelvisivle = true;\n    },\n    listModel: function listModel() {\n      var _this = this;\n\n      var data = {};\n      data.scope = 0;\n      data.ownId = this.$store.getters.id;\n      data.type = 2;\n      data.pageSize = 1000;\n      data.pageNum = 1;\n      data.isAdmin = 0;\n      (0, _drugmodel.listModel)(data).then(function (res) {\n        _this.models = res.data.list;\n\n        _this.models.forEach(function (model) {\n          model.druglist = [];\n          model.amount = 0;\n          model.dmsMedicineModelItemList.forEach(function (item) {\n            var data = {};\n            (0, _drug.selectById)(item.id).then(function (res) {\n              data = res.data;\n              data.days = item.days;\n              data.frequency = item.frequency;\n              data.medicalAdvice = item.medicalAdvice;\n              data.medicineUsage = item.medicineUsage;\n              data.usageMeans = item.usageMeans;\n              data.usageNum = item.usageNum;\n              data.usageNumUnit = item.usageNumUnit;\n              model.amount += data.price * item.num;\n              model.druglist.push((0, _utils.deepClone)(data));\n            });\n          });\n          model.amount = Math.floor((model.amount + 0.5) * 100) / 100;\n        });\n      });\n    },\n    saveDrugPrescription: function saveDrugPrescription() {\n      var _this2 = this;\n\n      (0, _save.saveDrugPrescription)(this.refs, this.patient.registrationId, 5).then(function (res) {\n        _this2.$notify({\n          title: '成功',\n          message: '已暂存选中的草药处方',\n          type: 'success',\n          duration: 2000\n        });\n      });\n    },\n    getDrugPrescription: function getDrugPrescription() {\n      var _this3 = this;\n\n      var data = {};\n      data.registrationId = this.patient.registrationId;\n      data.type = 5;\n      (0, _save.getDrugPrescription)(data).then(function (res) {\n        res.data.forEach(function (item) {\n          _this3.prescriptionList.push(item);\n        });\n      });\n      this.$notify({\n        title: '成功',\n        message: '已取出暂存的成药处方',\n        type: 'success',\n        duration: 2000\n      });\n    },\n    addfreitem: function addfreitem(val) {\n      this.selectCheck(val);\n    },\n    getfreqList: function getfreqList() {\n      var _this4 = this;\n\n      var data = {};\n      data.staffId = this.$store.getters.id;\n      data.selectType = 6;\n      (0, _frequentuse.selectByType)(data).then(function (res) {\n        _this4.freqlist = res.data.drugList.filter(function (item) {\n          if (item.typeId === 103) return true;\n        });\n      });\n    },\n    refresh: function refresh() {\n      var _this5 = this;\n\n      this.$confirm('未开立的处方都将清除,确认刷新?', '刷新', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this5.listByReg();\n      });\n    }\n  }, (0, _defineProperty2.default)(_methods, \"addfreitem\", function addfreitem(val) {\n    this.selectCheck(val);\n  }), (0, _defineProperty2.default)(_methods, \"getfreqList\", function getfreqList() {\n    var _this6 = this;\n\n    var data = {};\n    data.staffId = this.$store.getters.id;\n    data.selectType = 6;\n    (0, _frequentuse.selectByType)(data).then(function (res) {\n      _this6.freqlist = res.data.drugList.filter(function (item) {\n        if (item.typeId === 103) return true;\n      });\n    });\n  }), (0, _defineProperty2.default)(_methods, \"deletepre\", function deletepre() {\n    var data = this.refs[0].name;\n    this.prescriptionList = this.prescriptionList.filter(function (item) {\n      if (item.name === data) return false;\n      return true;\n    });\n  }), (0, _defineProperty2.default)(_methods, \"invalid\", function invalid() {\n    var _this7 = this;\n\n    var data = this.refs[0];\n    (0, _cprescription.invalid)(data.dmsHerbalItemRecordResultList[0].prescriptionId).then(function (res) {\n      _this7.$notify({\n        title: '成功',\n        message: res.message,\n        type: 'success',\n        duration: 2000\n      });\n\n      _this7.listByReg();\n    });\n  }), (0, _defineProperty2.default)(_methods, \"listByReg\", function () {\n    var _listByReg2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var _this8 = this;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              (0, _cprescription.listByReg)(this.patient.registrationId).then(function (res) {\n                _this8.prescriptionList = res.data;\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function listByReg() {\n      return _listByReg2.apply(this, arguments);\n    }\n\n    return listByReg;\n  }()), (0, _defineProperty2.default)(_methods, \"handleSelectionChange\", function handleSelectionChange(val) {\n    this.refs = val;\n  }), (0, _defineProperty2.default)(_methods, \"apply\", function () {\n    var _apply2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var _this9 = this;\n\n      var data;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              data = this.refs[0];\n              data.createStaffId = this.$store.getters.id;\n              data.registrationId = this.patient.registrationId;\n              data.dmsHerbalItemRecordList = data.druglist;\n              data.dmsHerbalItemRecordList.forEach(function (item) {\n                item.drugId = item.id;\n                item.currentNum = item.num;\n                item.totalNum = item.num;\n              });\n              (0, _cprescription.apply)(data).then(function (res) {\n                _this9.$notify({\n                  title: '成功',\n                  message: res.message,\n                  type: 'success',\n                  duration: 2000\n                });\n\n                _this9.listByReg();\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function apply() {\n      return _apply2.apply(this, arguments);\n    }\n\n    return apply;\n  }()), (0, _defineProperty2.default)(_methods, \"createpre\", function createpre() {\n    this.edit = false;\n    this.prescriptionList.push(this.oneprescription);\n    this.dialogTableVisible = false;\n  }), (0, _defineProperty2.default)(_methods, \"changepre\", function changepre() {\n    this.dialogTableVisible = false;\n  }), (0, _defineProperty2.default)(_methods, \"changenum\", function changenum(val) {\n    var _this10 = this;\n\n    this.oneprescription.amount = 0;\n    this.oneprescription.druglist.forEach(function (item) {\n      _this10.oneprescription.amount += item.price * item.num;\n    });\n    this.oneprescription.amount = Math.floor((this.oneprescription.amount + 0.5) * 100) / 100;\n  }), (0, _defineProperty2.default)(_methods, \"deldrug\", function deldrug(row) {\n    this.oneprescription.druglist = this.oneprescription.druglist.filter(function (item) {\n      if (item.id === row.id) return false;\n      return true;\n    });\n  }), (0, _defineProperty2.default)(_methods, \"choosedrug\", function choosedrug(val) {\n    var flag = 1;\n    this.oneprescription.druglist.forEach(function (item) {\n      if (item.id === val.id) {\n        item.num += 1;\n        flag = 0;\n      }\n    });\n\n    if (flag) {\n      this.oneprescription.amount += val.price;\n      this.oneprescription.amount = Math.floor((this.oneprescription.amount + 0.5) * 100) / 100;\n      this.oneprescription.druglist.push(val);\n      this.oneprescription.druglist.forEach(function (item) {\n        if (item.num === undefined) item.num = 1;\n      });\n    }\n  }), (0, _defineProperty2.default)(_methods, \"getdrugList\", function () {\n    var _getdrugList2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var data, response;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              data = {};\n              data.pageSize = this.page.pageSize;\n              data.pageNum = this.page.pageNum;\n              data.typeId = 103;\n              data.status = 1;\n              data.name = this.searchdrug;\n              _context3.next = 8;\n              return (0, _drug.getdrugList)(data);\n\n            case 8:\n              response = _context3.sent;\n              this.drugList = response.data.list;\n              this.total = response.data.total;\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function getdrugList() {\n      return _getdrugList2.apply(this, arguments);\n    }\n\n    return getdrugList;\n  }()), (0, _defineProperty2.default)(_methods, \"addpre\", function addpre() {\n    this.getfreqList();\n    this.oneprescription = (0, _utils.deepClone)(defaultpre);\n    this.getdrugList();\n    this.dialogTableVisible = true;\n  }), (0, _defineProperty2.default)(_methods, \"showDetail\", function showDetail(row) {\n    this.edit = true;\n    this.getfreqList();\n    this.getdrugList();\n    this.oneprescription = row;\n    this.dialogTableVisible = true;\n  }), (0, _defineProperty2.default)(_methods, \"controlfast\", function controlfast() {\n    this.isclose = !this.isclose;\n    if (this.mainwidth === \"65%\") this.mainwidth = \"80%\";else this.mainwidth = \"65%\";\n  }), (0, _defineProperty2.default)(_methods, \"getDrugPrescription\", function getDrugPrescription() {\n    var _this11 = this;\n\n    var data = {};\n    data.registrationId = this.patient.registrationId;\n    data.type = 5;\n    (0, _save.getDrugPrescription)(data).then(function (res) {\n      res.data.forEach(function (item) {\n        _this11.selectCheckred(item);\n      });\n\n      _this11.$notify({\n        title: '成功',\n        message: '已取出暂存的检验项',\n        type: 'success',\n        duration: 2000\n      });\n    });\n  }), (0, _defineProperty2.default)(_methods, \"selectCheckred\", function selectCheckred(val) {\n    var flag = 1;\n    val.status = -1;\n    this.prescriptionList.forEach(function (item) {\n      if (item.id === val.id) {\n        flag = 0;\n      }\n    });\n    if (flag) this.prescriptionList.push(val);\n    this.dialogTableVisible = false;\n  }), _methods)\n};\nexports.default = _default;",null]}