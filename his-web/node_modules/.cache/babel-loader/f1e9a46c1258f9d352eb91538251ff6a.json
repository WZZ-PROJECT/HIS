{"remainingRequest":"F:\\XM\\his-web\\node_modules\\thread-loader\\dist\\cjs.js!F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js!F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\XM\\his-web\\src\\views\\pharmacy\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\XM\\his-web\\src\\views\\pharmacy\\index.vue","mtime":1602343573700},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1600936436646},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1600936442292}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { listPatient as _listPatient, releaseDrug, refundDrug as _refundDrug } from '@/api/drugstore';\nimport { parseTime, formatTime, deepClone } from '@/utils';\nimport { listByIds } from '@/api/outpatient/prescription';\nimport { charge as _charge } from '@/api/regist';\nexport default {\n  data: function data() {\n    return {\n      selectid: '',\n      refundVisible: false,\n      refundamout: 1,\n      refundlimit: 0,\n      refundid: '',\n      searchpatient: '',\n      sendrefs: [],\n      druglist: [],\n      druglistgiven: [],\n      patient: {},\n      undoPatientList: [],\n      donePatientList: [],\n      visible: false,\n      isGiven: false,\n      spanArr: [],\n      isaside: true,\n      activeName: 'first',\n      activeName2: 'first',\n      position: 0,\n      refs: {\n        chargeItemId: '',\n        invoiceNo: '',\n        operatorId: '',\n        settlementCatId: 7,\n        amount: '',\n        type: ''\n      }\n    };\n  },\n  created: function created() {\n    this.listPatient();\n  },\n  methods: {\n    refundDrug: function refundDrug() {\n      var _this = this;\n\n      if (this.refundamout > this.refundlimit) {\n        this.$notify({\n          title: '错误',\n          message: '输入数量大于可退药数量！',\n          type: 'warning',\n          duration: 2000\n        });\n      } else if (this.refundamout <= 0) {\n        this.$notify({\n          title: '错误',\n          message: '退药数量不能小于1！',\n          type: 'warning',\n          duration: 2000\n        });\n      } else {\n        var data = {};\n        data.excutorId = this.$store.getters.id;\n        data.refundItemList = [];\n        var temp = {};\n        temp.refundNum = this.refundamout;\n        temp.refundPrescriptionItemId = this.refundid;\n        temp.type = 5;\n        data.refundItemList.push(temp);\n\n        _refundDrug(data).then(function (res) {\n          _this.$notify({\n            title: '成功',\n            message: '退药成功',\n            type: 'success',\n            duration: 2000\n          });\n\n          _this.refundVisible = false;\n\n          _this.listPatient();\n\n          _this.druglistgiven = [];\n\n          _this.handleGiven2();\n        });\n      }\n    },\n    refund: function refund(val) {\n      this.refundVisible = true;\n      this.refundlimit = val.num - val.refundNum;\n      this.refundid = val.drugid;\n    },\n    sendDrug: function sendDrug() {\n      var _this2 = this;\n\n      if (this.sendrefs.length === 0) {\n        this.$notify({\n          title: '提示',\n          message: \"请选择一条数据！\",\n          type: 'warning',\n          duration: 2000\n        });\n        return;\n      }\n\n      this.sendrefs.forEach(function (item) {\n        releaseDrug(item.id, 5).then(function (res) {\n          _this2.$notify({\n            title: '成功',\n            message: res.message,\n            type: 'success',\n            duration: 2000\n          });\n\n          _this2.listPatient();\n\n          _this2.druglist = [];\n          _this2.druglistgiven = [];\n        });\n      });\n    },\n    changedep: function changedep(val) {\n      console.log(val);\n      this.sendrefs = val;\n    },\n    rowspan: function rowspan() {\n      var _this3 = this;\n\n      this.spanArr = []; //在data里面定义\n\n      this.position = 0; //在data里面定义\n\n      this.druglist.forEach(function (item, index) {\n        if (index === 0) {\n          _this3.spanArr.push(1);\n\n          _this3.position = 0;\n          item.sequence = index + 1; //设置序号\n        } else {\n          if (_this3.druglist[index].id === _this3.druglist[index - 1].id) {\n            _this3.spanArr[_this3.position] += 1; //连续有几行项目名名称相同\n\n            _this3.spanArr.push(0); // 名称相同后往数组里面加一项0\n            //当项目名称相同时，设置当前序号和前一个相同\n\n\n            _this3.druglist[index].sequence = _this3.druglist[index - 1].sequence;\n          } else {\n            _this3.spanArr.push(1);\n\n            _this3.position = index; //当项目名称不同时，将当前序号设置为前一个序号+1\n\n            _this3.druglist[index].sequence = _this3.druglist[index - 1].sequence + 1;\n          }\n        }\n      });\n    },\n    objectSpanMethod: function objectSpanMethod(_ref) {\n      var row = _ref.row,\n          column = _ref.column,\n          rowIndex = _ref.rowIndex,\n          columnIndex = _ref.columnIndex;\n\n      //表格合并行\n      if (columnIndex === 0) {\n        //序号列也进行合并(第一列)\n        //this.spanArr这个数组里面存的是table里面连续的有几条数据相同\n        //例如:[1,1,2,0,2,0]\n        //1  代表的没有连续的相同的\n        //2  代表连续的两个相同\n        //0  代表是和上一条内容相同\n        var _row = this.spanArr[rowIndex];\n\n        var _col = _row > 0 ? 1 : 0;\n\n        return {\n          rowspan: _row,\n          //行\n          colspan: _col //列\n\n        };\n      }\n\n      if (columnIndex === 1) {\n        //项目列也进行合并(第二列)\n        var _row2 = this.spanArr[rowIndex];\n\n        var _col2 = _row2 > 0 ? 1 : 0;\n\n        return {\n          rowspan: _row2,\n          colspan: _col2\n        };\n      }\n    },\n    listPatient: function listPatient() {\n      var _this4 = this;\n\n      var data = {};\n      data.queryDate = parseTime(new Date());\n      data.queryDate = data.queryDate.substr(0, 10);\n      data.type = 5;\n\n      _listPatient(data).then(function (res) {\n        _this4.undoPatientList = res.data.undoPatientList;\n        _this4.donePatientList = res.data.donePatientList;\n      });\n    },\n    handleGive2: function handleGive2() {\n      var _this5 = this;\n\n      this.druglist = [];\n      this.isGiven = false;\n      var data = '';\n      this.patient.prescriptionIdList.forEach(function (item) {\n        data += item + ',';\n      });\n      data = data.substr(0, data.length - 1);\n      listByIds(data).then(function (res) {\n        res.data.forEach(function (item) {\n          var temp = item.id;\n          var temp2 = item.name;\n          var temp3 = item.createStaffName;\n          item.dmsMedicineItemRecordResultList.forEach(function (drug) {\n            drug.drugid = drug.id;\n            drug.id = temp;\n            drug.doctorname = temp3;\n            drug.cname = temp2;\n\n            _this5.druglist.push(deepClone(drug));\n          });\n        });\n\n        _this5.rowspan();\n      });\n    },\n    handleGive: function handleGive(val) {\n      var _this6 = this;\n\n      this.druglist = [];\n      this.isGiven = false;\n      this.patient = deepClone(val);\n      var data = '';\n      this.patient.prescriptionIdList.forEach(function (item) {\n        data += item + ',';\n      });\n      data = data.substr(0, data.length - 1);\n      listByIds(data).then(function (res) {\n        res.data.forEach(function (item) {\n          var temp = item.id;\n          var temp2 = item.name;\n          var temp3 = item.createStaffName;\n          item.dmsMedicineItemRecordResultList.forEach(function (drug) {\n            drug.drugid = drug.id;\n            drug.id = temp;\n            drug.doctorname = temp3;\n            drug.cname = temp2;\n            drug.status = item.status;\n\n            _this6.druglist.push(deepClone(drug));\n          });\n        });\n\n        _this6.rowspan();\n      });\n    },\n    handleGiven2: function handleGiven2() {\n      var _this7 = this;\n\n      var data = '';\n      this.patient.prescriptionIdList.forEach(function (item) {\n        data += item + ',';\n      });\n      data = data.substr(0, data.length - 1);\n      listByIds(data).then(function (res) {\n        res.data.forEach(function (item) {\n          var temp = item.id;\n          var temp2 = item.name;\n          var temp3 = item.createStaffName;\n          item.dmsMedicineItemRecordResultList.forEach(function (drug) {\n            drug.drugid = drug.id;\n            drug.id = temp;\n            drug.doctorname = temp3;\n            drug.cname = temp2;\n\n            _this7.druglistgiven.push(deepClone(drug));\n          });\n        });\n      });\n    },\n    handleGiven: function handleGiven(val) {\n      var _this8 = this;\n\n      this.isGiven = true;\n      this.druglistgiven = [];\n      this.patient = deepClone(val);\n      var data = '';\n      this.patient.prescriptionIdList.forEach(function (item) {\n        data += item + ',';\n      });\n      data = data.substr(0, data.length - 1);\n      listByIds(data).then(function (res) {\n        res.data.forEach(function (item) {\n          var temp = item.id;\n          var temp2 = item.name;\n          var temp3 = item.createStaffName;\n          item.dmsMedicineItemRecordResultList.forEach(function (drug) {\n            drug.drugid = drug.id;\n            drug.id = temp;\n            drug.doctorname = temp3;\n            drug.cname = temp2;\n\n            _this8.druglistgiven.push(deepClone(drug));\n          });\n        });\n      });\n    },\n    showaside: function showaside() {\n      this.isaside = !this.isaside;\n    },\n    register: function register() {\n      this.$confirm('确定为 王小虎1 登记项目 验血 吗?', '项目登记', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      });\n    },\n    // 缴费\n    charge: function charge() {\n      var _this9 = this;\n\n      if (this.sendrefs.length === 0) {\n        this.$notify({\n          title: '提示',\n          message: \"请选择一条数据！\",\n          type: 'warning',\n          duration: 2000\n        });\n        return;\n      }\n\n      var data = [];\n      this.sendrefs.forEach(function (item) {\n        _this9.refs.chargeItemId = item.id;\n        _this9.refs.amount = item.price;\n        _this9.refs.invoiceNo = _this9.orderCode();\n        _this9.refs.type = 4;\n        _this9.refs.operatorId = _this9.$store.getters.id;\n        data.push(_this9.refs);\n      });\n\n      _charge(data).then(function (res) {\n        _this9.$notify({\n          title: '成功',\n          message: '缴费成功',\n          type: 'success',\n          duration: 2000\n        });\n\n        _this9.getMechlist();\n      });\n    },\n    // 生成发票号\n    orderCode: function orderCode() {\n      var orderCode = '';\n\n      for (var i = 0; i < 6; i++) //6位随机数，用以加在时间戳后面。\n      {\n        orderCode += Math.floor(Math.random() * 10);\n      }\n\n      orderCode = new Date().getTime() + orderCode; //时间戳，用来生成订单号。\n\n      console.log(orderCode);\n      return orderCode;\n    }\n  }\n};",null]}