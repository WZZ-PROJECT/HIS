{"remainingRequest":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\XM\\his-web\\src\\views\\registWork\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\XM\\his-web\\src\\views\\registWork\\index.vue","mtime":1602343595393},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1600936442292}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {reprintInvoice,supplementPrintInvoice,listRegisteredPatient,createRegistration,listDocBySkd,refundRegistrationCharge,listChargeByRegistrationId,charge,refundCharge,listRefundByRegistrationId,listTime,recharge,rollback} from '@/api/regist'\nimport { getAllDep} from '@/api/department'\nimport {selectPatientByIdNo} from '@/api/outpatient/patient'\nimport {getAllReg} from '@/api/admin'\nimport {parseTime,formatTime,deepClone} from '@/utils'\nimport { format } from 'path';\nconst defaultpatient ={\n  id:\"\",\n  name:\"\",\n  male:\"\",\n  birth:\"\",\n  card:\"\",\n  fapiao:\"\",\n  type:\"\",\n  type2:\"\",\n  data1:\"\",\n  data2:\"\",\n  isdone:\"\",\n  isget:\"\",\n  status:\"\",\n  money:\"\",\n  kemu:\"\"\n}\nexport default {\n\n  data(){\n\n    return{\n      isAble:false,\n      rules:{\n        needBook:[\n          {required: true, message: '请选择病历本',trigger: 'blur'},\n        ],\n        settlementCatId:[\n          {required: true, message: '请选择支付方式',trigger: 'blur'},\n        ],\n        skdId:[\n          {required: true, message: '请输入看诊医生',trigger: 'blur'},\n        ],\n        time:[\n          {required: true, message: '请输入预约时间',trigger: 'blur'},\n\n        ],\n        amount:[\n          {required: true, message: '请输入应收金额',trigger: 'blur'},\n        ],\n        identificationNo:[\n          {required: true, message: '请输入身份证号',trigger: 'blur'},\n          {pattern:/(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/,message: '请输入正确的身份证号', trigger: 'blur'},\n        ],\n        name:[\n          {required: true, message: '请输入姓名',trigger: 'blur'},\n        ],\n        dateOfBirth:[\n          {required: true, message: '出生日期必填',trigger: 'blur'},\n        ],\n        gender:[\n          {required: true, message: '请输入性别',trigger: 'blur'},\n        ],\n        homeAddress:[\n          {required: true, message: '请输入家庭住址',trigger: 'blur'},\n        ],\n        phoneNo:[\n          {required: true, message: '请输入联系方式',trigger: 'blur'},\n        ],\n        deptId :[\n          {required: true, message: '请输入挂号科室',trigger: 'blur'},\n        ],\n        RegisterRnak :[\n          {required: true, message: '请输入挂号级别',trigger: 'blur'},\n        ],\n        attendanceDate :[\n          {required: true, message: '请输入挂号日期',trigger: 'blur'},\n        ],\n        noon :[\n          {required: true, message: '请输入午别',trigger: 'blur'},\n        ],\n\n      },\n      re1:'',\n      re2:'',\n      xbarCode:'',\n      WXPayState:false,\n      WXPayState1:false,\n      suppregistVisible:false,\n      reprintregistVisible:false,\n      isbin:0,\n      redinvoiceNo:'',\n      refundregistVisible:false,\n      refundregist:{},\n      refundVisible:false,\n      settlementCatId:'',\n      invoiceNo:'',\n      refs:[],\n      paymoney:0,\n      totalamount:0,\n      paylist:[],\n      doctList:[],\n      timeList:[],//预约时间\n      regdisabled:true,\n      regdisabled2:true,\n      alldept:[],\n      dmsRegistrationParam:{\n        attendanceDate:'',\n        deptId:'',\n        noon:'',\n        amount:'',\n        skdId:'',\n        needBook:'',\n        name:'',\n        dateOfBirth:'',\n        age:'',\n        homeAddress:'',\n        gender:'',\n        phoneNo:'',\n        identificationNo:'',\n        barCode:'',\n        time:'',\n        summery:'',  //总金额\n        blance:'',  //可用金额\n        frozen:'',  //冻结金额\n        topUp:'',  //充值金额\n        refund:'',   //退费金额\n      },\n      RegisterList:[],\n      RegisterRnak:[],\n      itemtype:[\n        '检查检验',\n        '处方',\n        '处置'\n      ],\n      payT:'',\n      paytype:[\n        {\n          value:'1',\n          label:'现金'\n        },\n        {\n          value:'2',\n          label:'银行卡'\n        },\n        {\n          value:'3',\n          label:'医保'\n        },\n        {\n          value:'4',\n          label:'信用卡'\n        },\n        {\n          value:'5',\n          label:'支付宝'\n        },\n        {\n          value:'6',\n          label:'微信'\n        },\n        {\n          value:'7',\n          label:'其他'\n        }\n      ],\n      onepatient:Object.assign({},defaultpatient),\n      radio:1,\n      dialogFormVisible:false,\n      isshow:false,\n      list:[],\n      refundRegisterId:'',\n      queryRegister:{\n        medicalRecordNo:null,\n        queryDate:null,\n        pageSize:1000,\n        pageNum:1\n      },\n      total:0,\n    };\n  },\n\n  created(){\n    this.listRegisteredPatient()\n    this.getAllDep()\n    this.getAllReg()\n  },\n  methods: {\n\n    doChange(){\n      this.dmsRegistrationParam.dateOfBirth = this.dmsRegistrationParam.identificationNo.substring(6,10)+'-'+this.dmsRegistrationParam.identificationNo.substring(10,12)+'-'+this.dmsRegistrationParam.identificationNo.substring(12,14)\n    },\n    supprint(val){\n      this.suppregistVisible = true\n      this.re1 = val.registrationId\n      this.re2 = ''\n    },\n    supprint2(){\n      let data = {}\n      data.newInvoiceNo = this.re2\n      data.registrationId = this.re1\n      supplementPrintInvoice(data).then(res=>{\n        this.$notify({\n          title: '成功',\n          message: '补打发票成功',\n          type: 'success',\n          duration: 2000\n        })\n      })\n      this.suppregistVisible=false\n    },\n    reprint2(){\n      let data = {}\n      data.newInvoiceNo = this.re2\n      data.oldInvoiceNo = this.re1\n      reprintInvoice(data).then(res=>{\n        this.$notify({\n          title: '成功',\n          message: '重打发票成功',\n          type: 'success',\n          duration: 2000\n        })\n      })\n    },\n    reprint(){\n      this.re1 = ''\n      this.re2 = ''\n      this.reprintregistVisible = true\n    },\n    changeradio1(){\n      if(this.isbin===0){\n        this.dmsRegistrationParam.amount+=1\n        this.isbin =1\n      }\n    },\n    changeradio2(){\n      if(this.isbin===1){\n        this.dmsRegistrationParam.amount-=1\n        this.isbin = 0\n      }\n    },\n    refresh(){\n      this.listRegisteredPatient()\n    },\n    selectPatientByIdNo(){\n      this.isshow = true\n      this.$prompt('身份证号', '读卡(获取用户身份证号)', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n      }).then(({ value }) => {\n        selectPatientByIdNo(value).then(res=>{\n          this.dmsRegistrationParam.name = res.data.name\n          this.dmsRegistrationParam.dateOfBirth = res.data.dateOfBirth\n          this.dmsRegistrationParam.age = res.data.age\n          this.dmsRegistrationParam.homeAddress = res.data.homeAddress\n          this.dmsRegistrationParam.gender = res.data.gender\n          this.dmsRegistrationParam.phoneNo = res.data.phoneNo\n          this.dmsRegistrationParam.identificationNo = value\n          this.dmsRegistrationParam.summery=res.data.summery\n          this.dmsRegistrationParam.blance=res.data.blance\n          this.dmsRegistrationParam.frozen=res.data.frozen\n          console.log(this.dmsRegistrationParam)\n          this.$message({\n            type: 'success',\n            message: '成功读取患者: ' + this.dmsRegistrationParam.name\n          });\n        })\n      })\n    },\n    comfirmtuihao(){\n      let data = {}\n      data.oldInvoiceNo = this.invoiceNo\n      data.redInvoiceNo = this.redinvoiceNo\n      data.registrationId = this.refundRegisterId\n      data.operatorId = this.$store.getters.id\n      refundRegistrationCharge(data).then(res=>{\n        this.$notify({\n          title: '成功',\n          message: res.message,\n          type: 'success',\n          duration: 2000\n        })\n        this.refundregistVisible = false\n        this.listRegisteredPatient()\n      })\n    },\n    tuihao(row){\n      this.refundregistVisible = true\n      this.refundRegisterId = row.registrationId\n    },\n    refundmoney(){\n      if(this.invoiceNo===''||this.invoiceNo===undefined){\n        this.$notify({\n          title: '警告',\n          message: '发票号不能为空！',\n          type: 'warning',\n          duration: 2000\n        })\n        return\n      }\n      let flag = 1\n      let inv = ''\n      this.refs.forEach(item=>{\n        item.settlementCatId = 1\n        item.chargeItemId = item.id\n        if(inv === '')\n          item.invoiceNo = item.invoiceIdfNo\n        else{\n          if(item.invoiceIdfNo===inv){\n            item.invoiceNo = item.invoiceIdfNo\n          }\n          else\n            flag=0\n        }\n        if(flag===0){\n          this.$notify({\n            title: '警告',\n            message: '不能同时退不同发票号的项目！',\n            type: 'warning',\n            duration: 2000\n          })\n          return\n        }\n        item.newInvoiceNo = this.invoiceNo+1\n        item.redInvoiceNo = this.invoiceNo\n        item.operatorId = this.$store.getters.id\n        item.refundAmount = item.amount\n      })\n\n      refundCharge(this.refs).then(res=>{\n        this.$notify({\n          title: '成功',\n          message: '退费成功',\n          type: 'success',\n          duration: 2000\n        })\n        this.refundVisible = false\n        this.listRegisteredPatient()\n      })\n      this.refundregistVisible = false\n      this.listRegisteredPatient()\n    },\n    charge(){\n      if(this.invoiceNo===''||this.invoiceNo===undefined||this.settlementCatId===''||this.settlementCatId===undefined)\n      {\n        this.$notify({\n          title: '信息不完整',\n          message: '请填写发票号或选择缴费类型！',\n          type: 'danger',\n          duration: 2000\n        })\n        return\n      }\n      let data = this.refs\n      data.forEach(item=>{\n        item.chargeItemId = item.id\n        item.invoiceNo = this.invoiceNo\n        item.opratorId = this.$store.getters.id\n        item.settlementCatId = this.settlementCatId\n        item.xbarCode=this.xbarCode\n      })\n      console.log(data)\n      console.log(data.xbarCode)\n      charge(data).then(res=>{\n        this.$notify({\n          title: '成功',\n          message: '缴费成功',\n          type: 'success',\n          duration: 2000\n        })\n        this.dialogFormVisible=false\n        this.listRegisteredPatient()\n      })\n\n    },\n    handlechange(val){\n      this.refs = val\n      this.totalamount = 0\n      this.refs.forEach(item=>{\n        this.totalamount += item.amount\n      })\n      this.totalamount = this.totalamount.toFixed(2)\n    },\n    refundRegistrationCharge(row){\n      this.onepatient = deepClone(row)\n      listRefundByRegistrationId(row.registrationId).then(res=>{\n        this.paylist = res.data\n        this.paylist.forEach(item=>{\n          if(item.createTime!==null){\n            item.createTime = parseTime(item.createTime)\n          }\n        })\n        this.refundVisible = true\n      })\n    },\n    createRegistration(formName){\n      this.$refs[formName].validate((valid)=>{\n        if (valid) {\n          if(this.dmsRegistrationParam.invoiceNo === ''||this.dmsRegistrationParam.invoiceNo===undefined){\n            this.$notify({\n              title: '信息不完整',\n              message: '请输入发票号！',\n              type: 'warning',\n              duration: 2000\n            })\n            return\n          }\n          if(this.dmsRegistrationParam.settlementCatId === ''||this.dmsRegistrationParam.settlementCatId===undefined){\n            this.$notify({\n              title: '信息不完整',\n              message: '请选择支付方式！',\n              type: 'warning',\n              duration: 2000\n            })\n            return\n          }\n          this.dmsRegistrationParam.attendanceDate = parseTime(this.dmsRegistrationParam.attendanceDate).substr(0,10)\n          this.dmsRegistrationParam.dateOfBirth = parseTime(this.dmsRegistrationParam.dateOfBirth).substr(0,10)\n          this.dmsRegistrationParam.opratorId = this.$store.getters.id\n          console.log(this.dmsRegistrationParam)\n          createRegistration(this.dmsRegistrationParam).then(res=>{\n            this.$notify({\n              title: '成功',\n              message: '挂号成功',\n              type: 'success',\n              duration: 2000\n            })\n            this.isshow=false\n            this.listRegisteredPatient()\n            this.dmsRegistrationParam = {}\n          })\n        }\n      })\n    },\n\n    recharge(){\n      this.dmsRegistrationParam.opratorId = this.$store.getters.id\n      console.log(this.dmsRegistrationParam)\n      debugger\n      recharge(this.dmsRegistrationParam).then(res=>{\n        debugger\n        if(res.data===1){\n          this.$notify({\n            title: '成功',\n            message: '充值成功',\n            type: 'success',\n            duration: 2000\n          })\n        }else {\n          this.$notify({\n            title: '失败',\n            message: '充值失败',\n            type: 'warning',\n            duration: 2000\n          })\n        }\n          this.isshow=false\n          this.listRegisteredPatient()\n          this.dmsRegistrationParam = {}\n        })\n\n    },\n    rollback(){\n      this.dmsRegistrationParam.opratorId = this.$store.getters.id\n      console.log(this.dmsRegistrationParam)\n      rollback(this.dmsRegistrationParam).then(res=>{\n        debugger\n        if(res.data===1){\n          this.$notify({\n            title: '成功',\n            message: '退费成功',\n            type: 'success',\n            duration: 2000\n          })\n        }else {\n          this.$notify({\n            title: '失败',\n            message: '退费失败',\n            type: 'warning',\n            duration: 2000\n          })\n        }\n        this.isshow=false\n        this.listRegisteredPatient()\n        this.dmsRegistrationParam = {}\n      })\n    },\n\n\n    choosenoon(val){\n      if(val!=='')\n        this.listDocBySkd()\n    },\n    listDocBySkd(){\n      let data ={}\n      data.date = parseTime(this.dmsRegistrationParam.attendanceDate).substr(0,10)\n      data.deptId = this.dmsRegistrationParam.deptId\n      data.noon = this.dmsRegistrationParam.noon\n      data.registrationRankId = this.dmsRegistrationParam.RegisterRnak\n      listDocBySkd(data).then(res=>{\n        this.doctList = res.data\n        this.regdisabled2=false\n      })\n    },\n\n    listTime(){\n      let data={}\n      data.skdId=this.dmsRegistrationParam.skdId\n      let time=this.dmsRegistrationParam.attendanceDate\n      let year=time.getFullYear()\n      let month=time.getMonth() + 1\n      let date1=time.getDate()\n      if(month<10){\n        month=\"0\"+month\n      }\n      data.ruletime=year+\"-\"+ month + '-' + date1\n      data.noon=this.dmsRegistrationParam.noon\n      listTime(data).then(res=>{\n        this.timeList=res.data\n      })\n    },\n    chooseRegister(val){\n      if(this.dmsRegistrationParam.RegisterRnak===1&&this.dmsRegistrationParam.attendanceDate!==''&&this.dmsRegistrationParam.deptId!==''){\n        this.regdisabled = false\n        this.regdisabled2 = false\n      }\n      else{\n        this.regdisabled = true\n        this.dmsRegistrationParam.noon = \"\"\n        this.dmsRegistrationParam.skdId = \"\"\n      }\n      this.RegisterRank.forEach(item=>{\n        if(item.id===this.dmsRegistrationParam.RegisterRnak){\n          this.dmsRegistrationParam.amount=item.price\n          if(this.dmsRegistrationParam.needBook)\n            this.dmsRegistrationParam.amount+=1\n        }\n      })\n    },\n    getAllReg(){\n      getAllReg().then(res=>{\n        this.RegisterRank = res.data\n      })\n    },\n    getAllDep(){\n      getAllDep().then(res=>{\n        this.alldept = res.data\n      })\n    },\n    listRegisteredPatient(){\n      listRegisteredPatient(this.queryRegister).then(res=>{\n        this.RegisterList = res.data.list\n        this.RegisterList.forEach(item=>{\n          item.patientDateOfBirth = item.patientDateOfBirth.substr(0,10)\n          item.attendanceDate = item.attendanceDate.substr(0,10)\n        })\n        console.log(this.RegisterList)\n        this.total = res.data.total\n      })\n    },\n    guahao(){\n      this.isshow=!this.isshow;\n    },\n    handlepay(row){\n      this.onepatient = deepClone(row)\n      console.log(this.onepatient)\n      listChargeByRegistrationId(row.registrationId).then(res=>{\n        this.paylist = res.data\n        this.paylist.forEach(item=>{\n          if(item.createTime!==null){\n            item.createTime = parseTime(item.createTime)\n          }\n        })\n      })\n      this.dialogFormVisible=true\n    },\n    WXpay(){\n      if(this.dmsRegistrationParam.settlementCatId==6){\n        this.WXPayState=true;\n        this.$nextTick(() => this.$refs.editTask.focus());\n      }else {\n        this.WXPayState=false;\n      }\n    },\n    WXpay1(){\n      if(this.settlementCatId==6){\n        this.WXPayState1=true;\n        this.$nextTick(() => this.$refs.editTask.focus());\n      }else {\n        this.WXPayState1=false;\n      }\n    },\n    searchEnterFun:function(e){\n      var keyCode = window.event? e.keyCode:e.which;\n      //  console.log('回车搜索',keyCode,e);\n      if(keyCode == 13){\n        this.isAble=true\n      }\n\n    }\n  },\n}\n\n",null]}