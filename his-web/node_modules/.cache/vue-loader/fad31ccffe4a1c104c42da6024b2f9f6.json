{"remainingRequest":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IdeaProjects\\HIS\\HIS-web\\src\\views\\outpatient\\workstation\\prescription.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\src\\views\\outpatient\\workstation\\prescription.vue","mtime":1596785876403},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n  \r\nimport {getdrugList,selectById} from '@/api/drug'\r\nimport Pagination from '@/components/Pagination'\r\nimport {apply,listByReg,invalid} from '@/api/outpatient/prescription'\r\nimport {deepClone} from '@/utils'\r\nimport {selectByType} from '@/api/outpatient/frequentuse'\r\nimport {getDrugPrescription,saveDrugPrescription} from '@/api/outpatient/save'\r\nimport {listModel} from '@/api/drugmodel'\r\nconst defaultpre={\r\n  name:'',\r\n  druglist:[],\r\n  amount:0,\r\n  status:-1,\r\n}\r\nexport default {\r\n   props:['patient'],\r\n   components: {Pagination},\r\n  name:'Prescription',\r\n  data(){\r\n    return{\r\n      modelvisivle:false,\r\n      model:{},\r\n      models:[],\r\n      freqlist:[],\r\n      refs:[],\r\n      prescriptionList:[],\r\n      oneprescription:{\r\n        name:'',\r\n        druglist:[],\r\n        amount:0,\r\n        status:-1,\r\n      },\r\n      edit:false,\r\n      test:'',\r\n      num:0,\r\n      dialogTableVisible:false,\r\n      activeName:'first',\r\n      isclose:true,\r\n      record:{\r\n        main:'test'\r\n      },\r\n      page:{\r\n        pageNum:1,\r\n        pageSize:10,\r\n      },\r\n      searchdrug:'',\r\n      drugList:[],\r\n      total:0,\r\n      mainwidth:\"65%\",\r\n      activeNames: ['1'],\r\n      data2:[\r\n        {\r\n          date: '0001',\r\n          name: '王小虎1',\r\n          address: '38'\r\n        },\r\n        {\r\n          date: '0002',\r\n          name: '王小虎2',\r\n          address: '39'\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  watch:{\r\n    'patient' : function(newVal, oldVal){\r\n      this.patient = newVal\r\n      this.listByReg()\r\n      \r\n    },\r\n  },\r\n  created(){\r\n    this.listModel()\r\n  },\r\n  methods:{\r\n    addmodel(val){\r\n      val.amount = Math.floor((val.amount+0.5)*100)/100\r\n      val.status = -1\r\n      this.prescriptionList.push(val)\r\n    },\r\n    selectmodel(val){\r\n      console.log(val)\r\n      this.model = deepClone(val)\r\n      this.model.amount = Math.floor((this.model.amount+0.5)*100)/100\r\n      this.modelvisivle = true\r\n    },\r\n    listModel(){\r\n      let data = {}\r\n      data.scope = 0\r\n      data.ownId = this.$store.getters.id\r\n      data.type = 1\r\n      data.pageSize = 1000\r\n      data.pageNum = 1\r\n      data.isAdmin = 0\r\n      listModel(data).then(res=>{\r\n        this.models = res.data.list\r\n        this.models.forEach(model=>{\r\n          model.druglist = []\r\n          model.amount = 0\r\n          model.dmsMedicineModelItemList.forEach(item=>{\r\n            let data = {}\r\n            selectById(item.id).then(res=>{\r\n              data = res.data\r\n              data.days = item.days\r\n              data.frequency = item.frequency\r\n              data.medicalAdvice = item.medicalAdvice\r\n              data.medicineUsage = item.medicineUsage\r\n              data.usageMeans = item.usageMeans\r\n              data.num = item.num\r\n              data.usageNum = item.usageNum\r\n              data.usageNumUnit = item.usageNumUnit\r\n              model.amount += (data.price*item.num)\r\n              model.druglist.push(deepClone(data))\r\n            })\r\n          })\r\n          model.amount = Math.floor((model.amount+0.5)*100)/100\r\n        })\r\n      })\r\n    },\r\n    saveDrugPrescription(){\r\n      saveDrugPrescription(this.refs,this.patient.registrationId,4).then(res=>{\r\n        this.$notify({\r\n          title: '成功',\r\n          message: '已暂存选中的成药处方',\r\n          type: 'success',\r\n          duration: 2000\r\n        })\r\n      })\r\n    },\r\n    getDrugPrescription(){\r\n      let data = {}\r\n      data.registrationId = this.$store.getters.id\r\n      data.type = 4\r\n      getDrugPrescription(data).then(res=>{\r\n        this.prescriptionList.push(res.data)\r\n      })\r\n    },\r\n    addfreitem(val){\r\n      this.selectCheck(val)\r\n    },\r\n    getfreqList(){\r\n      let data = {}\r\n      data.staffId = this.$store.getters.id\r\n      data.selectType = 6\r\n      selectByType(data).then(res=>{\r\n        this.freqlist = res.data.drugList.filter(item=>{\r\n          if(item.typeId === 101)\r\n            return true\r\n        })\r\n      })\r\n    },\r\n    refresh(){\r\n      this.$confirm('未开立的处方都将清除,确认刷新?', '刷新', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(()=>{\r\n          this.listByReg()\r\n        })\r\n    },\r\n    deletepre(){\r\n      let data = this.refs[0].name\r\n      this.prescriptionList=this.prescriptionList.filter(item=>{\r\n        if(item.name===data)\r\n          return false\r\n        return true\r\n      })\r\n    },\r\n    invalid(){\r\n      let data = this.refs[0].id\r\n      invalid(data).then(res=>{\r\n        this.$notify({\r\n          title: '成功',\r\n          message: res.message,\r\n          type: 'success',\r\n          duration: 2000\r\n        })\r\n        this.listByReg()\r\n      })\r\n    },\r\n    async listByReg(){\r\n      listByReg(this.patient.registrationId).then(res=>{\r\n        this.prescriptionList=res.data\r\n      })\r\n    },\r\n    handleSelectionChange(val){\r\n      this.refs = val\r\n    },\r\n    async apply(){\r\n      let data = this.refs[0]\r\n      data.createStaffId = this.$store.getters.id\r\n      data.registrationId = this.patient.registrationId\r\n      data.dmsMedicineItemRecordList = data.druglist\r\n      data.dmsMedicineItemRecordList.forEach(item=>{\r\n        item.drugId = item.id\r\n      })\r\n      apply(data).then(res=>{\r\n         this.$notify({\r\n          title: '成功',\r\n          message: res.message,\r\n          type: 'success',\r\n          duration: 2000\r\n        })\r\n        this.listByReg()\r\n      })\r\n    },\r\n    createpre(){\r\n      this.edit = false\r\n      this.prescriptionList.push(this.oneprescription)\r\n      this.dialogTableVisible = false\r\n    },\r\n    changepre(){\r\n      this.dialogTableVisible =false\r\n    },\r\n    changenum(val){\r\n      this.oneprescription.amount=0\r\n      this.oneprescription.druglist.forEach(item=>{\r\n        this.oneprescription.amount+=item.price*item.num\r\n      })\r\n      this.oneprescription.amount = Math.floor((this.oneprescription.amount+0.5)*100)/100\r\n    },\r\n    deldrug(row){\r\n      this.oneprescription.druglist = this.oneprescription.druglist.filter(item=>{\r\n        if(item.id===row.id)\r\n          return false\r\n        return true\r\n      })\r\n    },\r\n    choosedrug(val){\r\n      let flag = 1\r\n      this.oneprescription.druglist.forEach(item=>{\r\n        if(item.id===val.id){\r\n          item.num+=1\r\n          flag=0\r\n        }\r\n      })\r\n      if(flag){\r\n        this.oneprescription.amount +=val.price\r\n        this.oneprescription.amount = Math.floor((this.oneprescription.amount+0.5)*100)/100\r\n        this.oneprescription.druglist.push(val)\r\n        this.oneprescription.druglist.forEach(item=>{\r\n          if(item.num===undefined)\r\n            item.num=1\r\n        })\r\n      }\r\n    },\r\n    async getdrugList() {\r\n      let data = {}\r\n      data.pageSize = this.page.pageSize\r\n      data.pageNum = this.page.pageNum\r\n      data.status = 1\r\n      data.typeId = 101\r\n      data.name = this.searchdrug\r\n      const response = await getdrugList(data)\r\n      this.drugList = response.data.list\r\n      this.total = response.data.total\r\n    },\r\n    addpre(){\r\n      this.getfreqList()\r\n      this.edit = false\r\n      this.oneprescription = deepClone(defaultpre)\r\n      this.getdrugList()  \r\n      this.dialogTableVisible = true\r\n    },\r\n    showDetail(row){\r\n      this.edit = true\r\n      this.oneprescription = row\r\n      this.dialogTableVisible=true\r\n    },\r\n    controlfast(){\r\n      this.isclose=!this.isclose\r\n      if(this.mainwidth===\"65%\")\r\n        this.mainwidth=\"80%\"\r\n      else\r\n        this.mainwidth=\"65%\"\r\n    }\r\n  }\r\n}\r\n",null]}