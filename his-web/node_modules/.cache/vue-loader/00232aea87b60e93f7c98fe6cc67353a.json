{"remainingRequest":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\XM\\his-web\\src\\views\\pharmacy\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\XM\\his-web\\src\\views\\pharmacy\\index.vue","mtime":1602343573700},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1600936442292}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {listPatient,releaseDrug,refundDrug} from '@/api/drugstore'\nimport {parseTime,formatTime,deepClone} from '@/utils'\nimport {listByIds} from '@/api/outpatient/prescription'\nimport {charge} from '@/api/regist'\n  export default{\n    data(){\n      return{\n        selectid:'',\n        refundVisible:false,\n        refundamout:1,\n        refundlimit:0,\n        refundid:'',\n        searchpatient:'',\n        sendrefs:[],\n        druglist:[],\n        druglistgiven:[],\n        patient:{},\n        undoPatientList:[],\n        donePatientList:[],\n        visible:false,\n        isGiven:false,\n        spanArr:[],\n        isaside: true,\n        activeName: 'first',\n        activeName2: 'first',\n        position:0,\n        refs:{\n          chargeItemId:'',\n          invoiceNo:'',\n          operatorId:'',\n          settlementCatId:7,\n          amount:'',\n          type:''\n        }\n      };\n    },\n    created(){\n      this.listPatient()\n    },\n    methods: {\n      refundDrug(){\n        if(this.refundamout>this.refundlimit){\n          this.$notify({\n            title: '错误',\n            message: '输入数量大于可退药数量！',\n            type: 'warning',\n            duration: 2000\n          })\n        }\n        else if(this.refundamout<=0){\n          this.$notify({\n            title: '错误',\n            message: '退药数量不能小于1！',\n            type: 'warning',\n            duration: 2000\n          })\n        }\n        else{\n          let data = {}\n          data.excutorId = this.$store.getters.id\n          data.refundItemList = []\n          let temp = {}\n          temp.refundNum = this.refundamout\n          temp.refundPrescriptionItemId = this.refundid\n          temp.type = 5\n          data.refundItemList.push(temp)\n          refundDrug(data).then(res=>{\n            this.$notify({\n              title: '成功',\n              message: '退药成功',\n              type: 'success',\n              duration: 2000\n            })\n            this.refundVisible = false\n            this.listPatient()\n            this.druglistgiven = []\n            this.handleGiven2()\n          })\n        }\n      },\n      refund(val){\n        this.refundVisible = true\n        this.refundlimit = val.num - val.refundNum\n        this.refundid = val.drugid\n      },\n      sendDrug(){\n        if (this.sendrefs.length===0){\n          this.$notify({\n            title: '提示',\n            message: \"请选择一条数据！\",\n            type: 'warning',\n            duration: 2000\n          })\n          return;\n        }\n        this.sendrefs.forEach(item=>{\n          releaseDrug(item.id,5).then(res=>{\n            this.$notify({\n              title: '成功',\n              message: res.message,\n              type: 'success',\n              duration: 2000\n            })\n            this.listPatient()\n            this.druglist = []\n            this.druglistgiven = []\n\n          })\n        })\n      },\n      changedep(val){\n        console.log(val)\n        this.sendrefs = val\n      },\n      rowspan() {\n      this.spanArr = [];//在data里面定义\n      this.position = 0; //在data里面定义\n      this.druglist.forEach((item,index) => {\n        if( index === 0){\n          this.spanArr.push(1);\n          this.position = 0;\n          item.sequence=index+1;//设置序号\n        }else{\n          if(this.druglist[index].id === this.druglist[index-1].id ){\n            this.spanArr[this.position] += 1;//连续有几行项目名名称相同\n            this.spanArr.push(0); // 名称相同后往数组里面加一项0\n            //当项目名称相同时，设置当前序号和前一个相同\n            this.druglist[index].sequence = this.druglist[index-1].sequence;\n          }else{\n            this.spanArr.push(1);\n            this.position = index;\n            //当项目名称不同时，将当前序号设置为前一个序号+1\n            this.druglist[index].sequence = this.druglist[index-1].sequence+1;\n          }\n        }\n      })\n      },\n      objectSpanMethod({ row, column, rowIndex, columnIndex }) {  //表格合并行\n        if(columnIndex === 0){  //序号列也进行合并(第一列)\n          //this.spanArr这个数组里面存的是table里面连续的有几条数据相同\n          //例如:[1,1,2,0,2,0]\n          //1  代表的没有连续的相同的\n          //2  代表连续的两个相同\n          //0  代表是和上一条内容相同\n          const _row = this.spanArr[rowIndex];\n          const _col = _row>0 ? 1 : 0;\n\n          return {\n            rowspan: _row, //行\n            colspan: _col  //列\n          }\n        }\n        if(columnIndex === 1){ //项目列也进行合并(第二列)\n          const _row = this.spanArr[rowIndex];\n          const _col = _row>0 ? 1 : 0;\n          return {\n            rowspan: _row,\n            colspan: _col\n          }\n        }\n      },\n      listPatient(){\n        let data = {}\n        data.queryDate = parseTime(new Date())\n        data.queryDate = data.queryDate.substr(0,10)\n        data.type = 5\n        listPatient(data).then(res=>{\n          this.undoPatientList = res.data.undoPatientList\n          this.donePatientList = res.data.donePatientList\n        })\n      },\n      handleGive2(){\n        this.druglist = []\n        this.isGiven=false;\n        let data = ''\n        this.patient.prescriptionIdList.forEach(item=>{\n          data += (item+',')\n        })\n        data = data.substr(0,data.length-1)\n        listByIds(data).then(res=>{\n          res.data.forEach(item=>{\n            let temp = item.id\n            let temp2 = item.name\n            let temp3 = item.createStaffName\n            item.dmsMedicineItemRecordResultList.forEach(drug=>{\n              drug.drugid = drug.id\n              drug.id = temp\n              drug.doctorname = temp3\n              drug.cname = temp2\n              this.druglist.push(deepClone(drug))\n            })\n          })\n          this.rowspan()\n        })\n\n      },\n      handleGive(val){\n        this.druglist = []\n        this.isGiven=false;\n        this.patient = deepClone(val)\n        let data = ''\n        this.patient.prescriptionIdList.forEach(item=>{\n          data += (item+',')\n        })\n        data = data.substr(0,data.length-1)\n        listByIds(data).then(res=>{\n          res.data.forEach(item=>{\n            let temp = item.id\n            let temp2 = item.name\n            let temp3 = item.createStaffName\n            item.dmsMedicineItemRecordResultList.forEach(drug=>{\n              drug.drugid = drug.id\n              drug.id = temp\n              drug.doctorname = temp3\n              drug.cname = temp2\n              drug.status = item.status\n              this.druglist.push(deepClone(drug))\n            })\n          })\n          this.rowspan()\n        })\n\n      },\n      handleGiven2(){\n        let data = ''\n        this.patient.prescriptionIdList.forEach(item=>{\n          data += (item+',')\n        })\n        data = data.substr(0,data.length-1)\n        listByIds(data).then(res=>{\n          res.data.forEach(item=>{\n            let temp = item.id\n            let temp2 = item.name\n            let temp3 = item.createStaffName\n            item.dmsMedicineItemRecordResultList.forEach(drug=>{\n              drug.drugid = drug.id\n              drug.id = temp\n              drug.doctorname = temp3\n              drug.cname = temp2\n              this.druglistgiven.push(deepClone(drug))\n            })\n          })\n        })\n      },\n      handleGiven(val){\n        this.isGiven=true;\n        this.druglistgiven = []\n        this.patient = deepClone(val)\n        let data = ''\n        this.patient.prescriptionIdList.forEach(item=>{\n          data += (item+',')\n        })\n        data = data.substr(0,data.length-1)\n        listByIds(data).then(res=>{\n          res.data.forEach(item=>{\n            let temp = item.id\n            let temp2 = item.name\n            let temp3 = item.createStaffName\n            item.dmsMedicineItemRecordResultList.forEach(drug=>{\n              drug.drugid = drug.id\n              drug.id = temp\n              drug.doctorname = temp3\n              drug.cname = temp2\n              this.druglistgiven.push(deepClone(drug))\n            })\n          })\n        })\n      },\n      showaside(){\n        this.isaside = !this.isaside\n      },\n      register(){\n        this.$confirm('确定为 王小虎1 登记项目 验血 吗?', '项目登记', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n      },\n      // 缴费\n      charge(){\n        if (this.sendrefs.length===0){\n          this.$notify({\n            title: '提示',\n            message: \"请选择一条数据！\",\n            type: 'warning',\n            duration: 2000\n          })\n          return;\n        }\n        let data = [];\n        this.sendrefs.forEach(item=>{\n          this.refs.chargeItemId = item.id\n          this.refs.amount = item.price\n          this.refs.invoiceNo = this.orderCode()\n          this.refs.type = 4\n          this.refs.operatorId = this.$store.getters.id\n          data.push(this.refs);\n        });\n          charge(data).then(res=>{\n            this.$notify({\n              title: '成功',\n              message: '缴费成功',\n              type: 'success',\n              duration: 2000\n            })\n            this.getMechlist()\n          })\n      },\n      // 生成发票号\n      orderCode() {\n        let orderCode = '';\n        for (let i = 0; i < 6; i++) //6位随机数，用以加在时间戳后面。\n        {\n          orderCode += Math.floor(Math.random() * 10);\n        }\n        orderCode = new Date().getTime() + orderCode;  //时间戳，用来生成订单号。\n        console.log(orderCode)\n        return orderCode;\n      }\n  }\n}\n",null]}