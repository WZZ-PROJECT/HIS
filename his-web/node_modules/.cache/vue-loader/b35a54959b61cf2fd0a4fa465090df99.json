{"remainingRequest":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\XM\\his-web\\src\\views\\outpatient\\maintain\\inspection.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\XM\\his-web\\src\\views\\outpatient\\maintain\\inspection.vue","mtime":1602049759995},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1600936442292}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {getNondrugModelList,updateModel,createModel,deleteModel} from '@/api/nondrugmodel'\nimport {getListDmsNonDrugAll} from '@/api/non_drug'\nimport Pagination from '@/components/Pagination'\nimport { deepClone,parseTime } from '@/utils'\nexport default {\n    components: {Pagination},\n  data(){\n    return{\n      chonondruglist:[],\n      choices:[],\n      dialogVisible:false,\n      alldrugList:[],\n      nondrugList:[],\n      edit:0,\n      model:{},\n      loading:false,\n      isaside:false,\n      asidewidth:\"100%\",\n      total:0,\n      listQuery:{\n        nonDrugIdList:'',\n        id:'',\n        status:1,\n        name:'',\n        scope:0,\n        ownId:this.$store.getters.id,\n        aim:'',\n        code:'',\n        type:'',\n        pageSize:20,\n        pageNum:1,\n        isAdmin:'0'\n      },\n      modelList:[],\n      queryModel:{\n        name:'',\n        range:'',\n        type:''\n      }\n    }\n  },\n  created(){\n    this.getModelList()\n    this.getListDmsNonDrugAll()\n  },\n  methods:{\n    deleteModel(row){\n       this.$confirm('确认删除当前模板?', '警告', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(()=>{      deleteModel(row.id).then(res=>{\n        this.getModelList()\n        this.$notify({\n          title: '成功',\n          message: res.message,\n          type: 'success',\n          duration: 2000\n        })\n      })})\n\n    },\n    createModel(){\n      let data = deepClone(this.model)\n      data.status = 1\n      data.ownId = this.$store.getters.id\n      data.nonDrugIdList = deepClone(this.choices)\n      data.scope = 0\n      createModel(data).then(res=>{\n        this.getModelList()\n        this.$notify({\n          title: '成功',\n          message: '成功创建模板',\n          type: 'success',\n          duration: 2000\n        })\n      })\n      this.showaside()\n    },\n    updateModel(){\n      let data = deepClone(this.model)\n      data.nonDrugIdList = deepClone(this.choices)\n      updateModel(data).then(res=>{\n        this.getModelList()\n        this.$notify({\n          title: '成功',\n          message: res.message,\n          type: 'success',\n          duration: 2000\n        })\n      })\n      this.showaside()\n    },\n    confirmItem(){\n      this.nondrugList = this.alldrugList.filter(item=>{\n        if(this.choices.includes(item.id))\n          return true\n      })\n      this.dialogVisible=!this.dialogVisible\n    },\n    addItem(){\n      if(this.model.type===0||this.model.type===1||this.model.type===2){\n        this.chonondruglist = this.alldrugList.filter(item=>{\n          if(item.recordType===this.model.type+1)\n            return true\n          return false\n        })\n        const data = []\n        this.chonondruglist.forEach(item =>{\n          data.push({\n            id:item.id,\n            name:item.name\n          })\n        })\n        this.dialogVisible = true\n        return\n      }\n      this.getModelList()\n        this.$notify({\n          title: '警告',\n          message: '请先选择类型！',\n          type: 'warning',\n          duration: 2000\n        })\n    },\n    getListDmsNonDrugAll(){\n      getListDmsNonDrugAll().then(res=>{\n        this.alldrugList = res.data\n        this.alldrugList.forEach(item=>{\n          item.label = item.name\n          item.key = item.id\n        })\n      })\n    },\n    async getModelList(){\n      getNondrugModelList(this.listQuery).then(res=>{\n        this.modelList = res.data.list\n        this.total = res.data.total\n      })\n\n    },\n    searchModel(){\n      this.loading = true\n      this.getModelList()\n      this.loading = false\n    },\n    showaside(type){\n      if(this.asidewidth===\"100%\")\n        this.asidewidth=\"0%\"\n      else\n        this.asidewidth=\"100%\"\n      this.isaside=!this.isaside\n      if(type==='edit')\n        this.edit = 1\n      else if(type==='add'){\n        this.choices = []\n        this.nondrugList = []\n        this.model = {}\n        this.edit = 0\n      }\n      else\n        this.edit = 0\n    },\n    editModel(row){\n      this.choices = deepClone(row.nonDrugIdList)\n      this.nondrugList = this.alldrugList.filter(item=>{\n        if(row.nonDrugIdList.includes(item.id))\n          return true\n      })\n      this.model = deepClone(row)\n      this.model.createTime = parseTime(this.model.createTime)\n      this.showaside('edit')\n    }\n  }\n}\n",null]}