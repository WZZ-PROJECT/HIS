{"remainingRequest":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\XM\\his-web\\src\\views\\admin\\schedule.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\XM\\his-web\\src\\views\\admin\\schedule.vue","mtime":1602343595391},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1600936442292}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {getAllDep, getDeplist} from '@/api/department'\r\nimport {getRulelist,generateSkd,createRule,getRuleDetail,updateRule,deleteRule} from '@/api/schedule'\r\nimport {getUserList} from '@/api/user'\r\nimport Pagination from '@/components/Pagination'\r\nimport {getAllReg} from '@/api/admin'\r\nimport {parseTime,formatTime} from '@/utils'\r\nexport default {\r\n  components: {Pagination},\r\n  data() {\r\n    return {\r\n      editbutton:false,\r\n      rulelistid:'',\r\n      rulecurrent: [],\r\n      addRule:{},\r\n      ruleid:'',\r\n      pickerOptions: {\r\n        disabledDate(time) {\r\n          return time.getTime() <= Date.now()-3600*1000*24;\r\n        },\r\n        shortcuts: [{\r\n          text: '今天',\r\n          onClick(picker) {\r\n            picker.$emit('pick', new Date());\r\n          }\r\n        }, {\r\n          text: '一周后',\r\n          onClick(picker) {\r\n            const date = new Date();\r\n            date.setTime(date.getTime() + 3600 * 1000 * 24 * 7);\r\n            picker.$emit('pick', date);\r\n          }\r\n        }, {\r\n          text: '一月后',\r\n          onClick(picker) {\r\n            const date = new Date();\r\n            date.setTime(date.getTime() + 3600 * 1000 * 24 * 30);\r\n            picker.$emit('pick', date);\r\n          }\r\n        }]\r\n      },\r\n      value1: '',\r\n      value2:'',\r\n      allreg:[],\r\n      dialogVisible:false,\r\n      listLoading: true,\r\n      total: 0,\r\n      depart:'',\r\n      alldepart:[],\r\n      listQuery:{\r\n        deptId:'',\r\n        pageSize:10,\r\n        pageNum:1,\r\n      },\r\n      ruleList:[],\r\n      showdetail:false,\r\n      schedule:0,\r\n      scheduleList: [],\r\n      rulelistref:[]\r\n    }\r\n  },\r\n  created(){\r\n    this.getAlldep()\r\n    this.getAllreg()\r\n    this.getDeplist()\r\n  },\r\n  methods: {\r\n    getDepDoctor(){\r\n      let data = {}\r\n      this.scheduleList = []\r\n      data.deptId = this.addRule.deptId\r\n      getUserList(data).then(res=>{\r\n        res.data.list.forEach(item=>{\r\n          let temp = {}\r\n          temp.staffName = item.name\r\n          temp.id = item.id\r\n          this.scheduleList.push(temp)\r\n        })\r\n      })\r\n    },\r\n    updateRule(){\r\n      if(this.addRule.deptId === null || this.addRule.deptId === undefined) {\r\n        this.$notify({\r\n          title: '提示',\r\n          message: \"保存排班规则前请选择对应科室！\",\r\n          type: 'warning',\r\n          duration: 2000\r\n        })\r\n        return;\r\n      }\r\n      if(this.rulecurrent.length === 0) {\r\n        this.$notify({\r\n          title: '提示',\r\n          message: \"请选择医生！\",\r\n          type: 'warning',\r\n          duration: 2000\r\n        })\r\n        return;\r\n      }\r\n      this.rulecurrent.forEach(element => {\r\n        let daysOfWeek=''\r\n        if(element.checked1){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked2){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked3){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked4){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked5){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked6){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked7){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked8){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked9){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked10){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked11){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked12){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked13){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked14){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        element.daysOfWeek = daysOfWeek\r\n        element.status=1\r\n        element.staffId = element.staffId\r\n        element.skLimit = element.limit\r\n      });\r\n      let data = {}\r\n      data.smsSkdRuleItemParamList = this.rulecurrent\r\n      data.deptId = this.addRule.deptId\r\n      data.description = this.addRule.description\r\n      data.operatorId = this.$store.getters.id\r\n      data.status = 1\r\n      data.ruleName = this.addRule.ruleName\r\n      data.ruleid = this.rulelistid\r\n      updateRule(data).then(res=>{\r\n        this.showdetail=false\r\n        this.$notify({\r\n          title: '成功',\r\n          message: res.message,\r\n          type: 'success',\r\n          duration: 2000\r\n        })\r\n        this.getRuleList()\r\n      })\r\n    },\r\n    async getRuleDetail(id){\r\n      this.rulelistid = id\r\n      let res = await getRuleDetail(id)\r\n      this.addRule = res.data\r\n      this.scheduleList = res.data.smsSkdRuleItemResultList\r\n      let i =0\r\n      this.scheduleList.forEach(item=>{\r\n        item.limit = item.skLimit\r\n        if(item.daysOfWeek.charAt(0)==='1'){item.checked1=true}else{item.checked1=false}\r\n        if(item.daysOfWeek.charAt(1)==='1'){item.checked2=true}else{item.checked2=false}\r\n        if(item.daysOfWeek.charAt(2)==='1'){item.checked3=true}else{item.checked3=false}\r\n        if(item.daysOfWeek.charAt(3)==='1'){item.checked4=true}else{item.checked4=false}\r\n        if(item.daysOfWeek.charAt(4)==='1'){item.checked5=true}else{item.checked5=false}\r\n        if(item.daysOfWeek.charAt(5)==='1'){item.checked6=true}else{item.checked6=false}\r\n        if(item.daysOfWeek.charAt(6)==='1'){item.checked7=true}else{item.checked7=false}\r\n        if(item.daysOfWeek.charAt(7)==='1'){item.checked8=true}else{item.checked8=false}\r\n        if(item.daysOfWeek.charAt(8)==='1'){item.checked9=true}else{item.checked9=false}\r\n        if(item.daysOfWeek.charAt(9)==='1'){item.checked10=true}else{item.checked10=false}\r\n        if(item.daysOfWeek.charAt(10)==='1'){item.checked11=true}else{item.checked11=false}\r\n        if(item.daysOfWeek.charAt(11)==='1'){item.checked12=true}else{item.checked12=false}\r\n        if(item.daysOfWeek.charAt(12)==='1'){item.checked13=true}else{item.checked13=false}\r\n        if(item.daysOfWeek.charAt(13)==='1'){item.checked14=true}else{item.checked14=false}\r\n      })\r\n      this.getRuleList()\r\n      this.showdetail=true;\r\n    },\r\n    createRule(){\r\n      if(this.addRule.deptId === null || this.addRule.deptId === undefined) {\r\n        this.$notify({\r\n          title: '提示',\r\n          message: \"保存排班规则前请选择对应科室！\",\r\n          type: 'warning',\r\n          duration: 2000\r\n        })\r\n        return;\r\n      }\r\n      if(this.rulecurrent.length === 0) {\r\n        this.$notify({\r\n          title: '提示',\r\n          message: \"请选择医生！\",\r\n          type: 'warning',\r\n          duration: 2000\r\n        })\r\n        return;\r\n      }\r\n     /*\r\n      console.log(this.rulecurrent.limit)\r\n      if(this.rulecurrent.limit===undefined){\r\n        this.$notify({\r\n          title: '提示',\r\n          message: \"请输入排班限额！\",\r\n          type: 'warning',\r\n          duration: 2000\r\n        })\r\n        return;\r\n      }*/\r\n\r\n      this.rulecurrent.forEach(element => {\r\n        let daysOfWeek=''\r\n        if(element.checked1){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked2){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked3){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked4){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked5){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked6){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked7){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked8){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked9){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked10){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked11){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked12){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked13){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        if(element.checked14){daysOfWeek+='1'}else{daysOfWeek+='0'}\r\n        element.daysOfWeek = daysOfWeek\r\n        element.status=1\r\n        element.staffId = element.id\r\n        element.skLimit = element.limit\r\n      });\r\n      let data = {}\r\n      data.smsSkdRuleItemParamList = this.rulecurrent\r\n      data.deptId = this.addRule.deptId\r\n      data.description = this.addRule.description\r\n      data.operatorId = this.$store.getters.id\r\n      data.status = 1\r\n      data.ruleName = this.addRule.ruleName\r\n      createRule(data).then(res=>{\r\n        this.getRuleList()\r\n        this.showdetail=false\r\n        this.$notify({\r\n          title: '成功',\r\n          message: res.message,\r\n          type: 'success',\r\n          duration: 2000\r\n        })\r\n      })\r\n    },\r\n    selectrule(val){\r\n      this.rulecurrent = val\r\n    },\r\n    async getAllreg(){\r\n      const res = await getAllReg()\r\n      this.allreg = res.data\r\n    },\r\n    generateSkd(){\r\n      let data = {}\r\n      data.ruleIds=this.ruleid\r\n      data.startDate = parseTime(this.value1).substr(0,10)\r\n      data.endDate = parseTime(this.value2).substr(0,10)\r\n      generateSkd(data).then(res=>{\r\n        this.$notify({\r\n          title: '成功',\r\n          message: res.message,\r\n          type: 'success',\r\n          duration: 2000\r\n        })\r\n      })\r\n      this.dialogVisible = false\r\n    },\r\n    changerule(val){\r\n      this.rulelistref=val\r\n    },\r\n    delrule(){\r\n      if(this.rulelistref.length===0)\r\n        alert('请先选中要删除的规则')\r\n      this.$confirm('确认删除选中的排班规则?', '警告', {\r\n        confirmButtonText: '确认',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(()=>{\r\n        let data = ''\r\n        this.rulelistref.forEach(item=>{\r\n          data+=item.id+','\r\n        })\r\n        data = data.substr(0, data.length - 1);\r\n        deleteRule(data).then(res=>{\r\n          this.$notify({\r\n            title: '成功',\r\n            message: res.message,\r\n            type: 'success',\r\n            duration: 2000\r\n          })\r\n          this.getRuleList()\r\n        })\r\n      })\r\n    },\r\n    confirmdate(){\r\n      console.log(this.value2)\r\n    },\r\n    async getAlldep(){\r\n      const res = await getAllDep()\r\n      this.alldepart=res.data\r\n    },\r\n    async getDeplist() {\r\n      this.listLoading = true\r\n      const response = await getDeplist(this.listQuery)\r\n      this.depList = response.data.list\r\n      this.total = response.data.total\r\n      this.listLoading = false\r\n    },\r\n    getRuleList(){\r\n      if(this.depart!==''){\r\n        this.ruleList = []\r\n        debugger\r\n        this.listQuery.deptId=this.depart\r\n        getRulelist(this.listQuery).then(res=>{\r\n          if(res.data === undefined || res.data === null) {\r\n            this.ruleList = []\r\n            return\r\n          }\r\n          this.ruleList=res.data.list\r\n          this.ruleList.forEach(item=>{\r\n            item.operateTime = parseTime(item.operateTime)\r\n          })\r\n          this.total=res.data.total\r\n        })\r\n      }\r\n    },\r\n    jumpadd(){\r\n      this.showdetail=!this.showdetail\r\n      this.addRule={}\r\n      /*this.getDepDoctor()*/\r\n    },\r\n    showRow(row){\r\n//赋值给radio\r\n      this.radio = this.tableData.indexOf(row);\r\n    },\r\n    handleCurrentChange(val,index) {\r\n      this.currentRow = val;\r\n      this.$emit('data',val.pkg);\r\n    },\r\n\r\n    getCurrentRow(val){\r\n      console.log(val)\r\n    },\r\n    choose(){\r\n      this.schedule = !this.schedule;\r\n    },\r\n    jumpback(){\r\n      this.showdetail=!this.showdetail\r\n    },\r\n    empty(){\r\n      this.addRule={};\r\n      this.ruleList=[];\r\n      this.rulecurrent=[];\r\n      this.rulelistid ='';\r\n      this.scheduleList = [];\r\n    }\r\n  }\r\n}\r\n",null]}