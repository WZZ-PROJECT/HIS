{"remainingRequest":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\XM\\his-web\\src\\views\\admin\\non_drug.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\XM\\his-web\\src\\views\\admin\\non_drug.vue","mtime":1601367679455},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1600936436646},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1600936442292}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport path from 'path'\nimport { deepClone,parseTime } from '@/utils'\nimport {getNondrugList,getAllNondrug,updateNondrug,createNondrug,deleteNondrug} from '@/api/non_drug'\nimport {getAllDep} from '@/api/department'\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\nimport { Promise } from 'q';\n\nconst defaultNondrug = {\n  code:'',\n  name:'',\n  format:'',\n  price:'',\n  expClassId: '',\n  deptId: '',\n  mnemonicCode:'',\n  recordType: '',\n  createDate: '',\n}\n\nexport default {\n  components: {Pagination},\n  data() {\n    return {\n      nondrug: Object.assign({},defaultNondrug),\n      nondrugList: [],\n      Alldept:[],\n      dialogVisible: false,\n      dialogType: 'new',\n      checkStrictly: false,\n      defaultProps: {\n        children: 'children',\n        label: 'title'\n      },\n      deptype:[1,2,3,4],\n      total: 0,\n      listLoading: true,\n      allCatId:[],\n      allNondrug:[],\n      allType:[],\n      listQuery: {\n        code:null,\n        name:null,\n        format:null,\n        price:null,\n        expClassId: null,\n        deptId: null,\n        mnemonicCode:null,\n        recordType: null,\n        createDate: null,\n        status:1,\n        pageSize:10,\n        pageNum:1\n      },\n      listNull:{\n      },\n      downloadLoading: false,\n      rules:{\n        code:[\n          {required: true, message: '请输入项目编码',trigger: 'blur'}\n        ],\n        name:[\n          {required: true, message: '请输入项目名称',trigger: 'blur'}\n        ],\n        format:[\n          {required: true, message: '请输入规格',trigger: 'blur'}\n        ],\n        price:[\n          {required: true, message: '请输入价格',trigger: 'blur'}\n        ],\n        expClassId:[\n          {required:true , message:'请输入费用所属科目',trigger:'blur'}\n        ],\n        recordType:[\n          {required:true,message:'请选择项目类型',trigger:'blur'}\n        ]\n      },\n      deplistref:[]\n    }\n  },\n  computed: {\n\n  },\n  created() {\n    // Mock: get all routes and roles list from server\n    Promise.all([\n    this.getAllNondrug(),\n    this.getNondrugList()\n    ])\n    this.getAllDep()\n  },\n  methods: {\n    getAllDep(){\n      getAllDep().then(res=>{\n        this.Alldept=res.data\n      })\n    },\n    async getAllNondrug(){\n      this.listLoading = true\n      const response = await getNondrugList(this.listNull)\n      this.allNondrug = response.data\n      this.total=response.data.total\n      this.listLoading = false\n    },\n    async getNondrugList() {\n      this.listLoading = true\n      const response = await getNondrugList(this.listQuery)\n      this.nondrugList = response.data.list\n      this.nondrugList.forEach(item=>{\n        item.createDate = item.createDate.substr(0,10)\n      })\n      this.total = response.data.total\n      this.listLoading = false\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getNondrugList()\n    },\n    handleAdd() {\n      this.resetTemp()\n      this.dialogType = 'new'\n      this.dialogVisible = true\n      this.checkStrictly = true\n      this.$nextTick(() => {\n        this.$refs['depart'].clearValidate()\n      })\n    },\n    handleEdit(row) {\n      this.resetTemp()\n      this.nondrug = Object.assign({}, row) // copy obj\n      this.dialogType = 'edit'\n      this.dialogVisible = true\n      this.checkStrictly = true\n      this.$nextTick(() => {\n        this.$refs['depart'].clearValidate()\n      })\n    },\n    resetTemp() {\n      this.nondrug = Object.assign({},defaultNondrug)\n    },\n    formatJson(filterVal, jsonData) {\n      return jsonData.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    },\n    changedep(val){\n      this.deplistref=val;\n    },\n    handleSomeDelete(){\n      if (this.deplistref.length === 0) {\n        this.$notify({\n          title: '提示',\n          message: \"请勾选数据！\",\n          type: 'warning',\n          duration: 2000\n        })\n        return;\n      }\n      this.$confirm('确认删除选中项目?', '警告', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(()=>{\n      let delsom =''\n      for(let i=0;i<this.deplistref.length;i++){\n        if(i!==this.deplistref.length-1)\n          delsom=delsom+(this.deplistref[i].id)+','\n        else\n          delsom=delsom+(this.deplistref[i].id)\n      }\n      console.log(delsom)\n      deleteNondrug(delsom).then(res=>{\n      this.$notify({\n        title: '成功',\n        message: res.message,\n        type: 'success',\n        duration: 2000\n      })\n        this.getNondrugList()\n      }\n      )\n      })\n    }\n    ,\n    handleDelete(row) {\n      this.$confirm('确认删除当前项目?', '警告', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(()=>{\n      deleteNondrug(row.id).then(res=>{\n        this.$notify({\n        title: '成功',\n        message: res.message,\n        type: 'success',\n        duration: 2000\n      })\n      this.getNondrugList()\n      })\n      })\n    },\n    handleDownload() {\n      this.downloadLoading = true\n      this.getAllNondrug()\n      import('@/vendor/Export2Excel').then(excel => {\n        const tHeader = ['项目编码', '项目名称']\n        const filterVal = ['code', 'name']\n        const data = this.formatJson(filterVal, this.allNondrug)\n        excel.export_json_to_excel({\n          header: tHeader,\n          data,\n          filename: '项目目录'\n        })\n        this.downloadLoading = false\n      })\n    },\n    async confirmDep(formName){\n      this.$refs[formName].validate((valid)=>{\n        if(valid){\n          const isEdit = this.dialogType === 'edit'\n          this.listLoading=true\n          if(isEdit){\n            updateNondrug(this.nondrug).then(res=>{\n                this.getNondrugList()\n                this.$notify({\n                title: '成功',\n                message: '已修改该项目',\n                type: 'success',\n                duration: 2000\n              })\n            })\n            this.dialogVisible=false\n          }else{\n            this.nondrug.expClassId = 1\n            this.nondrug.status = 1\n            createNondrug(this.nondrug).then(res=>{\n              this.getNondrugList()\n              this.$notify({\n              title: '成功',\n              message: res.message,\n              type: 'success',\n              duration: 2000\n            })\n            this.dialogVisible=false\n            })\n          }\n        }\n      })\n    },\n  }\n}\n",null]}