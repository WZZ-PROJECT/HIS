{"remainingRequest":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\XM\\his-web\\src\\views\\outpatient\\workstation\\handle.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\XM\\his-web\\src\\views\\outpatient\\workstation\\handle.vue","mtime":1602049438427},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1600936436646},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1600936442292}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {getNondrugList} from '@/api/non_drug'\nimport {apply,list,invalid,deleteById} from '@/api/outpatient/nondrugapply'\nimport {getNondrugModelList} from '@/api/nondrugmodel'\nimport {deepClone} from '@/utils'\nimport {selectByType} from '@/api/outpatient/frequentuse'\nimport {saveNonDrug,getNonDrug} from '@/api/outpatient/save'\nimport { Promise, all } from 'q';\nexport default {\n  props:['patient'],\n  name:'Inspection',\n  data(){\n    return{\n      freqlist:[],\n      onemodel:{},\n      totalprice:0.000,\n      ref:[],\n      checkmodels:[],\n      check:{},\n      demandVisible:false,\n      dialogTableVisible:false,\n      activeName:'first',\n      isclose:true,\n      checkList:[],\n      mainwidth:\"65%\",\n      activeNames: ['1'],\n      total:0,\n      search:'',\n      listQuery: {\n        code:null,\n        name:null,\n        format:null,\n        price:null,\n        expClassId: null,\n        deptId: null,\n        mnemonicCode:null,\n        recordType: 3,\n        createDate: null,\n        status:1,\n        pageSize:1000,\n        pageNum:1\n      },\n      record:[]\n    };\n  },\n   watch:{\n    'patient' : function(newVal, oldVal){\n      this.patient = newVal\n      this.listRecord()\n    },\n  },\n  created(){\n    Promise.all([\n      this.getNondrugList().then(()=>{\n        this.getmodel()\n      })\n    ])\n    this.getfreqList()\n  },\n  methods:{\n    saveNonDrug(){\n      let data = {}\n      data.dmsNonDrugItemRecordParamList = this.ref\n      data.registrationId = this.patient.registrationId\n      data.type = 2\n      saveNonDrug(data).then(res=>{\n        this.$notify({\n          title: '成功',\n          message: '已暂存选中的处置项',\n          type: 'success',\n          duration: 2000\n        })\n      })\n    },\n    getNonDrug(){\n      let data = {}\n      data.registrationId = this.patient.registrationId\n      data.type = 2\n      getNonDrug(data).then(res=>{\n        res.data.dmsNonDrugItemRecordParamList.forEach(item=>{\n          this.selectCheckred(item)\n        })\n        this.$notify({\n          title: '成功',\n          message: '已取出暂存的处置项',\n          type: 'success',\n          duration: 2000\n        })\n      })\n    },\n    addfreitem(val){\n      this.selectCheck(val)\n    },\n    getfreqList(){\n      let data = {}\n      data.staffId = this.$store.getters.id\n      data.selectType = 3\n      selectByType(data).then(res=>{\n        this.freqlist = res.data.dispositionList\n      })\n    },\n    addModel(val){\n      this.$confirm('是否确定将 模板:'+val.name+' 中的内容导入该患者的检查中', '导入模板', {\n          confirmButtonText: '确认',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(()=>{\n          val.nondruglist.forEach(item=>{\n            item.status = -1\n            let flag = 1\n            this.record.forEach(com=>{\n              if(com.id===item.id){\n                flag = 0\n              }\n            })\n            if(flag)\n              this.record.push(item)\n          })\n        })\n    },\n    selectModel(val){\n      this.onemodel = val\n      console.log(this.onemodel)\n    },\n    async getmodel(){\n      let data = {}\n      data.scope = 0\n      data.ownId = this.$store.getters.id\n      data.type = 2\n      data.pageSize =10000\n      data.pageNum = 1\n      data.isAdmin = 0\n      await getNondrugModelList(data).then(res=>{\n        this.checkmodels = res.data.list\n        this.checkmodels.forEach(onemodel=>{\n          onemodel.nondruglist = []\n          onemodel.totalprice =0.00\n          this.checkList.filter(item=>{\n            if(onemodel.nonDrugIdList.includes(item.id)){\n              onemodel.nondruglist.push(item)\n              onemodel.totalprice += item.price\n            }\n          })\n        })\n      })\n    },\n    refresh(){\n      this.$confirm('未开立的项目都将清除,确认刷新?', '刷新', {\n          confirmButtonText: '确认',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(()=>{\n          this.listRecord()\n        })\n    },\n    invalid(){\n      let data = ''\n      this.ref.forEach(item=>{\n        data +=(item.id+',')\n      })\n      data = data.substr(0,data.length-1)\n      invalid(data).then(res=>{\n        this.$notify({\n          title: '成功',\n          message: res.message,\n          type: 'success',\n          duration: 2000\n        })\n        this.listRecord()\n      })\n    },\n    async listRecord(){\n      list(this.patient.registrationId,2).then(res=>{\n        this.record = res.data\n        console.log(this.record)\n        this.record.forEach(item=>{\n          this.checkList.filter(check=>{\n            if(check.id===item.noDrugId){\n              item.code = check.code\n              item.name = check.name\n              item.format = check.format\n              item.price = check.price\n            }\n          })\n          item.deptName = item.excuteDeptName\n        })\n      })\n    },\n    handleSelectionChange(val){\n      this.ref = val\n      this.totalprice = 0.00\n      this.ref.forEach(item=>{\n        this.totalprice+=item.price\n      })\n      this.totalprice = this.totalprice.toFixed(2)\n    },\n    handleClick(){\n      this.$notify({\n        title: '暂无数据',\n        message: '您开立的项目中包含已开立的项目，请检查后重新提交！',\n        type: 'warning',\n        duration: 2000\n      })\n      return false;\n    },\n    apply(){\n      let flags=0\n      this.ref.forEach(item=>{\n        if(item.status!=-1){\n          this.handleClick()\n          flags=1;\n        }\n      })\n      if(flags===0) {\n        let data = {}\n        data.dmsNonDrugItemRecordParamList = this.ref\n        data.createStaffId = this.$store.getters.id\n        data.registrationId = this.patient.registrationId\n        data.dmsNonDrugItemRecordParamList.forEach(item=>{\n          item.amount = item.price\n          item.excuteDeptId = item.deptId\n          item.noDrugId = item.id\n\n        })\n        data.type = 2\n        apply(data).then(res=>{\n          this.$notify({\n            title: '成功',\n            message: res.message,\n            type: 'success',\n            duration: 2000\n          })\n          this.listRecord()\n        })\n      }\n    },\n    submitDemand(){\n      this.record.forEach(item=>{\n        if(item.id===this.check.id){\n          item.aim = this.check.aim\n          item.demand = this.check.demand\n          item.clinicalImpression = this.check.clinicalImpression\n          item.clinicalDiagnosis = this.check.clinicalDiagnosis\n          item.checkParts = this.check.checkParts\n        }\n      })\n      this.demandVisible = false\n    },\n    demand(row){\n      this.demandVisible = true\n      this.check = deepClone(row)\n    },\n    async getNondrugList() {\n      const response = await getNondrugList(this.listQuery)\n      console.log(response)\n      this.checkList = response.data.list\n      this.total = response.data.total\n    },\n    selectCheckred(val){\n      let flag = 1\n      val.status=-1\n      this.record.forEach(item=>{\n        if(item.id===val.id){\n          flag=0\n        }\n      })\n      if(flag)\n        this.record.push(val)\n      this.dialogTableVisible = false\n    },\n    selectCheck(val){\n      val.status=0\n      this.$confirm('是否添加 '+val.name+' 到该患者?', '添加检查', {\n          confirmButtonText: '确认',\n          cancelButtonText: '取消',\n          type: 'success'\n        }).then(()=>{\n          let flag = 1\n          val.status=-1\n          this.record.forEach(item=>{\n            if(item.id===val.id){\n              flag=0\n            }\n          })\n          if(flag)\n            this.record.push(val)\n          else\n            alert('已存在该检查项目！')\n          this.dialogTableVisible = false\n        })\n    },\n    addcheck(){\n      this.dialogTableVisible = true\n    },\n    delcheck(){\n      let data = ''\n      this.ref.forEach(item=>{\n        data +=(item.id+',')\n      })\n      data = data.substr(0,data.length-1)\n      deleteById(data).then(res=>{\n        this.$notify({\n          title: '成功',\n          message: res.message,\n          type: 'success',\n          duration: 2000\n        })\n        this.listRecord()\n      })\n\n    },\n    controlfast(){\n      this.isclose=!this.isclose\n      if(this.mainwidth===\"65%\")\n        this.mainwidth=\"80%\"\n      else\n        this.mainwidth=\"65%\"\n    }\n  }\n}\n",null]}