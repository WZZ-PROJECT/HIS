{"remainingRequest":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\XM\\his-web\\src\\views\\outpatient\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\XM\\his-web\\src\\views\\outpatient\\index.vue","mtime":1602056307723},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1600936442292}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Record from './workstation/record'\nimport Inspection from './workstation/inspection'\nimport Examine from './workstation/examine'\nimport Prescription from './workstation/prescription'\nimport Handle from './workstation/handle'\nimport Comfirm from './workstation/confirm'\nimport Cprescription from './workstation/Cprescription'\nimport Bill from './workstation/bill'\n\nimport historyRecord from './workstation/historyRecord'\nimport historyInspection from './workstation/historyInspection'\nimport historyExamine from './workstation/historyExamine'\nimport historyPrescription from './workstation/historyPrescription'\nimport historyHandle from './workstation/historyHandle'\nimport historyComfirm from './workstation/historyComfirm'\nimport historyCprescription from './workstation/historyCprescription'\nimport historyBill from './workstation/historyBill'\n\n\nimport {getPatientList,bindPatient,startDiagnosis} from '@/api/outpatient/patient'\nimport {endDiagnosis,getnonend,endgetnonend,Clinical} from '@/api/outpatient/dmscase'\nimport { deepClone } from '@/utils'\nimport { truncate } from 'fs';\nexport default{\n  components: {Record,Inspection,Examine,Prescription,Handle,Comfirm,Cprescription,Bill,\n    historyRecord,historyInspection,historyExamine,historyPrescription,historyHandle,historyComfirm,historyCprescription,historyBill},\n  data(){\n    return{\n      confirmed:true,\n      comfirmdisabled:true,\n      firstdisabled:true,\n      mask:true,\n      loaddepp:true,\n      patient: {},\n      deptWaitList:[],\n      personalDuringList:[],\n      personalEndList:[],\n      personalWaitList:[],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      mouldname:'',\n      dialog1: false,\n      dialog2: false,\n      search:'',\n      isaside: true,\n      activeName: 'first',\n      activeName2: 'first',\n      falg:true,\n    };\n  },\n  created(){\n    this.getPatientList()\n  },\n  methods: {\n    comfirmdms(val){\n      if(val==2){\n        this.endcomfirmdms()\n      }else {\n        getnonend(this.patient.registrationId).then(res=>{\n          this.comfirmdisabled = true\n          if(res.data.dmsCaseHistoryList.length!==0){\n            this.activeName2 = 'second'\n            if(res.data.dmsCaseHistoryList[0].status===1){\n              this.comfirmdisabled = false\n              this.activeName2 = 'fiveth'\n            }\n            this.firstdisabled = false\n\n          }\n          else{\n            this.firstdisabled = true\n            this.activeName2 = 'first'\n          }\n          this.patient = val\n          this.$refs.record.controlfast()\n        })\n      }\n    },\n\n    //确诊之后调用此方法，获得已确诊信息\n    endcomfirmdms(){\n      endgetnonend(this.patient.registrationId).then(res=>{\n        this.comfirmdisabled = true\n        if(res.data.dmsCaseHistoryList.length!==0){\n          this.activeName2 = 'second'\n          if(res.data.dmsCaseHistoryList[0].status===2){\n            this.comfirmdisabled = false\n            this.activeName2 = 'fiveth'\n          }\n          this.firstdisabled = false\n        }\n        else{\n          this.firstdisabled = true\n          this.activeName2 = 'first'\n        }\n        this.patient = val\n        this.$refs.record.controlfast()\n      })\n    },\n\n    priliminary(){\n      getnonend(this.patient.registrationId).then(res=>{\n        this.comfirmdisabled = true\n        if(res.data.dmsCaseHistoryList.length!==0){\n          if(res.data.dmsCaseHistoryList[0].status===2){\n            this.comfirmdisabled = false\n            this.activeName2 = 'fiveth'\n          }\n          this.firstdisabled = false\n          this.activeName2 = 'second'\n        }\n        else{\n          this.firstdisabled = true\n          this.activeName2 = 'first'\n        }\n        this.patient = val\n        this.$refs.record.controlfast()\n      })\n    },\n    endDiagnosis(){\n      endDiagnosis(this.patient.registrationId).then(res=>{\n        this.$notify({\n          title: '成功',\n          message: '已诊毕！',\n          type: 'success',\n          duration: 2000\n        })\n        this.showaside()\n        this.getPatientList()\n      })\n    },\n    continuing(val){\n      this.falg = true\n      this.confirmed=true\n      this.$confirm('确认继续诊断患者 '+val.patientName+'?', '就诊', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'success'\n      }).then(()=>{\n        Clinical(val.registrationId).then(res=>{\n          this.comfirmdisabled = true\n          if(res.data.dmsCaseHistoryList.length!==0){\n            this.activeName2 = 'second'\n            if(res.data.dmsCaseHistoryList[0].status===2){\n              this.comfirmdisabled = false\n              this.activeName2 = 'fiveth'\n            }\n            this.firstdisabled = false\n\n          }\n          else{\n            this.firstdisabled = true\n            this.activeName2 = 'first'\n          }\n          this.patient = val\n          this.showaside()\n          this.$refs.record.controlfast()\n        })\n      })\n    },\n    continuingEnd(val){\n      this.confirmed=false\n      this.$confirm('确认查看患者 '+val.patientName+'的就诊信息?', '信息', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'success'\n      }).then(()=>{\n        Clinical(val.registrationId).then(res=>{\n          this.falg = false\n          this.patient = val\n          this.showaside()\n          this.$refs.record.controlfast()\n        })\n      })\n    },\n\n    bindPatient(val){\n      this.$confirm('确认绑定患者 '+val.patientName+'?', '就诊', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'success'\n      }).then(()=>{\n\n        bindPatient(val.registrationId,this.$store.getters.id).then(res=>{\n          this.getPatientList()\n          this.$notify({\n            title: '成功',\n            message: '成功绑定该患者!',\n            type: 'success',\n            duration: 2000\n          })\n        })\n      })\n    },\n    async handleCurrentChange(val){\n      this.falg = true\n      this.confirmed=true\n      this.$confirm('确认开始诊断患者 '+val.patientName+'?', '就诊', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'success'\n      }).then(()=>{\n        startDiagnosis(val.registrationId).then(res=>{\n          this.$notify({\n            title: '成功',\n            message: '开始诊断',\n            type: 'success',\n            duration: 2000\n          })\n          this.patient = val\n          this.showaside()\n          this.$refs.record.controlfast()\n        })\n\n      })\n\n    },\n    async getPatientList(){\n      this.loaddepp = true\n      await getPatientList(this.$store.getters.id).then(res=>{\n        this.deptWaitList = res.data.deptWaitList\n        this.personalDuringList = res.data.personalDuringList\n        this.personalEndList = res.data.personalEndList\n        this.personalWaitList = res.data.personalWaitList\n        this.loaddepp = false\n      }).catch(err=>{\n        this.loaddepp = false\n      })\n    },\n    showaside(){\n      this.getPatientList()\n      if(this.isaside===false){\n        this.isaside=true;\n        this.mask = true\n      }\n      else{\n        this.isaside = false\n        this.mask = false\n      }\n    },\n    storeRecord(){\n      this.dialog1=true;\n    }\n  }\n}\n",null]}