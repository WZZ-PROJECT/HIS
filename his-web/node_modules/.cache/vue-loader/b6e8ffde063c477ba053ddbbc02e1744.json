{"remainingRequest":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IdeaProjects\\HIS\\HIS-web\\src\\views\\outpatient\\maintain\\drugModel.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\src\\views\\outpatient\\maintain\\drugModel.vue","mtime":1596785876399},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {listModel,updateModel,createModel,deleteModel} from '@/api/drugmodel'\r\nimport {getdrugList,selectById} from '@/api/drug'\r\nimport Pagination from '@/components/Pagination'\r\nimport { deepClone,parseTime } from '@/utils'\r\nexport default {\r\n    components: {Pagination},\r\n  data(){\r\n    return{\r\n      page:{\r\n        pageNum:1,\r\n        pageSize:10,\r\n      },\r\n      oneprescription:{\r\n        name:'',\r\n        druglist:[],\r\n        amount:0,\r\n        status:0,\r\n      },\r\n      itemdrugList:[],\r\n      drugList:[],\r\n      searchdrug:'',\r\n      choices:[],\r\n      dialogVisible:false,\r\n      alldrugList:[],\r\n      nondrugList:[],\r\n      edit:0,\r\n      model:{},\r\n      total2:0,\r\n      loading:false,\r\n      isaside:false,\r\n      asidewidth:\"100%\",\r\n      total:0,\r\n      listQuery:{\r\n        id:'',\r\n        status:1,\r\n        name:'',\r\n        scope:0,\r\n        ownId:this.$store.getters.id,\r\n        aim:'',\r\n        code:'',\r\n        type:1,\r\n        pageSize:20,\r\n        pageNum:1,\r\n        isAdmin:'0'\r\n      },\r\n      modelList:[],\r\n      queryModel:{\r\n        name:'',\r\n        range:'',\r\n        type:''\r\n      }\r\n    }\r\n  },\r\n  created(){\r\n    this.getModelList()\r\n  },\r\n  methods:{\r\n    addDrug(){\r\n      this.dialogVisible = false\r\n      this.itemdrugList = this.oneprescription.druglist\r\n      this.itemdrugList.forEach(item=>{\r\n        item.totalprice = Math.floor((item.price*item.num)*100)/100\r\n      })\r\n    },\r\n    async getdrugList(type) {\r\n      let data = {}\r\n      data.pageSize = this.page.pageSize\r\n      data.pageNum = this.page.pageNum\r\n      if(type!==0)\r\n        data.typeId = type\r\n      data.name = this.searchdrug\r\n      const response = await getdrugList(data)\r\n      this.drugList = response.data.list\r\n      this.total2 = response.data.total\r\n    },\r\n    deldrug(row){\r\n      this.oneprescription.druglist = this.oneprescription.druglist.filter(item=>{\r\n        if(item.id===row.id)\r\n          return false\r\n        return true\r\n      })\r\n      this.oneprescription.amount = 0\r\n      this.oneprescription.druglist.forEach(item=>{\r\n        this.oneprescription.amount += item.price\r\n      })\r\n      this.oneprescription.amount = Math.floor((this.oneprescription.amount+0.5)*100)/100\r\n    },\r\n    choosedrug(val){\r\n      let flag = 1\r\n      this.oneprescription.druglist.forEach(item=>{\r\n        if(item.id===val.id){\r\n          item.num+=1\r\n          flag=0\r\n        }\r\n      })\r\n      if(flag){\r\n        this.oneprescription.amount +=val.price\r\n        this.oneprescription.amount = Math.floor((this.oneprescription.amount+0.5)*100)/100\r\n        this.oneprescription.druglist.push(val)\r\n        this.oneprescription.druglist.forEach(item=>{\r\n          if(item.num===undefined)\r\n            item.num=1\r\n        })\r\n      }\r\n    },\r\n    deleteModel(row){\r\n       this.$confirm('确认删除当前模板?', '警告', {\r\n        confirmButtonText: '确认',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(()=>{      \r\n        deleteModel(row.id).then(res=>{\r\n        this.getModelList()\r\n        this.$notify({\r\n          title: '成功',\r\n          message: res.message,\r\n          type: 'success',\r\n          duration: 2000\r\n        })\r\n      })})\r\n    },\r\n    createModel(){\r\n      let data = deepClone(this.model)\r\n      data.status = 1\r\n      data.ownId = this.$store.getters.id\r\n      data.dmsMedicineModelItemList = deepClone(this.itemdrugList)\r\n      data.type = 1\r\n      createModel(data).then(res=>{\r\n        this.getModelList()\r\n        this.$notify({\r\n          title: '成功',\r\n          message: res.message,\r\n          type: 'success',\r\n          duration: 2000\r\n        })\r\n      })\r\n      this.showaside()\r\n    },\r\n    updateModel(){\r\n      let data = deepClone(this.model)\r\n      data.nonDrugIdList = deepClone(this.choices)\r\n      data.createTime = ''\r\n      data.ownId = this.$store.getters.id\r\n      updateModel(data).then(res=>{\r\n        this.$notify({\r\n          title: '成功',\r\n          message: '修改成功',\r\n          type: 'success',\r\n          duration: 2000\r\n        })\r\n        this.getModelList()\r\n      })\r\n      this.showaside()\r\n    },\r\n    confirmItem(){\r\n      this.nondrugList = this.alldrugList.filter(item=>{\r\n        if(this.choices.includes(item.id))\r\n          return true\r\n      })\r\n      this.dialogVisible=!this.dialogVisible\r\n    },\r\n    addItem(){\r\n      this.dialogVisible = true\r\n      this.getdrugList()\r\n    },\r\n    getAllNondrug(){\r\n      getAllNondrug().then(res=>{\r\n        this.alldrugList = res.data\r\n        this.alldrugList.forEach(item=>{\r\n          item.label = item.name\r\n          item.key = item.id\r\n        })\r\n      })\r\n    },\r\n    async getModelList(){\r\n      listModel(this.listQuery).then(res=>{\r\n        this.modelList = res.data.list\r\n        this.modelList.forEach(model=>{\r\n          model.dmsMedicineModelItemList.forEach(item=>{\r\n          selectById(item.id).then(res=>{\r\n            item.name = res.data.name\r\n            item.format = res.data.format\r\n            item.price = res.data.price\r\n            item.totalprice = item.price*item.num\r\n            item.mnemonicCode = res.data.mnemonicCode\r\n            })\r\n          })\r\n          model.createTime = parseTime(model.createTime)\r\n        })\r\n        this.total = res.data.total\r\n      })\r\n      \r\n    },\r\n    searchModel(){\r\n      this.loading = true\r\n      this.getModelList()\r\n      this.loading = false\r\n    },\r\n    showaside(type){\r\n      if(this.asidewidth===\"100%\")\r\n        this.asidewidth=\"0%\"\r\n      else\r\n        this.asidewidth=\"100%\"\r\n      this.isaside=!this.isaside\r\n      if(type==='edit')\r\n        this.edit = 1\r\n      else if(type==='add'){\r\n        this.choices = []\r\n        this.nondrugList = []\r\n        this.itemdrugList = []\r\n        this.model = {}\r\n        this.edit = 0 \r\n      }\r\n      else\r\n        this.edit = 0\r\n    },\r\n    async editModel(row){\r\n      this.model = deepClone(row)\r\n      this.itemdrugList = this.model.dmsMedicineModelItemList\r\n      this.showaside('edit')\r\n    }\r\n  }\r\n}\r\n",null]}