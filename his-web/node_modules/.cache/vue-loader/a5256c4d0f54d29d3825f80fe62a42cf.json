{"remainingRequest":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\XM\\his-web\\src\\views\\technology\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\XM\\his-web\\src\\views\\technology\\index.vue","mtime":1602335525688},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1600936442292}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import Upload from '../technology/upload'\n  import {getMechlist,log,uploadResult} from '@/api/technology'\n  import {getdrugList} from '@/api/drug'\n  import Pagination from '@/components/Pagination'\n  import {apply} from '@/api/outpatient/prescription'\n  import {charge} from '@/api/regist'\n  export default{\n    components:{Upload,Pagination},\n    data(){\n      return{\n        uploadpatient:'',\n        extraname:{\n          name:'',\n          type:1\n        },\n        page:{\n          pageNum:1,\n          pageSize:10,\n        },\n        oneprescription:{\n          name:'',\n          druglist:[],\n          amount:0,\n          status:0,\n        },\n        patient:{},\n        uploadvisible:false,\n        MechList:[],\n        drugList:[],\n        searchdrug:'',\n        dialogTableVisible:false,\n        search:'',\n        isaside: true,\n        activeName: 'first',\n        activeName2: 'first',\n        refs:{\n          chargeItemId:'',\n          invoiceNo:'',\n          operatorId:'',\n          settlementCatId:7,\n          amount:'',\n          type:''\n        },\n        data2: [{\n          date: '0001',\n          name: '王小虎1',\n          address: '验血',\n          status: 0\n        }, {\n          date: '0002',\n          name: '王小虎2',\n          address: '验血',\n          status: 0\n        }, {\n          date: '0003',\n          name: '王小虎3',\n          address: '验血',\n          status: 0\n        }, {\n          date: '0004',\n          name: '王小虎4',\n          address: '验血',\n          status: 3\n        },{\n          date: '0004',\n          name: '王小虎4',\n          address: '验血',\n          status: 2\n        },{\n          date: '0004',\n          name: '王小虎4',\n          address: '验血',\n          status: 1\n        },{\n          date: '0004',\n          name: '王小虎4',\n          address: '验血',\n          status: 1\n        }]\n      };\n    },\n    created(){\n      this.getMechlist()\n    },\n    methods: {\n      reflect(){\n        this.$notify({\n            title: '成功',\n            message: '上传成功',\n            type: 'success',\n            duration: 2000\n          })\n        this.uploadvisible = false\n        this.getMechlist()\n      },\n      comfirmExtra(){\n        let data = {}\n        data = this.oneprescription\n        data.registrationId = this.patient.registrationId\n        data.name = this.extraname.name\n        data.createStaffId = this.$store.getters.id\n        data.status = 1\n        data.amount = this.oneprescription.amount\n        data.dmsMedicineItemRecordList = data.druglist\n        data.dmsMedicineItemRecordList.forEach(item=>{\n          item.drugId = item.id\n        })\n        apply(data).then(res=>{\n          this.$notify({\n            title: '成功',\n            message: res.message,\n            type: 'success',\n            duration: 2000\n          })\n        })\n        this.dialogTableVisible = false\n      },\n      deldrug(row){\n        this.oneprescription.druglist = this.oneprescription.druglist.filter(item=>{\n          if(item.id===row.id)\n            return false\n          return true\n        })\n        this.oneprescription.amount = 0\n        this.oneprescription.druglist.forEach(item=>{\n          this.oneprescription.amount += item.price\n        })\n        this.oneprescription.amount = Math.floor((this.oneprescription.amount+0.5)*100)/100\n      },\n      choosedrug(val){\n        let flag = 1\n        this.oneprescription.druglist.forEach(item=>{\n          if(item.id===val.id){\n            item.num+=1\n            flag=0\n          }\n        })\n        if(flag){\n          this.oneprescription.amount +=val.price\n          this.oneprescription.amount = Math.floor((this.oneprescription.amount+0.5)*100)/100\n          this.oneprescription.druglist.push(val)\n          this.oneprescription.druglist.forEach(item=>{\n            if(item.num===undefined)\n              item.num=1\n          })\n        }\n      },\n      changeextratype(val){\n        if(val===1){\n          this.getdrugList(101)\n        }\n        else{\n          this.getdrugList(103)\n        }\n      },\n      async getdrugList(type) {\n        let data = {}\n        data.pageSize = this.page.pageSize\n        data.pageNum = this.page.pageNum\n        if(type!==0)\n          data.typeId = type\n        data.name = this.searchdrug\n        const response = await getdrugList(data)\n        this.drugList = response.data.list\n        this.total = response.data.total\n      },\n      upload(val){\n        this.uploadpatient = val.itemRecordId\n        this.uploadvisible = true\n      },\n      getMechlist(){\n        getMechlist(this.$store.getters.deptId).then(res=>{\n          this.MechList = res.data\n        })\n      },\n      addExtra(row){\n        this.patient = row\n        this.dialogTableVisible= true\n        this.getdrugList(101)\n      },\n      showaside(){\n        this.isaside = !this.isaside\n      },\n      register(row){\n        this.$confirm('确定为 '+row.patientName+' 登记项目 '+row.itemName+' 吗?', '项目登记', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(()=>{\n        let data = {}\n        data.id = row.itemRecordId\n        data.logStaffId = this.$store.getters.id\n        log(data).then(res=>{\n          this.$notify({\n            title: '成功',\n            message: res.message,\n            type: 'success',\n            duration: 2000\n          })\n          this.getMechlist()\n        })\n      })\n      },\n      // 缴费\n      charge(val){\n        let data = [];\n        this.refs.chargeItemId = val.itemRecordId\n        this.refs.amount = val.amount\n        this.refs.invoiceNo = this.orderCode()\n        this.refs.type = val.type+1\n        this.refs.operatorId = this.$store.getters.id\n        data.push(this.refs);\n        charge(data).then(res=>{\n          this.$notify({\n            title: '成功',\n            message: '缴费成功',\n            type: 'success',\n            duration: 2000\n          })\n          this.getMechlist()\n        })\n      },\n      // 生成发票号\n      orderCode() {\n        let orderCode = '';\n        for (let i = 0; i < 6; i++) //6位随机数，用以加在时间戳后面。\n        {\n          orderCode += Math.floor(Math.random() * 10);\n        }\n        orderCode = new Date().getTime() + orderCode;  //时间戳，用来生成订单号。\n        console.log(orderCode)\n        return orderCode;\n      }\n  }\n}\n",null]}