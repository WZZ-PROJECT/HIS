{"remainingRequest":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\XM\\his-web\\src\\views\\admin\\settleCat.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\XM\\his-web\\src\\views\\admin\\settleCat.vue","mtime":1601366454592},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1600936436646},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1600936442292}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport path from 'path'\nimport { deepClone } from '@/utils'\nimport { getSettleCatlist,getAllSettleCat,createSettleCat,deleteSettleCat,updateSettleCat } from '@/api/admin'\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\nimport { Promise } from 'q';\n\nconst defaultDepart = {\n  id:'',\n  code: '',\n  name: '',\n}\n\nexport default {\n  components: {Pagination},\n  data() {\n    return {\n      SettleCatList:[],\n      SettleCat:{},\n      depart: Object.assign({},defaultDepart),\n      depList: [],\n      dialogVisible: false,\n      dialogType: 'new',\n      checkStrictly: false,\n      defaultProps: {\n        children: 'children',\n        label: 'title'\n      },\n      deptype:[1,2,3,4],\n      total: 0,\n      listLoading: true,\n      allCatId:[],\n      allDep:[],\n      allType:[],\n      listQuery: {\n        id: '',\n        code: '',\n        name: '',\n        status:'',\n        page: 1,\n        limit: 20\n      },\n      downloadLoading: false,\n      rules:{\n        name:[\n          {required: true, message: '请输入结算类别名称',trigger: 'blur'}\n        ]\n      },\n      deplistref:[]\n    }\n  },\n  computed: {\n\n  },\n  created() {\n    // Mock: get all routes and roles list from server\n    this.getDeplist()\n  },\n  methods: {\n    async getDeplist() {\n      this.listLoading = true\n      const response = await getSettleCatlist(this.listQuery)\n      console.log(response)\n      this.depList = response.data.list\n      this.total = response.data.total\n      this.listLoading = false\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getDeplist()\n    },\n    handleAdd() {\n      this.resetTemp()\n      this.dialogType = 'new'\n      this.dialogVisible = true\n      this.checkStrictly = true\n      this.$nextTick(() => {\n        this.$refs['depart'].clearValidate()\n      })\n    },\n    handleEdit(row) {\n      this.resetTemp()\n      this.depart = Object.assign({}, row) // copy obj\n      this.dialogType = 'edit'\n      this.dialogVisible = true\n      this.checkStrictly = true\n      this.$nextTick(() => {\n        this.$refs['depart'].clearValidate()\n      })\n    },\n    resetTemp() {\n      this.depart.id=''\n      this.depart.name=''\n      this.depart.catId=''\n      this.depart.code=''\n      this.depart.type=''\n    },\n    formatJson(filterVal, jsonData) {\n      return jsonData.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    },\n    changedep(val){\n      this.deplistref=val;\n    },\n    handleSomeDelete(){\n      if (this.deplistref.length===0){\n        this.$notify({\n          title: '提示',\n          message: \"请选择结算累别！\",\n          type: 'warning',\n          duration: 2000\n        })\n        return;\n      }\n      this.$confirm('确认删除选中结算类别?', '警告', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(()=>{\n      let delsom =''\n      for(let i=0;i<this.deplistref.length;i++){\n        if(i!==this.deplistref.length-1)\n          delsom=delsom+(this.deplistref[i].id)+','\n        else\n          delsom=delsom+(this.deplistref[i].id)\n      }\n\n      console.log(delsom)\n        if(delsom != null && delsom!= ''){\n          deleteSettleCat(delsom).then(res=>{\n              this.$notify({\n                title: '成功',\n                message: res.message,\n                type: 'success',\n                duration: 2000\n              })\n              this.getDeplist()\n            }\n          )\n        }\n\n      })\n    }\n    ,\n    handleDelete(row) {\n      this.$confirm('确认删除当前结算类别?', '警告', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(()=>{\n      deleteSettleCat(row.id).then(res=>{\n        this.$notify({\n        title: '成功',\n        message: '已删除该结算类别',\n        type: 'success',\n        duration: 2000\n      })\n      this.getDeplist()\n      })\n      })\n    },\n    async handleDownload() {\n      let res = await getAllSettleCat()\n      if(res.data.length === 0) {\n        this.$notify({\n          title: '暂无数据',\n          message: '暂无数据！',\n          type: 'warning',\n          duration: 2000\n        })\n        return;\n      }\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const tHeader = ['编号', '结算类别名']\n        const filterVal = ['id', 'name']\n        const data = this.formatJson(filterVal, res.data)\n        excel.export_json_to_excel({\n          header: tHeader,\n          data,\n          filename: '结算类别'\n        })\n        this.downloadLoading = false\n      })\n    },\n    async confirmDep(formName){\n      this.$refs[formName].validate((valid)=>{\n        if(valid){\n          const isEdit = this.dialogType === 'edit'\n          this.listLoading=true\n          if(isEdit){\n            console.log(this.depart.id)\n            updateSettleCat(this.depart).then(res=>{\n                this.getDeplist()\n                this.$notify({\n                title: '成功',\n                message: '已修改该结算类别',\n                type: 'success',\n                duration: 2000\n              })\n            })\n            this.dialogVisible=false\n          }else{\n            createSettleCat(this.depart).then(res=>{\n              this.getDeplist()\n              this.$notify({\n              title: '成功',\n              message: res.message,\n              type: 'success',\n              duration: 2000\n            })\n            this.dialogVisible=false\n            })\n          }\n        }\n      })\n    },\n  }\n}\n",null]}