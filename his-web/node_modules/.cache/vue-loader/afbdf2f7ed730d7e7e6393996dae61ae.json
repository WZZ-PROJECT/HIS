{"remainingRequest":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IdeaProjects\\HIS\\HIS-web\\src\\views\\outpatient\\maintain\\mould.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\src\\views\\outpatient\\maintain\\mould.vue","mtime":1596785876401},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  let id = 1000;\nimport {getDmsDislist,parseList} from '@/api/diagnosis'\nimport {listModelCatTree,createModel,deleteModel,updateModel,getModelDetail} from '@/api/outpatient/dmscasemodel'\nimport {selectByType,addfre,delfre} from '@/api/outpatient/frequentuse'\nimport {deepClone} from '@/utils'\nimport Pagination from '@/components/Pagination'\n  export default {\n    components: {Pagination},\n    data() {\n      return {\n        selectfre:false,\n        dialogTableVisible:false,\n        record:[],\n        modeldetail:false,\n        editmodel:{},\n        parentval:{},\n        newmodel:{},\n        addnodevisible:false,\n        showCheck:false,\n        data: [],\n        disQuery: {\n          catId: '',\n          code: '',\n          name: '',\n          icd: '',\n          status: '',\n          pageSize: 8,\n          pageNum: 1\n        },\n        disList:[],\n        total:0\n      }\n    },\n    created(){\n      this.listModelCatTree(this.editmodel)\n    },\n    methods: {\n      changeModel(){\n        this.editmodel.priliminaryDiseIdList = ''\n        this.editmodel.priliminaryDiseStrList = ''\n        this.record.forEach(item=>{\n          this.editmodel.priliminaryDiseIdList += (item.id+',')\n          this.editmodel.priliminaryDiseStrList += (item.name+',')\n        })\n        this.editmodel.priliminaryDiseIdList = this.editmodel.priliminaryDiseIdList.substr(0,this.editmodel.priliminaryDiseIdList.length-1)\n        this.editmodel.priliminaryDiseStrList = this.editmodel.priliminaryDiseStrList.substr(0,this.editmodel.priliminaryDiseStrList.length-1)\n        updateModel(this.editmodel).then(res=>{\n          this.$notify({\n            title: '成功',\n            message: '修改成功',\n            type: 'success',\n            duration: 2000\n          })\n        })\n      },\n      async getDis(){\n        const res = await getDmsDislist(this.disQuery)\n        this.disList = res.data.list\n        this.total = res.data.total\n      },\n      addDis(){\n        this.dialogTableVisible=true\n        this.getDis()\n      },\n      deleteDis(row){\n        this.record=this.record.filter(item=>{\n          if(item.id===row.id)\n            return false\n          return true\n        })\n      },\n      selectDis(val){\n        let flag = 1\n        this.record.forEach(item=>{\n          if(item.icd===val.icd){\n            flag=0\n          }\n        })\n        if(flag)\n          this.record.push(val)\n        else\n          alert('已存在该诊断！')\n        this.dialogTableVisible = false\n      },\n      handleNodeClick(val){\n        if(val.type===2){\n          getModelDetail(val.modelId).then(res=>{\n            this.editmodel = res.data\n            this.editmodel.modelId = val.modelId\n            this.record = []\n            parseList(res.data.priliminaryDiseIdList).then(res2=>{\n              this.record = res2.data\n            })\n            this.modeldetail = true\n          })\n        }\n      },\n      listModelCatTree(){\n        this.data = []\n        listModelCatTree(this.$store.getters.id,0).then(res=>{\n          this.data = JSON.parse(JSON.stringify(res.data))\n        })\n      },\n      edit(){\n        this.showCheck=!this.showCheck\n      },\n      appendnode(val){\n        this.addnodevisible = true\n        this.parentval = val\n      },\n      append() {\n        let data = {}\n        data.name = JSON.parse(JSON.stringify(this.newmodel.name))\n        data.type = JSON.parse(JSON.stringify(this.newmodel.type))\n        \n        data.parentId = this.parentval.id\n        data.ownId = this.$store.getters.id\n        data.scope = 0\n        this.addnodevisible = false\n        createModel(data).then(res=>{\n          this.$notify({\n            title: '成功',\n            message: res.data,\n            type: 'success',\n            duration: 2000\n          })\n          this.listModelCatTree()\n        })\n        \n      },\n\n      remove(node, data) {\n        this.$confirm('确认删除 '+ data.name+ ' ?', '警告', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(()=>{\n        deleteModel(data.id).then(res=>{\n          this.$notify({\n            title: '成功',\n            message: res.data,\n            type: 'success',\n            duration: 2000\n          })\n          this.listModelCatTree()\n        })\n      })\n        console.log(data)\n\n      },\n\n    }\n  };\n",null]}