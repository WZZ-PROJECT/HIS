{"remainingRequest":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\XM\\his-web\\src\\views\\admin\\department.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\XM\\his-web\\src\\views\\admin\\department.vue","mtime":1601257506603},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1600936408645},{"path":"F:\\XM\\his-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600936410370},{"path":"F:\\XM\\his-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1600936442292}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport path from 'path'\nimport { deepClone } from '@/utils'\nimport { getDeplist,getAllDep,createDep,deleteDep,updateDep } from '@/api/department'\nimport UploadExcelComponent from '@/components/UploadExcel/index.vue'\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\nimport { Promise } from 'q';\n\nconst defaultDepart = {\n  id:'',\n  code: '',\n  catId: '',\n  name: '',\n  type: ''\n}\n\nexport default {\n  components: {Pagination,UploadExcelComponent},\n\n  data() {\n    return {\n      tableData: [],\n      tableHeader: [],\n      uploadVisible:false,\n      depart: Object.assign({},defaultDepart),\n      depList: [],\n      dialogVisible: false,\n      dialogType: 'new',\n      checkStrictly: false,\n      defaultProps: {\n        children: 'children',\n        label: 'title'\n      },\n      deptype:[1,2,3,4],\n      total: 0,\n      listLoading: true,\n      allCatId:[],\n      allDep:[],\n      allType:[],\n      listQuery: {\n        id: '',\n        code: '',\n        catId: '',\n        name: '',\n        type: '',\n        status:'',\n        page: 1,\n        limit: 20\n      },\n      downloadLoading: false,\n      rules:{\n        code:[\n          {required: true, message: '请输入科室编码',trigger: 'blur'}\n        ],\n        name:[\n          {required: true, message: '请输入科室名称',trigger: 'blur'}\n        ],\n        catId:[\n          {required: true, message: '请选择科室分类',trigger: 'blur'}\n        ],\n        type:[\n          {required: true, message: '请选择科室类别',trigger: 'blur'}\n        ]\n      },\n      deplistref:[]\n    }\n  },\n  computed: {\n\n  },\n  created() {\n    Promise.all([\n    this.getAllDep(),\n    this.getDeplist()\n    ])\n  },\n  methods: {\n    beforeUpload(file) {\n      const isLt1M = file.size / 1024 / 1024 < 1\n      if (isLt1M) {\n        return true\n      }\n      this.$message({\n        message: 'Please do not upload files larger than 1m in size.',\n        type: 'warning'\n      })\n      return false\n    },\n    handleSuccess({ results, header }) {\n      this.tableData = results\n      this.tableHeader = header\n      this.tableData.forEach(item=>{\n        createDep(item).then(res=>{\n          this.getDeplist()\n          this.$notify({\n          title: '成功',\n          message: '成功从Excel导入科室数据',\n          type: 'success',\n          duration: 2000\n        })\n          this.uploadVisible = false\n        })\n      })\n\n    },\n    uploaddept(){\n      this.uploadVisible = true\n    },\n    async getAllDep(){\n      const response = await getAllDep()\n      this.allDep = response.data\n      this.allDep.forEach(item=>{\n        if(this.allCatId.indexOf(item.catId)===-1){\n          this.allCatId.push(item.catId)\n        }\n        if(this.allType.indexOf(item.type)===-1){\n          this.allType.push(item.type)\n        }\n      })\n    },\n    async getDeplist() {\n      this.listLoading = true\n      const response = await getDeplist(this.listQuery)\n      this.depList = response.data.list\n      this.total = response.data.total\n      this.listLoading = false\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getDeplist()\n    },\n    handleAdd() {\n      this.resetTemp()\n      this.dialogType = 'new'\n      this.dialogVisible = true\n      this.checkStrictly = true\n      this.$nextTick(() => {\n        this.$refs['depart'].clearValidate()\n      })\n    },\n    handleEdit(row) {\n      this.resetTemp()\n      this.depart = Object.assign({}, row) // copy obj\n      this.dialogType = 'edit'\n      this.dialogVisible = true\n      this.checkStrictly = true\n      this.$nextTick(() => {\n        this.$refs['depart'].clearValidate()\n      })\n    },\n    resetTemp() {\n      this.depart.id=''\n      this.depart.name=''\n      this.depart.catId=''\n      this.depart.code=''\n      this.depart.type=''\n    },\n    formatJson(filterVal, jsonData) {\n      return jsonData.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    },\n    changedep(val){\n      this.deplistref=val;\n    },\n    handleSomeDelete(){\n      if (this.deplistref.length===0){\n        this.$notify({\n          title: '提示',\n          message: \"请选择科室！\",\n          type: 'warning',\n          duration: 2000\n        })\n        return;\n      }\n        this.$confirm('确认删除选中科室?', '警告', {\n          confirmButtonText: '确认',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(()=>{\n          let delsom =''\n          for(let i=0;i<this.deplistref.length;i++){\n            if(i!==this.deplistref.length-1)\n              delsom=delsom+(this.deplistref[i].id)+','\n            else\n              delsom=delsom+(this.deplistref[i].id)\n          }\n\n          deleteDep(delsom).then(res=>{\n              this.$notify({\n                title: '成功',\n                message: '删除成功',\n                type: 'success',\n                duration: 2000\n              })\n              this.getDeplist()\n            }\n          )\n        })\n    }\n    ,\n    handleDelete(row) {\n      this.$confirm('确认删除当前科室?', '警告', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(()=>{\n      deleteDep(row.id).then(res=>{\n        this.$notify({\n        title: '成功',\n        message: '已删除该科室',\n        type: 'success',\n        duration: 2000\n      })\n      this.getDeplist()\n      })\n      })\n    },\n    handleDownload() {\n      this.getAllDep()\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const tHeader = ['科室编码', '科室名称', '科室分类', '科室类型']\n        const filterVal = ['code', 'name', 'catId', 'type']\n        const data = this.formatJson(filterVal, this.allDep)\n        excel.export_json_to_excel({\n          header: tHeader,\n          data,\n          filename: '科室目录'\n        })\n        this.downloadLoading = false\n      })\n    },\n    async confirmDep(formName){\n      this.$refs[formName].validate((valid)=>{\n        if(valid){\n          console.log(this.depart)\n          const isEdit = this.dialogType === 'edit'\n          this.listLoading=true\n          if(isEdit){\n            console.log(this.depart.id)\n            updateDep(this.depart).then(res=>{\n                this.getDeplist()\n                this.$notify({\n                title: '成功',\n                message: '已修改该科室',\n                type: 'success',\n                duration: 2000\n              })\n            })\n            this.dialogVisible=false\n          }else{\n            createDep(this.depart).then(res=>{\n              this.getDeplist()\n              this.$notify({\n              title: '成功',\n              message: '新增科室成功！',\n              type: 'success',\n              duration: 2000\n            })\n            this.dialogVisible=false\n            })\n          }\n        }\n      })\n    },\n  }\n}\n",null]}