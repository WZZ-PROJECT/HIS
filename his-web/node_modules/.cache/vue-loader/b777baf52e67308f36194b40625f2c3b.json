{"remainingRequest":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IdeaProjects\\HIS\\HIS-web\\src\\views\\admin\\registLevel.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\src\\views\\admin\\registLevel.vue","mtime":1596785876390},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport path from 'path'\r\nimport { deepClone } from '@/utils'\r\nimport {getReglist,getAllReg,createReg,deleteReg,updateReg} from '@/api/admin'\r\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\r\nimport { Promise } from 'q';\r\n\r\nconst defaultDepart = {\r\n  id:'',\r\n  code: '',\r\n  catId: '',\r\n  name: '',\r\n  type: ''\r\n}\r\n\r\nexport default {\r\n  components: {Pagination},\r\n  data() {\r\n    return {\r\n      regList:[],\r\n      reg:{},\r\n      dialogVisible: false,\r\n      dialogType: 'new',\r\n      checkStrictly: false,\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'title'\r\n      },\r\n      total: 0,\r\n      listLoading: true,\r\n      listQuery: {\r\n        code: '',\r\n        name: '',\r\n        price: '',\r\n        seqNo: '',\r\n        status: '',\r\n        page: 1,\r\n        limit: 20\r\n      },\r\n      reglistref:[],\r\n      downloadLoading: false,\r\n      rules:{\r\n        code:[\r\n          {required: true, message: '请输入号别编码',trigger: 'blur'}\r\n        ],\r\n        name:[\r\n          {required: true, message: '请输入号别名称',trigger: 'blur'}\r\n        ],\r\n        price:[\r\n          {required: true, message: '请输入挂号费',trigger: 'blur'}\r\n        ],\r\n        seqNo:[\r\n          {required: true, message: '请选择显示顺序号',trigger: 'blur'}\r\n        ],\r\n        status:[\r\n          {required: true, message: '请设置状态',trigger: 'blur'}\r\n        ]\r\n      },\r\n      allReg:[]\r\n    }\r\n  },\r\n  computed: {\r\n\r\n  },\r\n  created() {\r\n    this.getReglist()\r\n  },\r\n  methods: {\r\n    async getReglist() {\r\n      this.listLoading = true\r\n      const response = await getReglist(this.listQuery)\r\n      this.regList = response.data.list\r\n      this.total = response.data.total\r\n      this.listLoading = false\r\n    },\r\n    handleFilter() {\r\n      this.listQuery.page = 1\r\n      this.getReglist()\r\n    },\r\n    handleAdd() {\r\n      this.resetTemp()\r\n      this.dialogType = 'new'\r\n      this.dialogVisible = true\r\n      this.checkStrictly = true\r\n      this.$nextTick(() => {\r\n        this.$refs['reg'].clearValidate()\r\n      })\r\n    },\r\n    handleEdit(row) {\r\n      this.resetTemp()\r\n      this.reg = Object.assign({}, row) // copy obj\r\n      this.dialogType = 'edit'\r\n      this.dialogVisible = true\r\n      this.checkStrictly = true\r\n      this.$nextTick(() => {\r\n        this.$refs['reg'].clearValidate()\r\n      })\r\n    },\r\n    resetTemp() {\r\n      this.reg={}\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => {\r\n        if (j === 'timestamp') {\r\n          return parseTime(v[j])\r\n        } else {\r\n          return v[j]\r\n        }\r\n      }))\r\n    },\r\n    changedep(val){\r\n      this.reglistref=val;\r\n    },\r\n    handleSomeDelete(){\r\n      this.$confirm('确认删除选中号别?', '警告', {\r\n        confirmButtonText: '确认',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(()=>{\r\n      let delsom =''\r\n      for(let i=0;i<this.reglistref.length;i++){\r\n        if(i!==this.reglistref.length-1)\r\n          delsom=delsom+(this.reglistref[i].id)+','\r\n        else\r\n          delsom=delsom+(this.reglistref[i].id)\r\n      }\r\n\r\n      console.log(delsom)\r\n      deleteReg(delsom).then(res=>{\r\n      this.$notify({\r\n        title: '成功',\r\n        message: res.message,\r\n        type: 'success',\r\n        duration: 2000\r\n      })\r\n            this.getReglist()\r\n      }\r\n      )\r\n      })\r\n    }\r\n    ,\r\n    handleDelete(row) {\r\n      this.$confirm('确认删除当前号别?', '警告', {\r\n        confirmButtonText: '确认',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(()=>{\r\n      deleteReg(row.id).then(res=>{\r\n        this.$notify({\r\n        title: '成功',\r\n        message: '已删除该号别',\r\n        type: 'success',\r\n        duration: 2000\r\n      })\r\n      this.getReglist()\r\n      })\r\n      })\r\n    },\r\n    handleDownload() {\r\n      \r\n      this.downloadLoading = true\r\n      import('@/vendor/Export2Excel').then(excel => {\r\n        const tHeader = ['号别编码', '号别名称', '挂号费', '显示顺序号']\r\n        const filterVal = ['code', 'name', 'price', 'seqNo']\r\n        const data = this.formatJson(filterVal, this.allReg)\r\n        excel.export_json_to_excel({\r\n          header: tHeader,\r\n          data,\r\n          filename: '号别目录'\r\n        })\r\n        this.downloadLoading = false\r\n      })\r\n    },\r\n    confirmDep(formName){\r\n      this.$refs[formName].validate((valid)=>{\r\n        if(valid){\r\n          const isEdit = this.dialogType === 'edit'\r\n          this.listLoading=true\r\n          if(isEdit){\r\n            console.log(this.reg)\r\n            updateReg(this.reg).then(res=>{\r\n                this.getReglist()\r\n                this.$notify({\r\n                title: '成功',\r\n                message: '已修改该号别',\r\n                type: 'success',\r\n                duration: 2000\r\n              })\r\n            })\r\n            this.dialogVisible=false\r\n          }else{\r\n            console.log(this.reg)\r\n            createReg(this.reg).then(res=>{\r\n              this.getReglist()\r\n              this.$notify({\r\n              title: '成功',\r\n              message: res.message,\r\n              type: 'success',\r\n              duration: 2000\r\n            })\r\n            this.dialogVisible=false\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n  }\r\n}\r\n",null]}