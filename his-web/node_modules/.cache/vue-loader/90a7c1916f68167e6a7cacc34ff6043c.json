{"remainingRequest":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IdeaProjects\\HIS\\HIS-web\\src\\views\\pharmacy\\herbal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\src\\views\\pharmacy\\herbal.vue","mtime":1596785876404},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {listPatient,releaseDrug,refundDrug} from '@/api/drugstore'\r\nimport {parseTime,formatTime,deepClone} from '@/utils'\r\nimport {listByIds} from '@/api/outpatient/cprescription'\r\n  export default{\r\n    data(){\r\n      return{\r\n        selectid:'',\r\n        refundVisible:false,\r\n        refundamout:1,\r\n        refundlimit:0,\r\n        refundid:'',\r\n        searchpatient:'',\r\n        sendrefs:[],\r\n        druglist:[],\r\n        druglistgiven:[],\r\n        patient:{},\r\n        undoPatientList:[],\r\n        donePatientList:[],\r\n        visible:false,\r\n        isGiven:false,\r\n        spanArr:[],\r\n        isaside: true,\r\n        activeName: 'first',\r\n        activeName2: 'first',\r\n        position:0\r\n      };\r\n    },\r\n    created(){\r\n      this.listPatient()\r\n    },\r\n    methods: {\r\n      refundDrug(){\r\n        if(this.refundamout>this.refundlimit){\r\n          this.$notify({\r\n            title: '错误',\r\n            message: '输入数量大于可退药数量！',\r\n            type: 'warning',\r\n            duration: 2000\r\n          })\r\n        }\r\n        else if(this.refundamout<=0){\r\n          this.$notify({\r\n            title: '错误',\r\n            message: '退药数量不能小于1！',\r\n            type: 'warning',\r\n            duration: 2000\r\n          })\r\n        }\r\n        else{\r\n          let data = {}\r\n          data.excutorId = this.$store.getters.id\r\n          data.refundItemList = []\r\n          let temp = {}\r\n          temp.refundNum = this.refundamout \r\n          temp.refundPrescriptionItemId = this.refundid\r\n          temp.type = 4\r\n          data.refundItemList.push(temp)\r\n          refundDrug(data).then(res=>{\r\n            this.$notify({\r\n              title: '成功',\r\n              message: '退药成功',\r\n              type: 'success',\r\n              duration: 2000\r\n            })\r\n            this.refundVisible = false\r\n            this.listPatient()\r\n            this.druglistgiven = []\r\n          })\r\n        }\r\n      },\r\n      refund(val){\r\n        this.refundVisible = true\r\n        this.refundlimit = val.currentNum\r\n        this.refundid = val.drugid\r\n      },\r\n      sendDrug(){\r\n        this.sendrefs.forEach(item=>{\r\n          releaseDrug(item.prescriptionId,4).then(res=>{\r\n            this.$notify({\r\n              title: '成功',\r\n              message: res.message,\r\n              type: 'success',\r\n              duration: 2000\r\n            })\r\n            this.listPatient()\r\n            this.druglist = []\r\n            this.druglistgiven = []\r\n          })\r\n        })\r\n      },\r\n      changedep(val){\r\n        this.sendrefs = val\r\n      },\r\n      rowspan() {\r\n      this.spanArr = [];//在data里面定义\r\n      this.position = 0; //在data里面定义\r\n      this.druglist.forEach((item,index) => {\r\n        if( index === 0){\r\n          this.spanArr.push(1);\r\n          this.position = 0;\r\n          item.sequence=index+1;//设置序号\r\n        }else{\r\n          if(this.druglist[index].id === this.druglist[index-1].id ){\r\n            this.spanArr[this.position] += 1;//连续有几行项目名名称相同\r\n            this.spanArr.push(0); // 名称相同后往数组里面加一项0\r\n            //当项目名称相同时，设置当前序号和前一个相同\r\n            this.druglist[index].sequence = this.druglist[index-1].sequence;\r\n          }else{\r\n            this.spanArr.push(1);\r\n            this.position = index;\r\n            //当项目名称不同时，将当前序号设置为前一个序号+1\r\n            this.druglist[index].sequence = this.druglist[index-1].sequence+1;\r\n          }\r\n        }\r\n      })\r\n      },\r\n      objectSpanMethod({ row, column, rowIndex, columnIndex }) {  //表格合并行\r\n        if(columnIndex === 0){  //序号列也进行合并(第一列)\r\n          //this.spanArr这个数组里面存的是table里面连续的有几条数据相同\r\n          //例如:[1,1,2,0,2,0]\r\n          //1  代表的没有连续的相同的\r\n          //2  代表连续的两个相同\r\n          //0  代表是和上一条内容相同\r\n          const _row = this.spanArr[rowIndex];\r\n          const _col = _row>0 ? 1 : 0;\r\n\r\n          return {\r\n            rowspan: _row, //行\r\n            colspan: _col  //列\r\n          }\r\n        }\r\n        if(columnIndex === 1){ //项目列也进行合并(第二列)\r\n          const _row = this.spanArr[rowIndex];\r\n          const _col = _row>0 ? 1 : 0;\r\n          return {\r\n            rowspan: _row,\r\n            colspan: _col\r\n          }\r\n        }\r\n      },\r\n      listPatient(){\r\n        let data = {}\r\n        data.queryDate = parseTime(new Date())\r\n        data.queryDate = data.queryDate.substr(0,10)\r\n        data.type = 4\r\n        listPatient(data).then(res=>{\r\n          this.undoPatientList = res.data.undoPatientList\r\n          this.donePatientList = res.data.donePatientList\r\n        })\r\n      },\r\n      handleGive2(){\r\n        let data = {}\r\n        data.queryDate = parseTime(new Date()).substr(0,10)\r\n        data.type = 4\r\n        listPatient(data).then(res=>{\r\n          this.undoPatientList = res.data.undoPatientList\r\n          this.donePatientList = res.data.donePatientList\r\n          let flag = 0\r\n          this.undoPatientList.forEach(item=>{\r\n            if(item.patientId===this.patient.patientId){\r\n              flag = 1\r\n              this.patient = deepClone(item)\r\n            }\r\n          })\r\n          this.druglist = []\r\n          this.isGiven=false;\r\n          let data = ''\r\n          this.patient.prescriptionIdList.forEach(item=>{\r\n            data += (item+',')\r\n          })\r\n          data = data.substr(0,data.length-1)\r\n          listByIds(data).then(res=>{\r\n            res.data.forEach(item=>{\r\n              let temp = item.id\r\n              item.dmsHerbalItemRecordResultList.forEach(drug=>{\r\n                drug.drugid = drug.id\r\n                drug.id = temp\r\n                this.druglist.push(deepClone(drug))\r\n              })\r\n            })\r\n            this.rowspan()\r\n          })\r\n        })\r\n        \r\n      },\r\n      handleGive(val){\r\n        this.druglist = []\r\n        this.isGiven=false;\r\n        this.patient = deepClone(val)\r\n        let data = ''\r\n        this.patient.prescriptionIdList.forEach(item=>{\r\n          data += (item+',')\r\n        })\r\n        data = data.substr(0,data.length-1)\r\n        listByIds(data).then(res=>{\r\n          res.data.forEach(item=>{\r\n            let temp = item.id\r\n            let temp2 = item.name\r\n            let temp3 = item.createStaffName\r\n            item.dmsHerbalItemRecordResultList.forEach(drug=>{\r\n              drug.drugid = drug.id\r\n              drug.id = temp\r\n              drug.doctorname = temp3\r\n              drug.cname = temp2\r\n              this.druglist.push(deepClone(drug))\r\n            })\r\n          })\r\n          this.rowspan()\r\n        })\r\n        \r\n      },\r\n      handleGiven(val){\r\n        this.isGiven=true;\r\n        this.druglistgiven = []\r\n        this.patient = deepClone(val)\r\n        let data = ''\r\n        this.patient.prescriptionIdList.forEach(item=>{\r\n          data += (item+',')\r\n        })\r\n        data = data.substr(0,data.length-1)\r\n        listByIds(data).then(res=>{\r\n          res.data.forEach(item=>{\r\n            let temp = item.id\r\n            let temp2 = item.name\r\n            let temp3 = item.createStaffName\r\n            item.dmsHerbalItemRecordResultList.forEach(drug=>{\r\n              drug.drugid = drug.id\r\n              drug.id = temp\r\n              drug.doctorname = temp3\r\n              drug.cname = temp2\r\n              this.druglistgiven.push(deepClone(drug))\r\n            })\r\n          })\r\n        })\r\n      },\r\n      showaside(){\r\n        this.isaside = !this.isaside\r\n      },\r\n      register(){\r\n        this.$confirm('确定为 王小虎1 登记项目 验血 吗?', '项目登记', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      })\r\n      }\r\n  }\r\n}\r\n",null]}