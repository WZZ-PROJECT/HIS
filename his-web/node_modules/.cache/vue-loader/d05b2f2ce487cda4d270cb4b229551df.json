{"remainingRequest":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IdeaProjects\\HIS\\HIS-web\\src\\views\\registWork\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\src\\views\\registWork\\index.vue","mtime":1596785876406},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {reprintInvoice,supplementPrintInvoice,listRegisteredPatient,createRegistration,listDocBySkd,refundRegistrationCharge,listChargeByRegistrationId,charge,refundCharge,listRefundByRegistrationId} from '@/api/regist'\r\nimport { getAllDep} from '@/api/department'\r\nimport {selectPatientByIdNo} from '@/api/outpatient/patient'\r\nimport {getAllReg} from '@/api/admin'\r\nimport {parseTime,formatTime,deepClone} from '@/utils'\r\nimport { format } from 'path';\r\nconst defaultpatient ={\r\n  id:\"\",\r\n  name:\"\",\r\n  male:\"\",\r\n  birth:\"\",\r\n  card:\"\",\r\n  fapiao:\"\",\r\n  type:\"\",\r\n  type2:\"\",\r\n  data1:\"\",\r\n  data2:\"\",\r\n  isdone:\"\",\r\n  isget:\"\",\r\n  status:\"\",\r\n  money:\"\",\r\n  kemu:\"\"\r\n}\r\nexport default {\r\n  data(){\r\n    return{\r\n      re1:'',\r\n      re2:'',\r\n      suppregistVisible:false,\r\n      reprintregistVisible:false,\r\n      isbin:0,\r\n      redinvoiceNo:'',\r\n      refundregistVisible:false,\r\n      refundregist:{},\r\n      refundVisible:false,\r\n      settlementCatId:'',\r\n      invoiceNo:'',\r\n      refs:[],\r\n      paymoney:0,\r\n      totalamount:0,\r\n      paylist:[],\r\n      doctList:[],\r\n      regdisabled:true,\r\n      regdisabled2:true,\r\n      alldept:[],\r\n      dmsRegistrationParam:{\r\n        attendanceDate:'',\r\n        deptId:'',\r\n        noon:'',\r\n        amount:0.00,\r\n        skdId:'',\r\n        needBook:'',\r\n        name:'',\r\n        dateOfBirth:'',\r\n        age:'',\r\n        homeAddress:'',\r\n        gender:'',\r\n        phoneNo:'',\r\n        identificationNo:''\r\n      },\r\n      RegisterList:[],\r\n      RegisterRnak:[],\r\n      itemtype:[\r\n        '检查检验',\r\n        '处方',\r\n        '处置'\r\n      ],\r\n      payT:'',\r\n      paytype:[\r\n        {\r\n          value:'1',\r\n          label:'现金'\r\n        },\r\n        {\r\n          value:'2',\r\n          label:'银行卡'\r\n        },\r\n        {\r\n          value:'3',\r\n          label:'医保'\r\n        },\r\n        {\r\n          value:'4',\r\n          label:'信用卡'\r\n        },\r\n        {\r\n          value:'5',\r\n          label:'支付宝'\r\n        },\r\n        {\r\n          value:'6',\r\n          label:'微信'\r\n        },\r\n        {\r\n          value:'7',\r\n          label:'其他'\r\n        }\r\n      ],\r\n      onepatient:Object.assign({},defaultpatient),\r\n      radio:1,\r\n      dialogFormVisible:false,\r\n      isshow:false,\r\n      list:[],\r\n      refundRegisterId:'',\r\n      queryRegister:{\r\n        medicalRecordNo:null,\r\n        queryDate:null,\r\n        pageSize:1000,\r\n        pageNum:1\r\n      },\r\n      total:0,\r\n    };\r\n  },\r\n  created(){\r\n    this.listRegisteredPatient()\r\n    this.getAllDep()\r\n    this.getAllReg()\r\n  },\r\n  methods: {\r\n    supprint(val){\r\n      this.suppregistVisible = true\r\n      this.re1 = val.registrationId\r\n      this.re2 = ''\r\n    },\r\n    supprint2(){\r\n      let data = {}\r\n      data.newInvoiceNo = this.re2\r\n      data.registrationId = this.re1\r\n      supplementPrintInvoice(data).then(res=>{\r\n        this.$notify({\r\n          title: '成功',\r\n          message: '补打发票成功',\r\n          type: 'success',\r\n          duration: 2000\r\n         })\r\n      })\r\n    },\r\n    reprint2(){\r\n      let data = {}\r\n      data.newInvoiceNo = this.re2\r\n      data.oldInvoiceNo = this.re1\r\n      reprintInvoice(data).then(res=>{\r\n        this.$notify({\r\n          title: '成功',\r\n          message: '重打发票成功',\r\n          type: 'success',\r\n          duration: 2000\r\n         })\r\n      })\r\n    },\r\n    reprint(){\r\n      this.re1 = ''\r\n      this.re2 = ''\r\n      this.reprintregistVisible = true\r\n    },\r\n    changeradio1(){\r\n      if(this.isbin===0){\r\n        this.dmsRegistrationParam.amount+=1\r\n        this.isbin =1\r\n      }\r\n    },\r\n    changeradio2(){\r\n      if(this.isbin===1){\r\n        this.dmsRegistrationParam.amount-=1\r\n        this.isbin = 0\r\n      }\r\n    },\r\n    refresh(){\r\n      this.listRegisteredPatient()\r\n    },\r\n    selectPatientByIdNo(){\r\n      this.isshow = true\r\n      this.$prompt('身份证号', '读卡(获取用户身份证号)', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n        }).then(({ value }) => {\r\n          selectPatientByIdNo(value).then(res=>{\r\n            this.dmsRegistrationParam.name = res.data.name\r\n            this.dmsRegistrationParam.dateOfBirth = res.data.dateOfBirth\r\n            this.dmsRegistrationParam.age = res.data.age\r\n            this.dmsRegistrationParam.homeAddress = res.data.homeAddress\r\n            this.dmsRegistrationParam.gender = res.data.gender\r\n            this.dmsRegistrationParam.phoneNo = res.data.phoneNo  \r\n            this.dmsRegistrationParam.identificationNo = value\r\n            console.log(this.dmsRegistrationParam)\r\n            this.$message({\r\n              type: 'success',\r\n              message: '成功读取患者: ' + this.dmsRegistrationParam.name\r\n            });\r\n          })\r\n        })\r\n    },\r\n    comfirmtuihao(){\r\n      let data = {}\r\n      data.oldInvoiceNo = this.invoiceNo\r\n      data.redInvoiceNo = this.redinvoiceNo\r\n      data.registrationId = this.refundRegisterId\r\n      data.operatorId = this.$store.getters.id\r\n      refundRegistrationCharge(data).then(res=>{\r\n        this.$notify({\r\n          title: '成功',\r\n          message: res.message,\r\n          type: 'success',\r\n          duration: 2000\r\n         })\r\n         this.refundregistVisible = false \r\n          this.listRegisteredPatient()\r\n      })\r\n    },\r\n    tuihao(row){\r\n      this.refundregistVisible = true\r\n      this.refundRegisterId = row.registrationId\r\n    },\r\n    refundmoney(){\r\n      if(this.invoiceNo===''||this.invoiceNo===undefined){\r\n        this.$notify({\r\n          title: '警告',\r\n          message: '发票号不能为空！',\r\n          type: 'warning',\r\n          duration: 2000\r\n        })\r\n          return \r\n      }\r\n      let flag = 1\r\n      let inv = ''\r\n      this.refs.forEach(item=>{\r\n        item.settlementCatId = 1\r\n        item.chargeItemId = item.id\r\n        if(inv === '')\r\n          item.invoiceNo = item.invoiceIdfNo\r\n        else{\r\n          if(item.invoiceIdfNo===inv){\r\n            item.invoiceNo = item.invoiceIdfNo\r\n          }\r\n          else\r\n            flag=0\r\n        }\r\n        if(flag===0){\r\n          this.$notify({\r\n            title: '警告',\r\n            message: '不能同时退不同发票号的项目！',\r\n            type: 'warning',\r\n            duration: 2000\r\n          })\r\n          return \r\n        }\r\n        item.newInvoiceNo = this.invoiceNo+1\r\n        item.redInvoiceNo = this.invoiceNo\r\n        item.operatorId = this.$store.getters.id\r\n        item.refundAmount = item.amount\r\n      })\r\n\r\n      refundCharge(this.refs).then(res=>{\r\n        this.$notify({\r\n          title: '成功',\r\n          message: '退费成功',\r\n          type: 'success',\r\n          duration: 2000\r\n         })\r\n         this.refundVisible = false\r\n         this.listRegisteredPatient()\r\n      })\r\n      this.refundregistVisible = false\r\n      this.listRegisteredPatient()\r\n    },\r\n    charge(){\r\n      if(this.invoiceNo===''||this.invoiceNo===undefined||this.settlementCatId===''||this.settlementCatId===undefined)\r\n      {\r\n        this.$notify({\r\n          title: '信息不完整',\r\n          message: '请填写发票号或选择缴费类型！',\r\n          type: 'danger',\r\n          duration: 2000\r\n         })\r\n        return\r\n      }\r\n      let data = this.refs\r\n      data.forEach(item=>{\r\n        item.chargeItemId = item.id\r\n        item.invoiceNo = this.invoiceNo\r\n        item.opratorId = this.$store.getters.id\r\n        item.settlementCatId = this.settlementCatId\r\n      })\r\n      charge(data).then(res=>{\r\n        this.$notify({\r\n          title: '成功',\r\n          message: '缴费成功',\r\n          type: 'success',\r\n          duration: 2000\r\n         })\r\n        this.dialogFormVisible=false\r\n        this.listRegisteredPatient()\r\n      })\r\n      \r\n    },\r\n    handlechange(val){\r\n      this.refs = val\r\n      this.totalamount = 0\r\n      this.refs.forEach(item=>{\r\n        this.totalamount += item.amount\r\n      })\r\n      this.totalamount = this.totalamount.toFixed(2)\r\n    },\r\n    refundRegistrationCharge(row){\r\n      this.onepatient = deepClone(row)\r\n      listRefundByRegistrationId(row.registrationId).then(res=>{\r\n        this.paylist = res.data\r\n        this.paylist.forEach(item=>{\r\n          if(item.createTime!==null){\r\n            item.createTime = parseTime(item.createTime)\r\n          }\r\n        })\r\n        this.refundVisible = true\r\n      })\r\n    },\r\n    createRegistration(){\r\n      if(this.dmsRegistrationParam.invoiceNo === ''||this.dmsRegistrationParam.invoiceNo===undefined){\r\n        this.$notify({\r\n          title: '信息不完整',\r\n          message: '请输入发票号！',\r\n          type: 'warning',\r\n          duration: 2000\r\n         })\r\n        return\r\n      }\r\n      if(this.dmsRegistrationParam.settlementCatId === ''||this.dmsRegistrationParam.settlementCatId===undefined){\r\n        this.$notify({\r\n          title: '信息不完整',\r\n          message: '请选择支付方式！',\r\n          type: 'warning',\r\n          duration: 2000\r\n         })\r\n        return\r\n      }\r\n      this.dmsRegistrationParam.attendanceDate = parseTime(this.dmsRegistrationParam.attendanceDate).substr(0,10)\r\n      this.dmsRegistrationParam.dateOfBirth = parseTime(this.dmsRegistrationParam.dateOfBirth).substr(0,10)\r\n      this.dmsRegistrationParam.opratorId = this.$store.getters.id\r\n      createRegistration(this.dmsRegistrationParam).then(res=>{\r\n        this.$notify({\r\n          title: '成功',\r\n          message: '挂号成功',\r\n          type: 'success',\r\n          duration: 2000\r\n         })\r\n         this.isshow=false\r\n         this.listRegisteredPatient()\r\n         this.dmsRegistrationParam = {}\r\n      })\r\n    },\r\n    choosenoon(val){\r\n      if(val!=='')\r\n        this.listDocBySkd()\r\n    },\r\n    listDocBySkd(){\r\n      let data ={}\r\n      data.date = parseTime(this.dmsRegistrationParam.attendanceDate).substr(0,10)\r\n      data.deptId = this.dmsRegistrationParam.deptId\r\n      data.noon = this.dmsRegistrationParam.noon\r\n      data.registrationRankId = this.dmsRegistrationParam.RegisterRnak\r\n      listDocBySkd(data).then(res=>{\r\n        this.doctList = res.data\r\n        this.regdisabled2=false\r\n      })\r\n    },\r\n    chooseRegister(val){\r\n      if(this.dmsRegistrationParam.RegisterRnak===1&&this.dmsRegistrationParam.attendanceDate!==''&&this.dmsRegistrationParam.deptId!==''){\r\n        this.regdisabled = false\r\n        this.regdisabled2 = false\r\n      }\r\n      else{\r\n        this.regdisabled = true\r\n        this.dmsRegistrationParam.noon = \"\"\r\n        this.dmsRegistrationParam.skdId = \"\"\r\n      }\r\n      this.RegisterRank.forEach(item=>{\r\n        if(item.id===this.dmsRegistrationParam.RegisterRnak){\r\n          this.dmsRegistrationParam.amount=item.price\r\n          if(this.dmsRegistrationParam.needBook)\r\n            this.dmsRegistrationParam.amount+=1\r\n        }\r\n      })\r\n    },\r\n    getAllReg(){\r\n      getAllReg().then(res=>{\r\n        this.RegisterRank = res.data\r\n      })\r\n    },\r\n    getAllDep(){\r\n      getAllDep().then(res=>{\r\n        this.alldept = res.data\r\n      })\r\n    },\r\n    listRegisteredPatient(){\r\n      listRegisteredPatient(this.queryRegister).then(res=>{\r\n        this.RegisterList = res.data.list\r\n        this.RegisterList.forEach(item=>{\r\n          item.patientDateOfBirth = item.patientDateOfBirth.substr(0,10)\r\n          item.attendanceDate = item.attendanceDate.substr(0,10)\r\n        })\r\n        console.log(this.RegisterList)\r\n        this.total = res.data.total\r\n      })\r\n    },\r\n    guahao(){\r\n      this.isshow=!this.isshow;\r\n    },\r\n    handlepay(row){\r\n      this.onepatient = deepClone(row)\r\n      console.log(this.onepatient)\r\n      listChargeByRegistrationId(row.registrationId).then(res=>{\r\n        this.paylist = res.data\r\n        this.paylist.forEach(item=>{\r\n          if(item.createTime!==null){\r\n            item.createTime = parseTime(item.createTime)\r\n          }\r\n        })\r\n      })\r\n      this.dialogFormVisible=true\r\n    }\r\n  },\r\n}\r\n",null]}