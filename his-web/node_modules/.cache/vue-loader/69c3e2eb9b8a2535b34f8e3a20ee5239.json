{"remainingRequest":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IdeaProjects\\HIS\\HIS-web\\src\\views\\admin\\drug.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\src\\views\\admin\\drug.vue","mtime":1596785876390},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\HIS\\HIS-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport path from 'path'\r\nimport { deepClone } from '@/utils'\r\nimport {getdrugList,getAlldrug,updatedrug,deletedrug,createdrug,getAlldosage} from '@/api/drug'\r\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\r\nimport { Promise } from 'q';\r\n\r\nconst defaultDrug = {\r\n  id:'',\r\n  code: '',\r\n  name: '',\r\n  format: '',\r\n  price: '',\r\n  unit: '',\r\n  manufacturer:'',\r\n  dosage:{\r\n    id: '',\r\n  },\r\n  dosageId:'',\r\n  typeID:'',\r\n  mnemonicCode:'',\r\n  stock:'',\r\n  genericName:''\r\n}\r\n\r\nexport default {\r\n  components: {Pagination},\r\n  data() {\r\n    return {\r\n      drug: Object.assign({},defaultDrug),\r\n      drugList:[],\r\n      allDosage:[],\r\n      dialogVisible: false,\r\n      dialogType: 'new',\r\n      checkStrictly: false,\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'title'\r\n      },\r\n      deptype:[1,2,3,4],\r\n      total: 0,\r\n      listLoading: true,\r\n      allCatId:[],\r\n      allDep:[],\r\n      allType:[],\r\n      listQuery: {\r\n        id:'',\r\n        code: '',\r\n        name: '',\r\n        format: '',\r\n        price: '',\r\n        unit: '',\r\n        manufacturer:'',\r\n        dosage:{},\r\n        typeId:'',\r\n        mnemonicCode:'',\r\n        stock:'',\r\n        genericName:'',\r\n        pageNum: 1,\r\n        pageSize: 20\r\n      },\r\n      downloadLoading: false,\r\n      rules:{\r\n       \r\n      },\r\n      deplistref:[]\r\n    }\r\n  },\r\n  computed: {\r\n\r\n  },\r\n  created() {\r\n    // Mock: get all routes and roles list from server\r\n    Promise.all([\r\n    this.getDosage(),\r\n    this.getdrugList()\r\n    ])\r\n  },\r\n  methods: {\r\n    async getDosage(){    \r\n      const response = await getAlldosage()\r\n      this.allDosage = response.data\r\n    },\r\n    async getdrugList() {\r\n      this.listLoading = true\r\n      const response = await getdrugList(this.listQuery)\r\n      this.drugList = response.data.list\r\n      this.total = response.data.total\r\n      this.listLoading = false\r\n    },\r\n    handleFilter() {\r\n      this.listQuery.page = 1\r\n      this.listQuery.typeId = this.listQuery.typeID\r\n      this.getdrugList()\r\n    },\r\n    handleAdd() {\r\n      this.resetTemp()\r\n      this.dialogType = 'new'\r\n      this.dialogVisible = true\r\n      this.checkStrictly = true\r\n      this.$nextTick(() => {\r\n        this.$refs['depart'].clearValidate()\r\n      })\r\n    },\r\n    handleEdit(row) {\r\n      this.resetTemp()\r\n      this.drug = deepClone(row)\r\n      this.drug.typeID = deepClone(row.typeId)\r\n      console.log(this.drug)\r\n      this.dialogType = 'edit'\r\n      this.dialogVisible = true\r\n      this.checkStrictly = true\r\n      this.$nextTick(() => {\r\n        this.$refs['depart'].clearValidate()\r\n      })\r\n    },\r\n    resetTemp() {\r\n      this.drug = Object.assign({},defaultDrug)\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => {\r\n        if (j === 'timestamp') {\r\n          return parseTime(v[j])\r\n        } else {\r\n          return v[j]\r\n        }\r\n      }))\r\n    },\r\n    changedep(val){\r\n      this.deplistref=val;\r\n    },\r\n    handleSomeDelete(){\r\n      this.$confirm('确认删除选中药品?', '警告', {\r\n        confirmButtonText: '确认',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(()=>{\r\n      let delsom =''\r\n      for(let i=0;i<this.deplistref.length;i++){\r\n        if(i!==this.deplistref.length-1)\r\n          delsom=delsom+(this.deplistref[i].id)+','\r\n        else\r\n          delsom=delsom+(this.deplistref[i].id)\r\n      }\r\n      deletedrug(delsom).then(res=>{\r\n      this.$notify({\r\n        title: '成功',\r\n        message: res.message,\r\n        type: 'success',\r\n        duration: 2000\r\n      })\r\n      this.getdrugList()\r\n      }\r\n      )\r\n      })\r\n    }\r\n    ,\r\n    handleDelete(row) {\r\n      this.$confirm('确认删除当前药品?', '警告', {\r\n        confirmButtonText: '确认',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(()=>{\r\n      deletedrug(row.id).then(res=>{\r\n        this.$notify({\r\n        title: '成功',\r\n        message: '已删除该药品',\r\n        type: 'success',\r\n        duration: 2000\r\n      })\r\n      this.getdrugList()\r\n      })\r\n      })\r\n    },\r\n    handleDownload() {\r\n      getAlldrug().then(res=>{\r\n      let alldrug = res.data\r\n      this.downloadLoading = true\r\n      import('@/vendor/Export2Excel').then(excel => {\r\n        const tHeader = ['索引', '药品编码', '药品名称', '药品规格','药品单价','包装单位','生产厂家','药品类型','拼音助记码','通用名','库存']\r\n        const filterVal = ['id', 'code', 'name', 'format','price','unit','manufacturer','typeId','mnemonicCode','genericName','stock']\r\n        const data = this.formatJson(filterVal, alldrug)\r\n        excel.export_json_to_excel({\r\n          header: tHeader,\r\n          data,\r\n          filename: '药品清单'\r\n        })\r\n        this.downloadLoading = false\r\n      })\r\n      })\r\n    },\r\n    async confirmDep(formName){\r\n      this.$refs[formName].validate((valid)=>{\r\n        this.drug.dosageID = this.drug.dosage.id\r\n        this.drug.dosageId = this.drug.dosage.id \r\n        this.drug.typeID = this.drug.typeId\r\n        if(valid){\r\n          const isEdit = this.dialogType === 'edit'\r\n          this.listLoading=true\r\n          if(isEdit){\r\n            updatedrug(this.drug).then(res=>{\r\n                this.getdrugList()\r\n                this.$notify({\r\n                title: '成功',\r\n                message: '已修改该药品',\r\n                type: 'success',\r\n                duration: 2000\r\n              })\r\n            })\r\n            this.dialogVisible=false\r\n          }else{\r\n            createdrug(this.drug).then(res=>{\r\n              this.getdrugList()\r\n              this.$notify({\r\n              title: '成功',\r\n              message: res.message,\r\n              type: 'success',\r\n              duration: 2000\r\n            })\r\n            this.dialogVisible=false\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n  }\r\n}\r\n",null]}